[
    {
        "behavior": {
            "kb_service_output_mapping": [
                {
                    "narrative_system_variable": "workspace",
                    "target_property": "ws"
                },
                {
                    "target_property": "p1",
                    "input_parameter": "p_checkbox"
                },
                {
                    "target_property": "p2",
                    "input_parameter": "p_textarea"
                },
                {
                    "target_property": "p3",
                    "input_parameter": "p_dropdown"
                },
                {
                    "target_property": "p4",
                    "service_method_output_path": [
                        "0",
                        "test_path"
                    ]
                }
            ]
        },
        "info": {
            "name": "Phony Method Spec",
            "id": "PhonyModule/phony_spec"
        },
        "widgets": {
            "input": null
        },
        "parameters": [
            {
                "id": "p_checkbox",
                "field_type": "checkbox",
                "checkbox_options": {
                    "checked_value": 1,
                    "unchecked_value": 0
                }
            },
            {
                "id": "p_textarea",
                "field_type": "textarea"
            },
            {
                "id": "p_dropdown",
                "field_type": "dropdown",
                "dropdown_options": {
                    "options": [
                        {
                            "display": "test.",
                            "value": "test"
                        }
                    ]
                }
            }
        ]
    },
    {
        "info": {
            "ver": "0.0.1",
            "name": "Test Editor",
            "subtitle": "Tests using an Editor as an input parameter.",
            "output_types": [],
            "app_type": "editor",
            "namespace": "NarrativeTest",
            "tooltip": "Tests using an Editor as an input parameter.",
            "git_commit_hash": "3123e5ca804f84bfd0a9415cdfa96198a2004c1c",
            "input_types": [],
            "authors": [
                "wjriehl"
            ],
            "module_name": "NarrativeTest",
            "id": "NarrativeTest/test_editor",
            "categories": [
                "active"
            ]
        },
        "parameters": [
            {
                "field_type": "reads_group_editor",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "",
                "text_options": {
                    "is_output_name": 0,
                    "placeholder": "",
                    "regex_constraint": []
                },
                "disabled": 0,
                "short_hint": "A string input for testing.",
                "default_values": [
                    "foo"
                ],
                "ui_name": "A String",
                "optional": 0,
                "id": "string_input",
                "advanced": 0
            }
        ],
        "job_id_output_field": "docker",
        "fixed_parameters": [],
        "behavior": {
            "kb_service_method": "test_editor",
            "kb_service_version": "3123e5ca804f84bfd0a9415cdfa96198a2004c1c",
            "kb_service_output_mapping": [
                {
                    "target_property": "report_name",
                    "service_method_output_path": [
                        "0",
                        "report_name"
                    ]
                },
                {
                    "target_property": "report_ref",
                    "service_method_output_path": [
                        "0",
                        "report_ref"
                    ]
                },
                {
                    "target_property": "out_value",
                    "service_method_output_path": [
                        "0",
                        "value"
                    ]
                }
            ],
            "kb_service_url": "",
            "kb_service_name": "NarrativeTest",
            "kb_service_input_mapping": [
                {
                    "input_parameter": "string_input",
                    "target_argument_position": 0
                },
                {
                    "target_argument_position": 1,
                    "narrative_system_variable": "workspace"
                }
            ]
        },
        "widgets": {
            "input": "reads_set_editor",
            "output": "null"
        }
    },
    {
        "info": {
            "ver": "0.0.2",
            "name": "Assemble with ARAST",
            "subtitle": "Assemble DNA reads into a set of contigs.",
            "output_types": [
                "KBaseGenomeAnnotations.Assembly"
            ],
            "app_type": "app",
            "namespace": "AssemblyRAST",
            "tooltip": "Assemble DNA reads into a set of contigs.",
            "git_commit_hash": "ab95365dcc44a8225e8c1628ed913e5ea0b2aa2a",
            "input_types": [
                "KBaseAssembly.PairedEndLibrary",
                "KBaseAssembly.SingleEndLibrary",
                "KBaseFile.PairedEndLibrary",
                "KBaseFile.SingleEndLibrary"
            ],
            "authors": [
                "cbun",
                "fangfang"
            ],
            "module_name": "AssemblyRAST",
            "id": "AssemblyRAST/run_arast",
            "categories": [
                "active",
                "assembly"
            ],
            "icon": {
                "url": "img?method_id=AssemblyRAST/run_arast&image_name=arast-blue.png&tag=dev"
            }
        },
        "parameters": [
            {
                "field_type": "text",
                "ui_class": "input",
                "allow_multiple": 1,
                "description": "",
                "text_options": {
                    "is_output_name": 0,
                    "placeholder": "",
                    "regex_constraint": [],
                    "valid_ws_types": [
                        "KBaseAssembly.SingleEndLibrary",
                        "KBaseFile.SingleEndLibrary",
                        "KBaseAssembly.PairedEndLibrary",
                        "KBaseFile.PairedEndLibrary"
                    ]
                },
                "disabled": 0,
                "short_hint": "List of read libraries",
                "default_values": [
                    ""
                ],
                "ui_name": "Read Library",
                "optional": 0,
                "id": "read_library_names",
                "advanced": 0
            },
            {
                "field_type": "text",
                "ui_class": "output",
                "allow_multiple": 0,
                "description": "",
                "text_options": {
                    "is_output_name": 1,
                    "placeholder": "",
                    "regex_constraint": [],
                    "valid_ws_types": [
                        "KBaseGenomeAnnotations.Assembly"
                    ]
                },
                "disabled": 0,
                "short_hint": "Enter a name for the assembled contigs data object",
                "default_values": [
                    "contigs"
                ],
                "ui_name": "Output ContigSet name",
                "optional": 0,
                "id": "output_contigset_name",
                "advanced": 0
            },
            {
                "field_type": "dropdown",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "This method can assemble contigs using several \"recipes\" or curated workflows that can provide intelligent pipelines, automatic parameter selection, or multi-assembler comparisons (see manual page for more information)",
                "dropdown_options": {
                    "options": [
                        {
                            "display": "Automatic Assembly",
                            "value": "auto"
                        },
                        {
                            "display": "Fast Pipeline",
                            "value": "fast"
                        },
                        {
                            "display": "Smart Pipeline",
                            "value": "smart"
                        },
                        {
                            "display": "Kiki Assembler",
                            "value": "kiki"
                        },
                        {
                            "display": "SPAdes Pipeline",
                            "value": "full_spades"
                        }
                    ]
                },
                "disabled": 0,
                "short_hint": "This method can assemble contigs using several \"recipes\" or curated workflows that can provide intelligent pipelines, automatic parameter selection, or multi-assembler comparisons (see manual page for more information)",
                "default_values": [
                    "auto"
                ],
                "ui_name": "Assembly Recipe",
                "optional": 1,
                "id": "recipe",
                "advanced": 0
            },
            {
                "field_type": "dropdown",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "An assembler listed below can be chosen as the preferred tool for assembly.",
                "dropdown_options": {
                    "options": [
                        {
                            "display": "none",
                            "value": ""
                        },
                        {
                            "display": "velvet",
                            "value": "velvet"
                        },
                        {
                            "display": "kiki",
                            "value": "kiki"
                        },
                        {
                            "display": "spades",
                            "value": "spades"
                        },
                        {
                            "display": "a6",
                            "value": "a6"
                        },
                        {
                            "display": "idba",
                            "value": "idba"
                        },
                        {
                            "display": "megahit",
                            "value": "megahit"
                        },
                        {
                            "display": "miniasm",
                            "value": "miniasm"
                        },
                        {
                            "display": "ray",
                            "value": "ray"
                        }
                    ]
                },
                "disabled": 0,
                "short_hint": "An assembler listed below can be chosen as the preferred tool for assembly.",
                "default_values": [
                    ""
                ],
                "ui_name": "Assembler Mode",
                "optional": 1,
                "id": "assembler",
                "advanced": 1
            },
            {
                "field_type": "text",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "Allows the user to rapidly build a customized pipeline combination using the set of available preprocessing, assembly, and postprocessing tools (see the technical description in the manual page for more information); a pipeline is specified via a space-separated string, e.g: bhammer velvet",
                "text_options": {
                    "is_output_name": 0,
                    "placeholder": "",
                    "regex_constraint": []
                },
                "disabled": 0,
                "short_hint": "Allows the user to rapidly build a customized pipeline combination using the set of available preprocessing, assembly, and postprocessing tools (see the technical description in the manual page for more information); a pipeline is specified via a space-separated string, e.g: bhammer velvet",
                "default_values": [
                    ""
                ],
                "ui_name": "Assembly Pipeline",
                "optional": 1,
                "id": "pipeline",
                "advanced": 1
            },
            {
                "field_type": "text",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "",
                "text_options": {
                    "is_output_name": 0,
                    "min_int": 1,
                    "placeholder": "",
                    "regex_constraint": [],
                    "validate_as": "int"
                },
                "disabled": 0,
                "short_hint": "Minimum length of contigs to output, default 300",
                "default_values": [
                    ""
                ],
                "ui_name": "Minimal contig length",
                "optional": 1,
                "id": "min_contig_len",
                "advanced": 1
            }
        ],
        "job_id_output_field": "docker",
        "fixed_parameters": [],
        "behavior": {
            "kb_service_method": "run_arast",
            "kb_service_version": "ab95365dcc44a8225e8c1628ed913e5ea0b2aa2a",
            "kb_service_output_mapping": [
                {
                    "target_property": "workspace_name",
                    "narrative_system_variable": "workspace"
                },
                {
                    "target_property": "report_name",
                    "service_method_output_path": [
                        "0",
                        "report_name"
                    ]
                },
                {
                    "target_property": "report_ref",
                    "service_method_output_path": [
                        "0",
                        "report_ref"
                    ]
                },
                {
                    "target_property": "report_window_line_height",
                    "constant_value": "16"
                }
            ],
            "kb_service_url": "",
            "kb_service_name": "AssemblyRAST",
            "kb_service_input_mapping": [
                {
                    "target_property": "workspace_name",
                    "narrative_system_variable": "workspace"
                },
                {
                    "target_property": "read_library_names",
                    "input_parameter": "read_library_names"
                },
                {
                    "target_property": "output_contigset_name",
                    "input_parameter": "output_contigset_name"
                },
                {
                    "target_property": "recipe",
                    "input_parameter": "recipe"
                },
                {
                    "target_property": "assembler",
                    "input_parameter": "assembler"
                },
                {
                    "target_property": "pipeline",
                    "input_parameter": "pipeline"
                },
                {
                    "target_property": "min_contig_len",
                    "input_parameter": "min_contig_len"
                }
            ]
        },
        "widgets": {
            "input": "null",
            "output": "kbaseReportView"
        }
    },
    {
        "info": {
            "subtitle": "Generate a draft metabolic model based on an annotated genome. \n",
            "name": "MODELSEED - Build Metabolic Model",
            "output_types": [
                "KBaseFBA.FBAModel"
            ],
            "namespace": null,
            "tooltip": "Generate a draft metabolic model based on an annotated genome. \n",
            "input_types": [
                "KBaseFBA.ModelTemplate",
                "KBaseGenomes.Genome"
            ],
            "authors": [],
            "ver": "1.0.0",
            "id": "build_a_metabolic_model",
            "categories": [
                "active",
                "metabolic_modeling"
            ],
            "icon": {
                "url": "img?method_id=build_a_metabolic_model&image_name=modelseed-teal.png"
            }
        },
        "widgets": {
            "input": "null",
            "output": "kbaseTabTable"
        },
        "fixed_parameters": [
            {
                "ui_name": "Template model",
                "description": "Models are generated based on a default template model in KBase. Template models capture the necessary biochemical information based on user-defined scope. KBase primarily uses four template models: (i) Gram positive microbe, (ii) Gram negative microbe, (iii) Core pathways microbe, (iv) Plant. These template models differ from each other by biomass composition and biochemical reaction functional associations. KBase users currently do not have the option to choose or alter the default template model"
            }
        ],
        "parameters": [
            {
                "field_type": "text",
                "ui_class": "input",
                "allow_multiple": 0,
                "description": "A genome including functional annotations generated by KBase\n",
                "text_options": {
                    "is_output_name": 0,
                    "placeholder": "Genome ID for the model to be generated\n",
                    "regex_constraint": [],
                    "valid_ws_types": [
                        "KBaseGenomes.Genome"
                    ]
                },
                "disabled": 0,
                "short_hint": "A genome including functional annotations generated by KBase\n",
                "default_values": [
                    ""
                ],
                "ui_name": "Genome\n",
                "optional": 0,
                "id": "input_genome",
                "advanced": 0
            },
            {
                "field_type": "text",
                "ui_class": "output",
                "allow_multiple": 0,
                "description": "Enter a name for the metabolic model to be created.\n",
                "text_options": {
                    "is_output_name": 1,
                    "placeholder": "Output Metabolic Model Name\n",
                    "regex_constraint": [],
                    "valid_ws_types": [
                        "KBaseFBA.FBAModel"
                    ]
                },
                "disabled": 0,
                "short_hint": "Enter a name for the metabolic model to be created.\n",
                "default_values": [
                    ""
                ],
                "ui_name": "Draft Model\n",
                "optional": 0,
                "id": "output_model",
                "advanced": 0
            },
            {
                "field_type": "checkbox",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "User has the option to generate a core metabolic model that contains central metabolic pathways, electron transport chains and fermentation pathways that are essential for energy biosynthesis (microbial genomes only)\n",
                "checkbox_options": {
                    "checked_value": 1,
                    "unchecked_value": 0
                },
                "disabled": 0,
                "short_hint": "User has the option to generate a core metabolic model that contains central metabolic pathways, electron transport chains and fermentation pathways that are essential for energy biosynthesis (microbial genomes only) \n",
                "default_values": [
                    "0"
                ],
                "ui_name": "Core only?\n",
                "optional": 0,
                "id": "core_model",
                "advanced": 1
            },
            {
                "field_type": "checkbox",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "Generate a metabolic model that includes all biochemical reactions in the entire database\n",
                "checkbox_options": {
                    "checked_value": 1,
                    "unchecked_value": 0
                },
                "disabled": 0,
                "short_hint": "Generate a metabolic model that includes all biochemical reactions in the entire database\n",
                "default_values": [
                    "0"
                ],
                "ui_name": "Full database?\n",
                "optional": 0,
                "id": "full_db_model",
                "advanced": 1
            },
            {
                "field_type": "text",
                "ui_class": "input",
                "allow_multiple": 0,
                "description": "Models are generated based on a default template model in KBase. Template models capture the necessary biochemical information based on user-defined scope. KBase primarily uses four template models: (i) Gram positive microbe, (ii) Gram negative microbe, (iii) Core pathways microbe, and (iv) Plant. These template models differ from each other by biomass composition and biochemical reaction functional associations. KBase users currently do not have the option to choose or alter the default template model.\n",
                "text_options": {
                    "is_output_name": 0,
                    "placeholder": "Template model name\n",
                    "regex_constraint": [],
                    "valid_ws_types": [
                        "KBaseFBA.ModelTemplate"
                    ]
                },
                "disabled": 0,
                "short_hint": "Models are generated based on a default template model in KBase. Template models capture the necessary biochemical information based on user-defined scope. KBase primarily uses four template models: (i) Gram positive microbe, (ii) Gram negative microbe, (iii) Core pathways microbe, and (iv) Plant. These template models differ from each other by biomass composition and biochemical reaction functional associations. KBase users currently do not have the option to choose or alter the default template model.\n",
                "default_values": [
                    ""
                ],
                "ui_name": "Template model\n",
                "optional": 1,
                "id": "template_model",
                "advanced": 1
            }
        ],
        "behavior": {
            "kb_service_method": "genome_to_fbamodel",
            "kb_service_output_mapping": [
                {
                    "target_property": "type",
                    "constant_value": "KBaseFBA.FBAModel"
                },
                {
                    "target_property": "obj",
                    "input_parameter": "output_model"
                },
                {
                    "target_property": "ws",
                    "narrative_system_variable": "workspace"
                }
            ],
            "kb_service_name": "KBaseFBAModeling",
            "kb_service_input_mapping": [
                {
                    "target_property": "genome",
                    "input_parameter": "input_genome"
                },
                {
                    "target_property": "model",
                    "input_parameter": "output_model"
                },
                {
                    "target_property": "coremodel",
                    "input_parameter": "core_model"
                },
                {
                    "target_property": "fulldb",
                    "input_parameter": "full_db_model"
                },
                {
                    "target_property": "templatemodel",
                    "input_parameter": "template_model"
                },
                {
                    "target_property": "workspace",
                    "narrative_system_variable": "workspace"
                }
            ],
            "kb_service_url": ""
        }
    },
    {
        "info": {
            "subtitle": "View RNASeqAnalysis\n",
            "name": "View RNASeqAnalysis",
            "output_types": [],
            "namespace": null,
            "tooltip": "View RNASeqAnalysis\n",
            "input_types": [
                "KBaseRNASeq.RNASeqAnalysis"
            ],
            "authors": [],
            "ver": "1.0.0",
            "id": "view_rnaseq_analysis",
            "categories": [
                "viewers"
            ]
        },
        "widgets": {
            "input": "null",
            "output": "kbaseRNASeqAnalysis"
        },
        "fixed_parameters": [],
        "parameters": [
            {
                "field_type": "text",
                "ui_class": "input",
                "allow_multiple": 0,
                "description": "",
                "text_options": {
                    "is_output_name": 0,
                    "placeholder": "",
                    "regex_constraint": [],
                    "valid_ws_types": [
                        "KBaseRNASeq.RNASeqAnalysis"
                    ]
                },
                "disabled": 0,
                "short_hint": "Select a RNASeqAnalysis object to view\n",
                "default_values": [
                    ""
                ],
                "ui_name": "RNASeqAnalysis\n",
                "optional": 0,
                "id": "param0",
                "advanced": 0
            }
        ],
        "behavior": {
            "output_mapping": [
                {
                    "target_property": "output",
                    "input_parameter": "param0"
                },
                {
                    "target_property": "workspace",
                    "narrative_system_variable": "workspace"
                }
            ]
        }
    },
    {
        "info": {
            "subtitle": "Annotate bacterial or archaeal contigs using components from the RAST (Rapid Annotations using Subsystems Technology) toolkit (RASTtk).\n",
            "name": "RASTtk - Annotate Microbial Contigs",
            "output_types": [
                "KBaseGenomes.Genome"
            ],
            "namespace": null,
            "tooltip": "Annotate bacterial or archaeal contigs using components from the RAST (Rapid Annotations using Subsystems Technology) toolkit (RASTtk).\n",
            "input_types": [
                "KBaseGenomes.ContigSet"
            ],
            "authors": [
                "chenry",
                "olson"
            ],
            "ver": "1.0.0",
            "id": "annotate_contigset",
            "categories": [
                "active",
                "annotation"
            ],
            "icon": {
                "url": "img?method_id=annotate_contigset&image_name=rast-red.png"
            }
        },
        "widgets": {
            "input": "null",
            "output": "kbaseGenomeView"
        },
        "fixed_parameters": [],
        "parameters": [
            {
                "field_type": "text",
                "ui_class": "input",
                "allow_multiple": 0,
                "description": "",
                "text_options": {
                    "is_output_name": 0,
                    "placeholder": "",
                    "regex_constraint": [],
                    "valid_ws_types": [
                        "KBaseGenomes.ContigSet"
                    ]
                },
                "disabled": 0,
                "short_hint": "The set of contig sequences to annotate\n",
                "default_values": [
                    ""
                ],
                "ui_name": "Contig Set\n",
                "optional": 0,
                "id": "input_contigset",
                "advanced": 0
            },
            {
                "field_type": "text",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "",
                "disabled": 0,
                "short_hint": "The scientific name to assign to the genome\n",
                "default_values": [
                    ""
                ],
                "ui_name": "Scientific Name\n",
                "optional": 0,
                "id": "scientific_name",
                "advanced": 0
            },
            {
                "field_type": "dropdown",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "",
                "dropdown_options": {
                    "options": [
                        {
                            "display": "B (Bacteria)",
                            "value": "B"
                        },
                        {
                            "display": "A (Archaea)",
                            "value": "A"
                        }
                    ]
                },
                "disabled": 0,
                "short_hint": "The domain of life of the organism being annotated\n",
                "default_values": [
                    "B"
                ],
                "ui_name": "Domain\n",
                "optional": 0,
                "id": "domain",
                "advanced": 0
            },
            {
                "field_type": "dropdown",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "",
                "dropdown_options": {
                    "options": [
                        {
                            "display": "11 (Archaea, most Bacteria, most Virii, and some Mitochondria)",
                            "value": "11"
                        },
                        {
                            "display": "4 (Mycoplasmaea, Spiroplasmaea, Ureoplasmaea, and Fungal Mitochondria)",
                            "value": "4"
                        }
                    ]
                },
                "disabled": 0,
                "short_hint": "The genetic code used in translating to protein sequences\n",
                "default_values": [
                    "11"
                ],
                "ui_name": "Genetic Code\n",
                "optional": 0,
                "id": "genetic_code",
                "advanced": 0
            },
            {
                "field_type": "text",
                "ui_class": "output",
                "allow_multiple": 0,
                "description": "",
                "text_options": {
                    "is_output_name": 1,
                    "placeholder": "",
                    "regex_constraint": [],
                    "valid_ws_types": [
                        "KBaseGenomes.Genome"
                    ]
                },
                "disabled": 0,
                "short_hint": "Name to assign the output genome\n",
                "default_values": [
                    ""
                ],
                "ui_name": "Output Genome Name\n",
                "optional": 0,
                "id": "output_genome",
                "advanced": 0
            },
            {
                "field_type": "checkbox",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "",
                "checkbox_options": {
                    "checked_value": 1,
                    "unchecked_value": 0
                },
                "disabled": 0,
                "short_hint": "Call rRNAs\n",
                "default_values": [
                    "1"
                ],
                "ui_name": "Call rRNAs\n",
                "optional": 0,
                "id": "call_features_rRNA_SEED",
                "advanced": 1
            },
            {
                "field_type": "checkbox",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "",
                "checkbox_options": {
                    "checked_value": 1,
                    "unchecked_value": 0
                },
                "disabled": 0,
                "short_hint": "Call tRNAs with tRNAscan\n",
                "default_values": [
                    "1"
                ],
                "ui_name": "Call tRNAs with tRNAscan\n",
                "optional": 0,
                "id": "call_features_tRNA_trnascan",
                "advanced": 1
            },
            {
                "field_type": "checkbox",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "",
                "checkbox_options": {
                    "checked_value": 1,
                    "unchecked_value": 0
                },
                "disabled": 0,
                "short_hint": "Call selenoproteins\n",
                "default_values": [
                    "1"
                ],
                "ui_name": "Call selenoproteins\n",
                "optional": 0,
                "id": "call_selenoproteins",
                "advanced": 1
            },
            {
                "field_type": "checkbox",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "",
                "checkbox_options": {
                    "checked_value": 1,
                    "unchecked_value": 0
                },
                "disabled": 0,
                "short_hint": "Call pyrrolysoproteins\n",
                "default_values": [
                    "1"
                ],
                "ui_name": "Call pyrrolysoproteins\n",
                "optional": 0,
                "id": "call_pyrrolysoproteins",
                "advanced": 1
            },
            {
                "field_type": "checkbox",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "",
                "checkbox_options": {
                    "checked_value": 1,
                    "unchecked_value": 0
                },
                "disabled": 0,
                "short_hint": "Call large repeat regions\n",
                "default_values": [
                    "1"
                ],
                "ui_name": "Call large repeat regions\n",
                "optional": 0,
                "id": "call_features_repeat_region_SEED",
                "advanced": 1
            },
            {
                "field_type": "checkbox",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "",
                "checkbox_options": {
                    "checked_value": 1,
                    "unchecked_value": 0
                },
                "disabled": 0,
                "short_hint": "Call insertion sequences\n",
                "default_values": [
                    "0"
                ],
                "ui_name": "Call insertion sequences\n",
                "optional": 0,
                "id": "call_features_insertion_sequences",
                "advanced": 1
            },
            {
                "field_type": "checkbox",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "",
                "checkbox_options": {
                    "checked_value": 1,
                    "unchecked_value": 0
                },
                "disabled": 0,
                "short_hint": "Find Streptococcus repeat regions\n",
                "default_values": [
                    "1"
                ],
                "ui_name": "Find Streptococcus repeat regions\n",
                "optional": 0,
                "id": "call_features_strep_suis_repeat",
                "advanced": 1
            },
            {
                "field_type": "checkbox",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "",
                "checkbox_options": {
                    "checked_value": 1,
                    "unchecked_value": 0
                },
                "disabled": 0,
                "short_hint": "Call features strep pneumo repeat\n",
                "default_values": [
                    "1"
                ],
                "ui_name": "Call features strep pneumo repeat\n",
                "optional": 0,
                "id": "call_features_strep_pneumo_repeat",
                "advanced": 1
            },
            {
                "field_type": "checkbox",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "",
                "checkbox_options": {
                    "checked_value": 1,
                    "unchecked_value": 0
                },
                "disabled": 0,
                "short_hint": "Call CRISPRs\n",
                "default_values": [
                    "1"
                ],
                "ui_name": "Call CRISPRs\n",
                "optional": 0,
                "id": "call_features_crispr",
                "advanced": 1
            },
            {
                "field_type": "checkbox",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "",
                "checkbox_options": {
                    "checked_value": 1,
                    "unchecked_value": 0
                },
                "disabled": 0,
                "short_hint": "Call protein-encoding genes with Glimmer3\n",
                "default_values": [
                    "1"
                ],
                "ui_name": "Call protein-encoding genes with Glimmer3\n",
                "optional": 0,
                "id": "call_features_CDS_glimmer3",
                "advanced": 1
            },
            {
                "field_type": "checkbox",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "",
                "checkbox_options": {
                    "checked_value": 1,
                    "unchecked_value": 0
                },
                "disabled": 0,
                "short_hint": "Call protein-encoding genes with Prodigal\n",
                "default_values": [
                    "1"
                ],
                "ui_name": "Call protein-encoding genes with Prodigal\n",
                "optional": 0,
                "id": "call_features_CDS_prodigal",
                "advanced": 1
            },
            {
                "field_type": "checkbox",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "",
                "checkbox_options": {
                    "checked_value": 1,
                    "unchecked_value": 0
                },
                "disabled": 0,
                "short_hint": "Annotate protein-encoding genes with k-mers v2\n",
                "default_values": [
                    "1"
                ],
                "ui_name": "Annotate protein-encoding genes with k-mers v2\n",
                "optional": 0,
                "id": "annotate_proteins_kmer_v2",
                "advanced": 1
            },
            {
                "field_type": "checkbox",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "",
                "checkbox_options": {
                    "checked_value": 1,
                    "unchecked_value": 0
                },
                "disabled": 0,
                "short_hint": "Annotate remaining hypothetical proteins with k-mers\n",
                "default_values": [
                    "1"
                ],
                "ui_name": "Annotate remaining hypothetical proteins with k-mers\n",
                "optional": 0,
                "id": "kmer_v1_parameters",
                "advanced": 1
            },
            {
                "field_type": "checkbox",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "",
                "checkbox_options": {
                    "checked_value": 1,
                    "unchecked_value": 0
                },
                "disabled": 0,
                "short_hint": "Annotate remaining hypothetical proteins by searching against close relatives\n",
                "default_values": [
                    "1"
                ],
                "ui_name": "Annotate remaining hypothetical proteins by searching against close relatives\n",
                "optional": 0,
                "id": "annotate_proteins_similarity",
                "advanced": 1
            },
            {
                "field_type": "checkbox",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "",
                "checkbox_options": {
                    "checked_value": 1,
                    "unchecked_value": 0
                },
                "disabled": 0,
                "short_hint": "Perform basic gene overlap removal\n",
                "default_values": [
                    "1"
                ],
                "ui_name": "Perform basic gene overlap removal\n",
                "optional": 0,
                "id": "resolve_overlapping_features",
                "advanced": 1
            },
            {
                "field_type": "checkbox",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "",
                "checkbox_options": {
                    "checked_value": 1,
                    "unchecked_value": 0
                },
                "disabled": 0,
                "short_hint": "Find close neighbors\n",
                "default_values": [
                    "1"
                ],
                "ui_name": "Find close neighbors\n",
                "optional": 0,
                "id": "find_close_neighbors",
                "advanced": 1
            },
            {
                "field_type": "checkbox",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "",
                "checkbox_options": {
                    "checked_value": 1,
                    "unchecked_value": 0
                },
                "disabled": 0,
                "short_hint": "Find prophage elements with phispy\n",
                "default_values": [
                    "0"
                ],
                "ui_name": "Find prophage elements with phispy\n",
                "optional": 0,
                "id": "call_features_prophage_phispy",
                "advanced": 1
            }
        ],
        "behavior": {
            "kb_service_method": "annotate_genome",
            "kb_service_output_mapping": [
                {
                    "target_property": "id",
                    "input_parameter": "output_genome"
                },
                {
                    "target_property": "ws",
                    "narrative_system_variable": "workspace"
                }
            ],
            "kb_service_name": "genome_annotation",
            "kb_service_input_mapping": [
                {
                    "target_property": "input_contigset",
                    "input_parameter": "input_contigset"
                },
                {
                    "target_property": "scientific_name",
                    "input_parameter": "scientific_name"
                },
                {
                    "target_property": "domain",
                    "input_parameter": "domain"
                },
                {
                    "target_property": "genetic_code",
                    "input_parameter": "genetic_code"
                },
                {
                    "target_property": "call_features_rRNA_SEED",
                    "input_parameter": "call_features_rRNA_SEED"
                },
                {
                    "target_property": "call_features_tRNA_trnascan",
                    "input_parameter": "call_features_tRNA_trnascan"
                },
                {
                    "target_property": "call_selenoproteins",
                    "input_parameter": "call_selenoproteins"
                },
                {
                    "target_property": "call_pyrrolysoproteins",
                    "input_parameter": "call_pyrrolysoproteins"
                },
                {
                    "target_property": "call_features_repeat_region_SEED",
                    "input_parameter": "call_features_repeat_region_SEED"
                },
                {
                    "target_property": "call_features_insertion_sequences",
                    "input_parameter": "call_features_insertion_sequences"
                },
                {
                    "target_property": "call_features_strep_suis_repeat",
                    "input_parameter": "call_features_strep_suis_repeat"
                },
                {
                    "target_property": "call_features_strep_pneumo_repeat",
                    "input_parameter": "call_features_strep_pneumo_repeat"
                },
                {
                    "target_property": "call_features_crispr",
                    "input_parameter": "call_features_crispr"
                },
                {
                    "target_property": "call_features_CDS_glimmer3",
                    "input_parameter": "call_features_CDS_glimmer3"
                },
                {
                    "target_property": "call_features_CDS_prodigal",
                    "input_parameter": "call_features_CDS_prodigal"
                },
                {
                    "target_property": "annotate_proteins_kmer_v2",
                    "input_parameter": "annotate_proteins_kmer_v2"
                },
                {
                    "target_property": "kmer_v1_parameters",
                    "input_parameter": "kmer_v1_parameters"
                },
                {
                    "target_property": "annotate_proteins_similarity",
                    "input_parameter": "annotate_proteins_similarity"
                },
                {
                    "target_property": "resolve_overlapping_features",
                    "input_parameter": "resolve_overlapping_features"
                },
                {
                    "target_property": "find_close_neighbors",
                    "input_parameter": "find_close_neighbors"
                },
                {
                    "target_property": "call_features_prophage_phispy",
                    "input_parameter": "call_features_prophage_phispy"
                },
                {
                    "target_property": "output_genome",
                    "input_parameter": "output_genome",
                    "generated_value": {
                        "prefix": "genome_"
                    }
                },
                {
                    "target_property": "workspace",
                    "narrative_system_variable": "workspace"
                }
            ],
            "kb_service_url": ""
        }
    },
    {
        "info": {
            "subtitle": "Use Flux Balance Analysis (FBA) to predict metabolic fluxes in a metabolic model of an organism grown on a given media.\n",
            "name": "MODELSEED - Run Flux Balance Analysis",
            "output_types": [
                "KBaseFBA.FBA"
            ],
            "namespace": null,
            "tooltip": "Use Flux Balance Analysis (FBA) to predict metabolic fluxes in a metabolic model of an organism grown on a given media.\n",
            "input_types": [
                "KBaseBiochem.Media",
                "KBaseFBA.FBAModel",
                "KBaseFeatureValues.ExpressionMatrix"
            ],
            "authors": [],
            "ver": "1.0.0",
            "id": "run_flux_balance_analysis",
            "categories": [
                "active",
                "metabolic_modeling"
            ],
            "icon": {
                "url": "img?method_id=run_flux_balance_analysis&image_name=modelseed-teal.png"
            }
        },
        "widgets": {
            "input": "null",
            "output": "kbaseTabTable"
        },
        "fixed_parameters": [],
        "parameters": [
            {
                "field_type": "text",
                "ui_class": "input",
                "allow_multiple": 0,
                "description": "The metabolic network model consisting of genome-wide set of stoichiometric reactions, compounds, and the weighted components of the biomass on which you wish to carry out Flux Balance Analysis\n",
                "text_options": {
                    "is_output_name": 0,
                    "placeholder": "",
                    "regex_constraint": [],
                    "valid_ws_types": [
                        "KBaseFBA.FBAModel"
                    ]
                },
                "disabled": 0,
                "short_hint": "The metabolic network model consisting of genome-wide set of stoichiometric reactions, compounds, and the weighted components of the biomass on which you wish to carry out Flux Balance Analysis\n",
                "default_values": [
                    ""
                ],
                "ui_name": "FBA Model\n",
                "optional": 0,
                "id": "input_model",
                "advanced": 0
            },
            {
                "field_type": "text",
                "ui_class": "input",
                "allow_multiple": 0,
                "description": "User selects a media condition on which to simulate growth of the organism. If nothing is selected, the complete media is used by default\n",
                "text_options": {
                    "is_output_name": 0,
                    "placeholder": "",
                    "regex_constraint": [],
                    "valid_ws_types": [
                        "KBaseBiochem.Media"
                    ]
                },
                "disabled": 0,
                "short_hint": "Media specifies the set of chemical compounds organism can use for its growth\n",
                "default_values": [
                    ""
                ],
                "ui_name": "Media\n",
                "optional": 1,
                "id": "input_media",
                "advanced": 0
            },
            {
                "field_type": "text",
                "ui_class": "output",
                "allow_multiple": 0,
                "description": "The fluxes for all reactions in the metabolic model and the predicted growth of the biomass according to the FBA model\n",
                "text_options": {
                    "is_output_name": 1,
                    "placeholder": "",
                    "regex_constraint": [],
                    "valid_ws_types": [
                        "KBaseFBA.FBA"
                    ]
                },
                "disabled": 0,
                "short_hint": "The fluxes for all reactions in the metabolic model and the predicted growth of the biomass according to the FBA model\n",
                "default_values": [
                    ""
                ],
                "ui_name": "Output FBA Result\n",
                "optional": 0,
                "id": "output_fba",
                "advanced": 0
            },
            {
                "field_type": "checkbox",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "Check this box to minimize and maximize all reaction fluxes, enabling reaction classification\n",
                "checkbox_options": {
                    "checked_value": 1,
                    "unchecked_value": 0
                },
                "disabled": 0,
                "short_hint": "Check this box to minimize and maximize all reaction fluxes, enabling reaction classification\n",
                "default_values": [
                    "1"
                ],
                "ui_name": "Flux Variability Analysis?\n",
                "optional": 0,
                "id": "fva",
                "advanced": 1
            },
            {
                "field_type": "checkbox",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "User could simulate FBA on single gene knockouts for all the genes in the model identifying essential reactions that carry fluxes on a given media condition\n",
                "checkbox_options": {
                    "checked_value": 1,
                    "unchecked_value": 0
                },
                "disabled": 0,
                "short_hint": "User could simulate FBA on single gene knockouts for all the genes in the model identifying essential reactions that carry fluxes on a given media condition\n",
                "default_values": [
                    "0"
                ],
                "ui_name": "Simulate All Single KO?\n",
                "optional": 0,
                "id": "simulate_ko",
                "advanced": 1
            },
            {
                "field_type": "checkbox",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "Default is 0, which means \"no\"; by default, FBA will attempt to maximize its objective (usually biomass growth). If this option is checked which means \"yes\", FBA will attempt to minimize the sum of all fluxes following the biomass optimization\n",
                "checkbox_options": {
                    "checked_value": 1,
                    "unchecked_value": 0
                },
                "disabled": 0,
                "short_hint": "Default is 0, which means \"no\"; by default, FBA will attempt to maximize its objective (usually biomass growth). If this option is checked which means \"yes\", FBA will attempt to minimize the sum of all fluxes following the biomass optimization\n",
                "default_values": [
                    "1"
                ],
                "ui_name": "Minimize Flux?\n",
                "optional": 0,
                "id": "minimize_flux",
                "advanced": 1
            },
            {
                "field_type": "text",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "ID of reaction flux to maximize in flux balance analysis (e.g. rxn00001, cpd00001_e0, bio1)\n",
                "text_options": {
                    "is_output_name": 0,
                    "placeholder": "",
                    "regex_constraint": [],
                    "valid_ws_types": []
                },
                "disabled": 0,
                "short_hint": "ID of reaction flux to maximize in flux balance analysis (e.g. rxn00001, cpd00001_e0, bio1)\n",
                "default_values": [
                    "bio1"
                ],
                "ui_name": "Reaction to maximize\n",
                "optional": 1,
                "id": "objective",
                "advanced": 1
            },
            {
                "field_type": "text",
                "ui_class": "parameter",
                "allow_multiple": 1,
                "description": "Custom bounds on reaction or exchange flux (e.g. 0;rxn00001;5, 0;cpd00001_e0;5)\n",
                "text_options": {
                    "is_output_name": 0,
                    "placeholder": "",
                    "regex_constraint": [],
                    "valid_ws_types": []
                },
                "disabled": 0,
                "short_hint": "Custom bounds on reaction or exchange flux (e.g. 0;rxn00001;5, 0;cpd00001_e0;5)\n",
                "default_values": [],
                "ui_name": "Custom flux bounds\n",
                "optional": 1,
                "id": "custom_bounds",
                "advanced": 1
            },
            {
                "field_type": "text",
                "ui_class": "parameter",
                "allow_multiple": 1,
                "description": "User may add gene knockout information one at a time using    add another gene knockout    button. Gene IDs should be in the same format that appears in your metabolic model (e.g., kb|g.220339.CDS.2927)\n",
                "text_options": {
                    "is_output_name": 0,
                    "placeholder": "",
                    "regex_constraint": [],
                    "valid_ws_types": []
                },
                "disabled": 0,
                "short_hint": "User may add gene knockout information one at a time using    add another gene knockout    button. Gene IDs should be in the same format that appears in your metabolic model (e.g., kb|g.220339.CDS.2927)\n",
                "default_values": [
                    ""
                ],
                "ui_name": "Gene Knockouts\n",
                "optional": 1,
                "id": "gene_ko",
                "advanced": 1
            },
            {
                "field_type": "text",
                "ui_class": "parameter",
                "allow_multiple": 1,
                "description": "User may add reaction knockout information one at a time using    add another reaction knockout    button. Reaction IDs should be in the same format that appears in your metabolic model (e.g rxn00002_c0)\n",
                "text_options": {
                    "is_output_name": 0,
                    "placeholder": "",
                    "regex_constraint": [],
                    "valid_ws_types": []
                },
                "disabled": 0,
                "short_hint": "User may add reaction knockout information one at a time using    add another reaction knockout    button. Reaction IDs should be in the same format that appears in your metabolic model (e.g rxn00002_c0)\n",
                "default_values": [
                    ""
                ],
                "ui_name": "Reaction Knockouts\n",
                "optional": 1,
                "id": "reaction_ko",
                "advanced": 1
            },
            {
                "field_type": "text",
                "ui_class": "parameter",
                "allow_multiple": 1,
                "description": "Specify additional compounds to add to media one at a time by using    add another additional compound    button\n",
                "text_options": {
                    "is_output_name": 0,
                    "placeholder": "",
                    "regex_constraint": [],
                    "valid_ws_types": []
                },
                "disabled": 0,
                "short_hint": "Specify additional compounds to add to media one at a time by using    add another additional compound    button\n",
                "default_values": [
                    ""
                ],
                "ui_name": "Additional Compounds\n",
                "optional": 1,
                "id": "additional_compounds",
                "advanced": 1
            },
            {
                "field_type": "text",
                "ui_class": "input",
                "allow_multiple": 0,
                "description": "An imported ExpressionMatrix containing gene expression values, one condition (column) of which will be used to constrain reaction activity in FBA\n",
                "text_options": {
                    "is_output_name": 0,
                    "placeholder": "",
                    "regex_constraint": [],
                    "valid_ws_types": [
                        "KBaseFeatureValues.ExpressionMatrix"
                    ]
                },
                "disabled": 0,
                "short_hint": "An imported ExpressionMatrix containing gene expression values, one condition (column) of which will be used to constrain reaction activity in FBA\n",
                "default_values": [
                    ""
                ],
                "ui_name": "Expression matrix\n",
                "optional": 1,
                "id": "expression_matrix",
                "advanced": 1
            },
            {
                "field_type": "text",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "Specific condition in expression matrix to which reaction activity in FBA should be fit\n",
                "text_options": {
                    "is_output_name": 0,
                    "placeholder": "",
                    "regex_constraint": [],
                    "validate_as": "string"
                },
                "disabled": 0,
                "short_hint": "Specific condition in expression matrix to which reaction activity in FBA should be fit\n",
                "default_values": [
                    ""
                ],
                "ui_name": "Expression condition\n",
                "optional": 1,
                "id": "expression_condition",
                "advanced": 1
            },
            {
                "field_type": "text",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "Reactions with expression values in the percentile above this threshold are considered ON; if below, they are considered OFF\n",
                "text_options": {
                    "is_output_name": 0,
                    "placeholder": "",
                    "regex_constraint": [],
                    "validate_as": "float"
                },
                "disabled": 0,
                "short_hint": "Reactions with expression values in the percentile above this threshold are considered ON; if below, they are considered OFF\n",
                "default_values": [
                    "0.5"
                ],
                "ui_name": "Expression threshold\n",
                "optional": 1,
                "id": "expression_threshold",
                "advanced": 1
            },
            {
                "field_type": "text",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "Reactions with expression values in a percentile that is within this uncertainty of the expression threshold will not be classified as on or off\n",
                "text_options": {
                    "is_output_name": 0,
                    "placeholder": "",
                    "regex_constraint": [],
                    "validate_as": "float"
                },
                "disabled": 0,
                "short_hint": "Range of uncertainty for classification of reaction activity based on expression threshold\n",
                "default_values": [
                    "0.1"
                ],
                "ui_name": "Expression uncertainty\n",
                "optional": 1,
                "id": "expression_uncertainty",
                "advanced": 1
            },
            {
                "field_type": "checkbox",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "If checked, all expression values associated with a set of universally active genes will be sorted, and the value at the percentile set by Expression Threshold will be used to set activity all genes in the genome\n",
                "checkbox_options": {
                    "checked_value": 1,
                    "unchecked_value": 0
                },
                "disabled": 0,
                "short_hint": "Use expression threshold value (above) as the percentile of universal gene expression to use to set final threshold for gene activity\n",
                "default_values": [
                    "1"
                ],
                "ui_name": "Universal genes-based threshold\n",
                "optional": 0,
                "id": "universal_gene_threshold",
                "advanced": 1
            },
            {
                "field_type": "text",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "What fraction of the optimal objective value should be transcriptomics FBA problem be constrained at? Values between 0 and 1. 1 is not recommended.\n",
                "text_options": {
                    "is_output_name": 0,
                    "placeholder": "",
                    "regex_constraint": [],
                    "validate_as": "float"
                },
                "disabled": 0,
                "short_hint": "What fraction of the optimal objective value should be transcriptomics FBA problem be constrained at? Values between 0 and 1.\n",
                "default_values": [
                    "0.1"
                ],
                "ui_name": "Objective constraint\n",
                "optional": 1,
                "id": "objective_fraction",
                "advanced": 1
            },
            {
                "field_type": "checkbox",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "If checked, discrete binary variables are used for reaction activity and reaction slack in transcriptomic FBA. FBA will be slower. FVA will be much slower.\n",
                "checkbox_options": {
                    "checked_value": 1,
                    "unchecked_value": 0
                },
                "disabled": 0,
                "short_hint": "If checked, discrete binary variables are used for reaction activity and reaction slack in transcriptomic FBA. FBA will be slower. FVA will be much slower.\n",
                "default_values": [
                    "1"
                ],
                "ui_name": "Discrete formulation\n",
                "optional": 0,
                "id": "discrete_variables",
                "advanced": 1
            },
            {
                "field_type": "text",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "Maximum number of moles of carbon permitted for uptake (default uptake rates varies from 0 to 100 for all nutrients)\n",
                "text_options": {
                    "is_output_name": 0,
                    "placeholder": "",
                    "regex_constraint": [],
                    "validate_as": "float"
                },
                "disabled": 0,
                "short_hint": "Maximum number of moles of carbon permitted for uptake (default uptake rates varies from 0 to 100 for all nutrients)\n",
                "default_values": [
                    ""
                ],
                "ui_name": "Max Carbon Uptake\n",
                "optional": 1,
                "id": "maxc_uptake",
                "advanced": 1
            },
            {
                "field_type": "text",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "Maximum number of moles of nitrogen permitted for uptake (default uptake rates varies from 0 to 100 for all nutrients)\n",
                "text_options": {
                    "is_output_name": 0,
                    "placeholder": "",
                    "regex_constraint": [],
                    "validate_as": "float"
                },
                "disabled": 0,
                "short_hint": "Maximum number of moles of nitrogen permitted for uptake (default uptake rates varies from 0 to 100 for all nutrients)\n",
                "default_values": [
                    ""
                ],
                "ui_name": "Max Nitrogen Uptake\n",
                "optional": 1,
                "id": "maxn_uptake",
                "advanced": 1
            },
            {
                "field_type": "text",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "Maximum number of moles of sulfur permitted for uptake (default uptake rates varies from 0 to 100 for all nutrients)\n",
                "text_options": {
                    "is_output_name": 0,
                    "placeholder": "",
                    "regex_constraint": [],
                    "validate_as": "float"
                },
                "disabled": 0,
                "short_hint": "Maximum number of moles of sulfur permitted for uptake (default uptake rates varies from 0 to 100 for all nutrients)\n",
                "default_values": [
                    ""
                ],
                "ui_name": "Max Sulfur Uptake\n",
                "optional": 1,
                "id": "maxs_uptake",
                "advanced": 1
            },
            {
                "field_type": "text",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "Maximum number of moles of phosphate permitted for uptake (default uptake rates varies from 0 to 100 for all nutrients)\n",
                "text_options": {
                    "is_output_name": 0,
                    "placeholder": "",
                    "regex_constraint": [],
                    "validate_as": "float"
                },
                "disabled": 0,
                "short_hint": "Maximum number of moles of phosphate permitted for uptake (default uptake rates varies from 0 to 100 for all nutrients)\n",
                "default_values": [
                    ""
                ],
                "ui_name": "Max Phosphate Uptake\n",
                "optional": 1,
                "id": "maxp_uptake",
                "advanced": 1
            }
        ],
        "behavior": {
            "kb_service_method": "runfba",
            "kb_service_output_mapping": [
                {
                    "target_property": "type",
                    "constant_value": "KBaseFBA.FBA"
                },
                {
                    "target_property": "obj",
                    "input_parameter": "output_fba"
                },
                {
                    "target_property": "ws",
                    "narrative_system_variable": "workspace"
                }
            ],
            "kb_service_name": "KBaseFBAModeling",
            "kb_service_input_mapping": [
                {
                    "target_property": "localmode",
                    "constant_value": "0"
                },
                {
                    "target_property": "model",
                    "input_parameter": "input_model"
                },
                {
                    "target_property": "fba",
                    "input_parameter": "output_fba"
                },
                {
                    "target_property": "fva",
                    "input_parameter": "fva"
                },
                {
                    "target_property": "formulation:media",
                    "input_parameter": "input_media"
                },
                {
                    "target_property": "formulation:additionalcpds",
                    "input_parameter": "additional_compounds"
                },
                {
                    "target_property": "formulation:geneko",
                    "input_parameter": "gene_ko"
                },
                {
                    "target_property": "formulation:rxnko",
                    "input_parameter": "reaction_ko"
                },
                {
                    "target_property": "biomass",
                    "input_parameter": "objective"
                },
                {
                    "target_property": "custom_bounds",
                    "input_parameter": "custom_bounds"
                },
                {
                    "target_property": "formulation:uptakelim:C",
                    "input_parameter": "maxc_uptake"
                },
                {
                    "target_property": "formulation:uptakelim:N",
                    "input_parameter": "maxn_uptake"
                },
                {
                    "target_property": "formulation:uptakelim:P",
                    "input_parameter": "maxp_uptake"
                },
                {
                    "target_property": "formulation:uptakelim:S",
                    "input_parameter": "maxs_uptake"
                },
                {
                    "target_property": "simulateko",
                    "input_parameter": "simulate_ko"
                },
                {
                    "target_property": "minimizeflux",
                    "input_parameter": "minimize_flux"
                },
                {
                    "target_property": "model_workspace",
                    "narrative_system_variable": "workspace"
                },
                {
                    "target_property": "formulation:media_workspace",
                    "narrative_system_variable": "workspace"
                },
                {
                    "target_property": "formulation:prommconstraint_workspace",
                    "narrative_system_variable": "workspace"
                },
                {
                    "target_property": "workspace",
                    "narrative_system_variable": "workspace"
                },
                {
                    "target_property": "expression_threshold_percentile",
                    "input_parameter": "expression_threshold"
                },
                {
                    "target_property": "kappa",
                    "input_parameter": "expression_uncertainty"
                },
                {
                    "target_property": "expsample",
                    "input_parameter": "expression_condition"
                },
                {
                    "target_property": "expseries",
                    "input_parameter": "expression_matrix"
                },
                {
                    "target_property": "use_discrete_variables",
                    "input_parameter": "discrete_variables"
                },
                {
                    "target_property": "formulation:objfraction",
                    "input_parameter": "objective_fraction"
                },
                {
                    "target_property": "universal_gene_threshold",
                    "input_parameter": "universal_gene_threshold"
                }
            ],
            "kb_service_url": ""
        }
    },
    {
        "info": {
            "ver": "1.2.9",
            "name": "Trimmomatic - Read Trimming - v0.36",
            "subtitle": "Trim paired- or single-end Illumina reads with Trimmomatic.",
            "output_types": [
                "KBaseFile.PairedEndLibrary",
                "KBaseFile.SingleEndLibrary",
                "KBaseSets.ReadsSet"
            ],
            "app_type": "app",
            "namespace": "kb_trimmomatic",
            "tooltip": "Trim paired- or single-end Illumina reads with Trimmomatic.",
            "git_commit_hash": "09b94c39b2fab79962a8d978aa15a424342defe4",
            "input_types": [
                "KBaseAssembly.PairedEndLibrary",
                "KBaseAssembly.SingleEndLibrary",
                "KBaseFile.PairedEndLibrary",
                "KBaseFile.SingleEndLibrary",
                "KBaseRNASeq.RNASeqSampleSet",
                "KBaseSets.ReadsSet"
            ],
            "authors": [
                "psdehal",
                "dylan"
            ],
            "module_name": "kb_trimmomatic",
            "id": "kb_trimmomatic/run_trimmomatic",
            "categories": [
                "active",
                "reads"
            ],
            "icon": {
                "url": "img?method_id=kb_trimmomatic/run_trimmomatic&image_name=trimmomatic-pink.png&tag=release"
            }
        },
        "parameter_groups": [
            {
                "parameter_ids": [
                    "adapterFa",
                    "seed_mismatches",
                    "palindrome_clip_threshold",
                    "simple_clip_threshold"
                ],
                "allow_multiple": 1,
                "description": "",
                "with_border": 0,
                "short_hint": "Configure if you wish to remove standard adapters",
                "ui_name": "Adapter clipping options",
                "optional": 1,
                "id": "adapter_clip",
                "advanced": 0
            },
            {
                "parameter_ids": [
                    "sliding_window_size",
                    "sliding_window_min_quality"
                ],
                "allow_multiple": 0,
                "description": "",
                "with_border": 0,
                "short_hint": "Configure quality window options",
                "ui_name": "Sliding window options",
                "optional": 0,
                "id": "sliding_window",
                "advanced": 0
            }
        ],
        "parameters": [
            {
                "field_type": "text",
                "ui_class": "input",
                "allow_multiple": 1,
                "description": "The read library or read library set for which you want to trim.",
                "text_options": {
                    "is_output_name": 0,
                    "placeholder": "",
                    "regex_constraint": [],
                    "valid_ws_types": [
                        "KBaseRNASeq.RNASeqSampleSet",
                        "KBaseSets.ReadsSet",
                        "KBaseFile.PairedEndLibrary",
                        "KBaseFile.SingleEndLibrary",
                        "KBaseAssembly.PairedEndLibrary",
                        "KBaseAssembly.SingleEndLibrary"
                    ]
                },
                "disabled": 0,
                "short_hint": "The read library or read library set to examine",
                "default_values": [
                    ""
                ],
                "ui_name": "Read library (or Set) object <font color=red>*</font>",
                "optional": 0,
                "id": "input_reads_ref",
                "advanced": 0
            },
            {
                "field_type": "text",
                "ui_class": "output",
                "allow_multiple": 0,
                "description": "Base name for output read library or read library set object",
                "text_options": {
                    "is_output_name": 1,
                    "placeholder": "",
                    "regex_constraint": [],
                    "valid_ws_types": [
                        "KBaseSets.ReadsSet",
                        "KBaseFile.PairedEndLibrary",
                        "KBaseFile.SingleEndLibrary"
                    ]
                },
                "disabled": 0,
                "short_hint": "Base name for output read library or read library set object",
                "default_values": [
                    ""
                ],
                "ui_name": "Output library (or Set) name <font color=red>*</font>",
                "optional": 0,
                "id": "output_reads_name",
                "advanced": 0
            },
            {
                "field_type": "dropdown",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "Modernize and standardize phred64 (Illumina <= 1.7) read quality encoding format to phred33 (Sanger, 454, SRA, Illumina >= 1.8).  Does nothing if already phred33.",
                "dropdown_options": {
                    "options": [
                        {
                            "display": "no",
                            "value": "0"
                        },
                        {
                            "display": "yes",
                            "value": "1"
                        }
                    ]
                },
                "disabled": 0,
                "short_hint": "Modernize and standardize phred64 (Illumina <= 1.7) read quality encoding format to phred33 (Sanger, 454, SRA, Illumina >= 1.8).",
                "default_values": [
                    "1"
                ],
                "ui_name": "Translate quality encoding from phred64 to phred33",
                "optional": 1,
                "id": "translate_to_phred33",
                "advanced": 1
            },
            {
                "field_type": "dropdown",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "The reference adapter sequences.",
                "dropdown_options": {
                    "options": [
                        {
                            "display": "TruSeq3-PE",
                            "value": "TruSeq3-PE.fa"
                        },
                        {
                            "display": "TruSeq2-PE",
                            "value": "TruSeq2-PE.fa"
                        },
                        {
                            "display": "TruSeq3-PE-2",
                            "value": "TruSeq3-PE-2.fa"
                        },
                        {
                            "display": "TruSeq3-SE",
                            "value": "TruSeq3-SE.fa"
                        },
                        {
                            "display": "TruSeq2-SE",
                            "value": "TruSeq2-SE.fa"
                        },
                        {
                            "display": "NexteraPE-PE",
                            "value": "NexteraPE-PE.fa"
                        }
                    ]
                },
                "disabled": 0,
                "short_hint": "The reference sequences for trimming.",
                "default_values": [
                    ""
                ],
                "ui_name": "Adapters",
                "optional": 1,
                "id": "adapterFa",
                "advanced": 1
            },
            {
                "field_type": "text",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "Specifies the maximum mismatch count which will still allow a full match to be performed.",
                "text_options": {
                    "is_output_name": 0,
                    "placeholder": "",
                    "regex_constraint": [],
                    "validate_as": "int"
                },
                "disabled": 0,
                "short_hint": "Maximum mismatch count which will still allow a full match.",
                "default_values": [
                    "2"
                ],
                "ui_name": "Seed mismatches",
                "optional": 1,
                "id": "seed_mismatches",
                "advanced": 1
            },
            {
                "field_type": "text",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "Specifies how accurate the match between the two 'adapter ligated' reads must be for PE palindrome read alignment.",
                "text_options": {
                    "is_output_name": 0,
                    "placeholder": "",
                    "regex_constraint": [],
                    "validate_as": "int"
                },
                "disabled": 0,
                "short_hint": "Specifies how accurate the match between the two 'adapter ligated' reads must be for PE palindrome read alignment.",
                "default_values": [
                    "30"
                ],
                "ui_name": "Palindrome clip threshold",
                "optional": 1,
                "id": "palindrome_clip_threshold",
                "advanced": 1
            },
            {
                "field_type": "text",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "Specifies how accurate the match between any adapter etc. sequence must be against a read.",
                "text_options": {
                    "is_output_name": 0,
                    "placeholder": "",
                    "regex_constraint": [],
                    "validate_as": "int"
                },
                "disabled": 0,
                "short_hint": "Specifies how accurate the match between any adapter etc. sequence must be against a read.",
                "default_values": [
                    "10"
                ],
                "ui_name": "Simple clip threshold",
                "optional": 1,
                "id": "simple_clip_threshold",
                "advanced": 1
            },
            {
                "field_type": "text",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "Perform a sliding window trimming, cutting once the average quality within the window falls below a threshold. By considering multiple bases, a single poor quality base will not cause the removal of high quality data later in the read.",
                "text_options": {
                    "is_output_name": 0,
                    "placeholder": "",
                    "regex_constraint": [],
                    "validate_as": "int"
                },
                "disabled": 0,
                "short_hint": "Specifies the number of bases to average across.",
                "default_values": [
                    "4"
                ],
                "ui_name": "Sliding window size",
                "optional": 1,
                "id": "sliding_window_size",
                "advanced": 1
            },
            {
                "field_type": "text",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "Perform a sliding window trimming, cutting once the average quality within the window falls below a threshold. By considering multiple bases, a single poor quality base will not cause the removal of high quality data later in the read.",
                "text_options": {
                    "is_output_name": 0,
                    "placeholder": "",
                    "regex_constraint": [],
                    "validate_as": "int"
                },
                "disabled": 0,
                "short_hint": "Specifies the average quality required.",
                "default_values": [
                    "15"
                ],
                "ui_name": "Sliding window minimum quality",
                "optional": 1,
                "id": "sliding_window_min_quality",
                "advanced": 1
            },
            {
                "field_type": "text",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "Removes bases regardless of quality from the end of the read, so that the read has maximally the specified length after this step has been performed. Steps performed after CROP might of course further shorten the read.",
                "text_options": {
                    "is_output_name": 0,
                    "placeholder": "",
                    "regex_constraint": [],
                    "validate_as": "int"
                },
                "disabled": 0,
                "short_hint": "The number of bases to keep, from the start of the read (e.g. tail crop 10 bases from a 150 base read: enter '         140         ').",
                "default_values": [
                    ""
                ],
                "ui_name": "Post Tail Crop length",
                "optional": 1,
                "id": "crop_length",
                "advanced": 1
            },
            {
                "field_type": "text",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "Removes the specified number of bases, regardless of quality, from the beginning of the read.",
                "text_options": {
                    "is_output_name": 0,
                    "placeholder": "",
                    "regex_constraint": [],
                    "validate_as": "int"
                },
                "disabled": 0,
                "short_hint": "The number of bases to remove from the start of the read (e.g. head crop 10 bases: enter '         10         ').",
                "default_values": [
                    "0"
                ],
                "ui_name": "Head crop length",
                "optional": 1,
                "id": "head_crop_length",
                "advanced": 1
            },
            {
                "field_type": "text",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "Remove low quality bases from the beginning. As long as a base has a value below this threshold the base is removed and the next base will be investigated.",
                "text_options": {
                    "is_output_name": 0,
                    "placeholder": "",
                    "regex_constraint": [],
                    "validate_as": "int"
                },
                "disabled": 0,
                "short_hint": "Specifies the minimum quality required to keep a base at start of read.",
                "default_values": [
                    "3"
                ],
                "ui_name": "Leading minimum quality",
                "optional": 1,
                "id": "leading_min_quality",
                "advanced": 1
            },
            {
                "field_type": "text",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "Remove low quality bases from the end. As long as a base has a value below this threshold the base is removed and the next base (which as trimmomatic is starting from the 3  prime end would be base preceding the just removed base) will be investigated. This approach can be used removing the special illumina  low quality segment  regions (which are marked with quality score of 2), but we recommend Sliding Window or MaxInfo instead.",
                "text_options": {
                    "is_output_name": 0,
                    "placeholder": "",
                    "regex_constraint": [],
                    "validate_as": "int"
                },
                "disabled": 0,
                "short_hint": "Specifies the minimum quality required to keep a base at end of read.",
                "default_values": [
                    "3"
                ],
                "ui_name": "Trailing minimum quality",
                "optional": 1,
                "id": "trailing_min_quality",
                "advanced": 1
            },
            {
                "field_type": "text",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "This module removes reads that fall below the specified minimal length. Reads removed by this step will be counted and included in the '         dropped reads' count presented in the trimmomatic summary.",
                "text_options": {
                    "is_output_name": 0,
                    "placeholder": "",
                    "regex_constraint": [],
                    "validate_as": "int"
                },
                "disabled": 0,
                "short_hint": "Specifies the minimum length of reads to be kept.",
                "default_values": [
                    "36"
                ],
                "ui_name": "Minimum read length",
                "optional": 1,
                "id": "min_length",
                "advanced": 1
            }
        ],
        "job_id_output_field": "docker",
        "fixed_parameters": [],
        "behavior": {
            "kb_service_method": "runTrimmomatic",
            "kb_service_version": "09b94c39b2fab79962a8d978aa15a424342defe4",
            "kb_service_output_mapping": [
                {
                    "target_property": "report_name",
                    "service_method_output_path": [
                        "0",
                        "report_name"
                    ]
                },
                {
                    "target_property": "report_ref",
                    "service_method_output_path": [
                        "0",
                        "report_ref"
                    ]
                },
                {
                    "target_property": "workspace_name",
                    "narrative_system_variable": "workspace"
                }
            ],
            "kb_service_url": "",
            "kb_service_name": "kb_trimmomatic",
            "kb_service_input_mapping": [
                {
                    "target_property": "input_ws",
                    "narrative_system_variable": "workspace"
                },
                {
                    "target_property": "input_reads_ref",
                    "input_parameter": "input_reads_ref",
                    "target_type_transform": "resolved-ref"
                },
                {
                    "target_property": "output_reads_name",
                    "input_parameter": "output_reads_name"
                },
                {
                    "target_property": "translate_to_phred33",
                    "input_parameter": "translate_to_phred33"
                },
                {
                    "target_property": "adapter_clip",
                    "input_parameter": "adapter_clip"
                },
                {
                    "target_property": "sliding_window",
                    "input_parameter": "sliding_window"
                },
                {
                    "target_property": "leading_min_quality",
                    "input_parameter": "leading_min_quality"
                },
                {
                    "target_property": "trailing_min_quality",
                    "input_parameter": "trailing_min_quality"
                },
                {
                    "target_property": "crop_length",
                    "input_parameter": "crop_length"
                },
                {
                    "target_property": "head_crop_length",
                    "input_parameter": "head_crop_length"
                },
                {
                    "target_property": "min_length",
                    "input_parameter": "min_length"
                }
            ]
        },
        "widgets": {
            "input": "null",
            "output": "no-display"
        }
    },
    {
        "info": {
            "ver": "0.0.1",
            "name": "Test Input Parameters",
            "subtitle": "Used for testing that input parameters are properly validated.",
            "output_types": [
                "KBaseGenomes.Genome"
            ],
            "app_type": "app",
            "namespace": "NarrativeTest",
            "tooltip": "Used for testing that input parameters are properly validated.",
            "git_commit_hash": "daaf0bd2a797f60c85dfbfe3a0b4e7568037e763",
            "input_types": [
                "KBaseFBA.FBAModel",
                "KBaseGenomes.Genome"
            ],
            "authors": [
                "wjriehl"
            ],
            "module_name": "NarrativeTest",
            "id": "NarrativeTest/test_input_params",
            "categories": [
                "active"
            ]
        },
        "parameters": [
            {
                "field_type": "text",
                "ui_class": "input",
                "allow_multiple": 0,
                "description": "",
                "text_options": {
                    "is_output_name": 0,
                    "placeholder": "",
                    "regex_constraint": [],
                    "valid_ws_types": [
                        "KBaseGenomes.Genome"
                    ]
                },
                "disabled": 0,
                "short_hint": "Should be a genome (KBaseGenomes.Genome)",
                "default_values": [
                    ""
                ],
                "ui_name": "Genome to be duplicated",
                "optional": 0,
                "id": "actual_input_object",
                "advanced": 0
            },
            {
                "field_type": "text",
                "ui_class": "output",
                "allow_multiple": 0,
                "description": "",
                "text_options": {
                    "is_output_name": 1,
                    "placeholder": "",
                    "regex_constraint": [],
                    "valid_ws_types": [
                        "KBaseGenomes.Genome"
                    ]
                },
                "disabled": 0,
                "short_hint": "The name of the new Genome object that gets created (a KBaseGenomes.Genome)",
                "default_values": [
                    ""
                ],
                "ui_name": "Name of new Genome",
                "optional": 0,
                "id": "actual_output_object",
                "advanced": 0
            },
            {
                "field_type": "text",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "",
                "text_options": {
                    "is_output_name": 0,
                    "max_int": 100,
                    "min_int": -100,
                    "regex_constraint": [],
                    "validate_as": "int",
                    "placeholder": ""
                },
                "disabled": 0,
                "short_hint": "Only accept a single integer between [-100, 100]",
                "default_values": [
                    ""
                ],
                "ui_name": "Single integer",
                "optional": 1,
                "id": "single_int",
                "advanced": 0
            },
            {
                "field_type": "text",
                "ui_class": "parameter",
                "allow_multiple": 1,
                "description": "",
                "text_options": {
                    "is_output_name": 0,
                    "max_int": 100,
                    "min_int": -100,
                    "regex_constraint": [],
                    "validate_as": "int",
                    "placeholder": ""
                },
                "disabled": 0,
                "short_hint": "Accept multiple integers between [-100, 100]",
                "default_values": [
                    ""
                ],
                "ui_name": "Multiple integers",
                "optional": 1,
                "id": "list_of_ints",
                "advanced": 0
            },
            {
                "field_type": "text",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "",
                "text_options": {
                    "is_output_name": 0,
                    "min_float": -55.5,
                    "max_float": 55.5,
                    "regex_constraint": [],
                    "validate_as": "float",
                    "placeholder": ""
                },
                "disabled": 0,
                "short_hint": "Only accept a single float between [-55.5, 55.5]",
                "default_values": [
                    ""
                ],
                "ui_name": "Single floating point number",
                "optional": 1,
                "id": "single_float",
                "advanced": 0
            },
            {
                "field_type": "text",
                "ui_class": "parameter",
                "allow_multiple": 1,
                "description": "",
                "text_options": {
                    "is_output_name": 0,
                    "min_float": -55.5,
                    "max_float": 55.5,
                    "regex_constraint": [],
                    "validate_as": "float",
                    "placeholder": ""
                },
                "disabled": 0,
                "short_hint": "Accept multiple floating point numbers between [-55.5, 55.5]",
                "default_values": [
                    ""
                ],
                "ui_name": "Multiple floating point numbers",
                "optional": 1,
                "id": "list_of_floats",
                "advanced": 0
            },
            {
                "field_type": "text",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "",
                "disabled": 0,
                "short_hint": "Just validate that it is a something.",
                "default_values": [
                    ""
                ],
                "ui_name": "Single random string",
                "optional": 1,
                "id": "single_string",
                "advanced": 0
            },
            {
                "field_type": "text",
                "ui_class": "parameter",
                "allow_multiple": 1,
                "description": "",
                "disabled": 0,
                "short_hint": "Accept multple random strings",
                "default_values": [
                    ""
                ],
                "ui_name": "Multiple strings",
                "optional": 1,
                "id": "list_of_strings",
                "advanced": 0
            },
            {
                "field_type": "text",
                "ui_class": "input",
                "allow_multiple": 0,
                "description": "",
                "text_options": {
                    "is_output_name": 0,
                    "placeholder": "",
                    "regex_constraint": [],
                    "valid_ws_types": [
                        "KBaseGenomes.Genome",
                        "KBaseFBA.FBAModel"
                    ]
                },
                "disabled": 0,
                "short_hint": "Accepts both KBaseGenomes.Genome or KBaseFBA.FBAModel",
                "default_values": [
                    ""
                ],
                "ui_name": "A single ws object",
                "optional": 1,
                "id": "single_ws_object",
                "advanced": 0
            },
            {
                "field_type": "text",
                "ui_class": "input",
                "allow_multiple": 1,
                "description": "",
                "text_options": {
                    "is_output_name": 0,
                    "placeholder": "",
                    "regex_constraint": [],
                    "valid_ws_types": [
                        "KBaseGenomes.Genome",
                        "KBaseFBA.FBAModel"
                    ]
                },
                "disabled": 0,
                "short_hint": "Accepts both KBaseGenomes.Genome or KBaseFBA.FBAModel",
                "default_values": [
                    ""
                ],
                "ui_name": "Multiple ws objects",
                "optional": 1,
                "id": "list_of_ws_objects",
                "advanced": 0
            },
            {
                "field_type": "dropdown",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "",
                "dropdown_options": {
                    "options": [
                        {
                            "display": "Apple",
                            "value": "apple"
                        },
                        {
                            "display": "Banana",
                            "value": "banana"
                        },
                        {
                            "display": "Carrot",
                            "value": "carrot"
                        }
                    ]
                },
                "disabled": 0,
                "short_hint": "Should only accept what is in that dropdown.",
                "default_values": [
                    ""
                ],
                "ui_name": "Dropdown of random strings",
                "optional": 1,
                "id": "dropdown_selection",
                "advanced": 0
            },
            {
                "field_type": "dropdown",
                "ui_class": "parameter",
                "allow_multiple": 1,
                "description": "",
                "dropdown_options": {
                    "options": [
                        {
                            "display": "Apple",
                            "value": "apple"
                        },
                        {
                            "display": "Banana",
                            "value": "banana"
                        },
                        {
                            "display": "Carrot",
                            "value": "carrot"
                        }
                    ]
                },
                "disabled": 0,
                "short_hint": "Should accept only what is in the dropdown, but a list of them.",
                "default_values": [
                    ""
                ],
                "ui_name": "Multiple dropdown results",
                "optional": 1,
                "id": "list_of_dropdown_selections",
                "advanced": 0
            },
            {
                "field_type": "checkbox",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "",
                "checkbox_options": {
                    "checked_value": 1,
                    "unchecked_value": 0
                },
                "disabled": 0,
                "short_hint": "Accepts just True or False, should auto-map to actual value",
                "default_values": [
                    ""
                ],
                "ui_name": "A single checkbox",
                "optional": 1,
                "id": "single_checkbox",
                "advanced": 0
            },
            {
                "field_type": "textarea",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "",
                "disabled": 0,
                "short_hint": "A textarea",
                "textarea_options": {
                    "n_rows": 4,
                    "placeholder": ""
                },
                "default_values": [
                    ""
                ],
                "ui_name": "Single textarea",
                "optional": 1,
                "id": "single_textarea",
                "advanced": 0
            },
            {
                "field_type": "textarea",
                "ui_class": "parameter",
                "allow_multiple": 1,
                "description": "",
                "disabled": 0,
                "short_hint": "Maybe you want to write an article with lots of paragraphs?",
                "textarea_options": {
                    "n_rows": 3,
                    "placeholder": ""
                },
                "default_values": [
                    ""
                ],
                "ui_name": "A list of textareas.",
                "optional": 1,
                "id": "list_of_textareas",
                "advanced": 0
            },
            {
                "field_type": "text",
                "ui_class": "input",
                "allow_multiple": 0,
                "description": "",
                "text_options": {
                    "is_output_name": 0,
                    "placeholder": "",
                    "regex_constraint": [],
                    "valid_ws_types": [
                        "KBaseFBA.FBAModel"
                    ]
                },
                "disabled": 0,
                "short_hint": "This is the FBA model that will be used for populating subdata selection",
                "default_values": [
                    ""
                ],
                "ui_name": "A single FBA model for subdata selection",
                "optional": 1,
                "id": "model_for_subdata",
                "advanced": 0
            },
            {
                "field_type": "textsubdata",
                "ui_class": "parameter",
                "allow_multiple": 0,
                "description": "",
                "textsubdata_options": {
                    "subdata_selection": {
                        "subdata_included": [
                            "modelcompounds/[*]/id",
                            "modelcompounds/[*]/name",
                            "modelcompounds/[*]/formula"
                        ],
                        "path_to_subdata": [
                            "modelcompounds"
                        ],
                        "parameter_id": "model_for_subdata",
                        "selection_id": "id",
                        "selection_description": [
                            "name",
                            "formula"
                        ],
                        "description_template": "- {{name}} ({{formula}})"
                    },
                    "multiselection": 1,
                    "show_src_obj": 0,
                    "placeholder": "",
                    "allow_custom": 0
                },
                "disabled": 0,
                "short_hint": "Used for a KBaseFBA.FBAModel (as in the example spec)",
                "default_values": [
                    ""
                ],
                "ui_name": "A single fancy text subdata",
                "optional": 1,
                "id": "single_textsubdata",
                "advanced": 0
            }
        ],
        "job_id_output_field": "docker",
        "fixed_parameters": [],
        "behavior": {
            "kb_service_method": "test_async_job",
            "kb_service_version": "daaf0bd2a797f60c85dfbfe3a0b4e7568037e763",
            "kb_service_output_mapping": [
                {
                    "target_property": "report_name",
                    "service_method_output_path": [
                        "0",
                        "report_name"
                    ]
                },
                {
                    "target_property": "report_ref",
                    "service_method_output_path": [
                        "0",
                        "report_ref"
                    ]
                },
                {
                    "target_property": "report_window_line_height",
                    "constant_value": "16"
                },
                {
                    "target_property": "contig_filter_result",
                    "service_method_output_path": [
                        "0"
                    ]
                },
                {
                    "target_property": "id",
                    "input_parameter": "actual_output_object"
                },
                {
                    "target_property": "ws",
                    "narrative_system_variable": "workspace"
                }
            ],
            "kb_service_url": "",
            "kb_service_name": "NarrativeTest",
            "kb_service_input_mapping": [
                {
                    "target_property": "workspace",
                    "narrative_system_variable": "workspace"
                },
                {
                    "target_property": "input_genome_name",
                    "input_parameter": "actual_input_object"
                },
                {
                    "target_property": "output_genome_name",
                    "input_parameter": "actual_output_object"
                }
            ]
        },
        "widgets": {
            "input": "null",
            "output": "kbaseGenomeView"
        }
    },
    {
        "info": {
            "id": "kb_uploadmethods/import_fastq_interleaved_as_reads_from_staging",
            "module_name": "kb_uploadmethods",
            "git_commit_hash": "7db3c27e23dbbbade89ea77c738c3ce33ac25c37",
            "name": "Import Interleaved FASTQ file as Reads from Staging Area",
            "ver": "1.0.49",
            "subtitle": "Import a interleaved FASTQ file into your Narrative as a Reads data object",
            "tooltip": "Import a interleaved FASTQ file into your Narrative as a Reads data object",
            "icon": {
                "url": "img?method_id=kb_uploadmethods/import_fastq_interleaved_as_reads_from_staging&image_name=data-pink.png&tag=dev"
            },
            "categories": [
                "inactive",
                "reads",
                "upload"
            ],
            "authors": [
                "tgu2"
            ],
            "input_types": [],
            "output_types": [],
            "app_type": "app",
            "namespace": "kb_uploadmethods"
        },
        "widgets": {
            "input": "null",
            "output": "no-display"
        },
        "parameters": [
            {
                "id": "fastq_fwd_staging_file_name",
                "ui_name": "Forward/Left FASTQ File Path",
                "short_hint": "Short read file containing a paired end library in FASTQ format",
                "description": "Valid file extensions for FASTQ: .fastq, .fnq, .fq;",
                "field_type": "dynamic_dropdown",
                "allow_multiple": 0,
                "optional": 1,
                "advanced": 0,
                "disabled": 0,
                "ui_class": "parameter",
                "default_values": [
                    ""
                ],
                "dynamic_dropdown_options": {
                    "data_source": "ftp_staging",
                    "service_params": null,
                    "multiselection": 0,
                    "query_on_empty_input": 1,
                    "result_array_index": 0
                }
            },
            {
                "id": "sequencing_tech",
                "ui_name": "Sequencing Technology",
                "short_hint": "The name of the sequencing technology used to create the reads file",
                "description": "The name of the sequencing technology used to create the reads file",
                "field_type": "dropdown",
                "allow_multiple": 0,
                "optional": 0,
                "advanced": 0,
                "disabled": 0,
                "ui_class": "parameter",
                "default_values": [
                    "Illumina"
                ],
                "dropdown_options": {
                    "options": [
                        {
                            "value": "Illumina",
                            "display": "Illumina"
                        },
                        {
                            "value": "PacBio CLR",
                            "display": "PacBio CLR"
                        },
                        {
                            "value": "PacBio CCS",
                            "display": "PacBio CCS"
                        },
                        {
                            "value": "IonTorrent",
                            "display": "IonTorrent"
                        },
                        {
                            "value": "NanoPore",
                            "display": "NanoPore"
                        },
                        {
                            "value": "Unknown",
                            "display": "Unknown"
                        }
                    ],
                    "multiselection": 0
                }
            },
            {
                "id": "name",
                "ui_name": "Reads Object Name",
                "short_hint": "Provide a name for the Reads object that will be created by this importer",
                "description": "Provide a name for the Reads object that will be created by this importer",
                "field_type": "text",
                "allow_multiple": 0,
                "optional": 0,
                "advanced": 0,
                "disabled": 0,
                "ui_class": "parameter",
                "default_values": [
                    ""
                ],
                "text_options": {
                    "is_output_name": 1,
                    "placeholder": "",
                    "regex_constraint": []
                }
            },
            {
                "id": "single_genome",
                "ui_name": "Single Genome",
                "short_hint": "Select if the reads are from a single genome, leave blank if from a metagenome",
                "description": "Select if the reads are from a single genome, leave blank if from a metagenome",
                "field_type": "checkbox",
                "allow_multiple": 0,
                "optional": 0,
                "advanced": 0,
                "disabled": 0,
                "ui_class": "parameter",
                "default_values": [
                    "1"
                ],
                "checkbox_options": {
                    "checked_value": 1,
                    "unchecked_value": 0
                }
            },
            {
                "id": "read_orientation_outward",
                "ui_name": "Reads Orientation Outward",
                "short_hint": "Select if reads in a pair point outward",
                "description": "Select if reads in a pair point outward",
                "field_type": "checkbox",
                "allow_multiple": 0,
                "optional": 1,
                "advanced": 1,
                "disabled": 0,
                "ui_class": "parameter",
                "default_values": [
                    "0"
                ],
                "checkbox_options": {
                    "checked_value": 1,
                    "unchecked_value": 0
                }
            },
            {
                "id": "insert_size_std_dev",
                "ui_name": "St. Dev. of Insert Size",
                "short_hint": "The standard deviation of insert lengths",
                "description": "The standard deviation of insert lengths",
                "field_type": "text",
                "allow_multiple": 0,
                "optional": 1,
                "advanced": 1,
                "disabled": 0,
                "ui_class": "parameter",
                "default_values": [
                    ""
                ],
                "text_options": {
                    "validate_as": "float",
                    "is_output_name": 0,
                    "placeholder": "",
                    "regex_constraint": []
                }
            },
            {
                "id": "insert_size_mean",
                "ui_name": "Mean Insert Size",
                "short_hint": "The mean (average) insert length",
                "description": "The mean (average) insert length",
                "field_type": "text",
                "allow_multiple": 0,
                "optional": 1,
                "advanced": 1,
                "disabled": 0,
                "ui_class": "parameter",
                "default_values": [
                    ""
                ],
                "text_options": {
                    "validate_as": "float",
                    "is_output_name": 0,
                    "placeholder": "",
                    "regex_constraint": []
                }
            }
        ],
        "fixed_parameters": [],
        "behavior": {
            "kb_service_url": "",
            "kb_service_name": "kb_uploadmethods",
            "kb_service_version": "7db3c27e23dbbbade89ea77c738c3ce33ac25c37",
            "kb_service_method": "import_reads_from_staging",
            "kb_service_input_mapping": [
                {
                    "narrative_system_variable": "workspace",
                    "target_property": "workspace_name"
                },
                {
                    "constant_value": "FASTQ/FASTA",
                    "target_property": "import_type"
                },
                {
                    "input_parameter": "fastq_fwd_staging_file_name",
                    "target_property": "fastq_fwd_staging_file_name"
                },
                {
                    "input_parameter": "sequencing_tech",
                    "target_property": "sequencing_tech"
                },
                {
                    "input_parameter": "name",
                    "target_property": "name"
                },
                {
                    "input_parameter": "single_genome",
                    "target_property": "single_genome"
                },
                {
                    "constant_value": "1",
                    "target_property": "interleaved"
                },
                {
                    "input_parameter": "insert_size_mean",
                    "target_property": "insert_size_mean"
                },
                {
                    "input_parameter": "insert_size_std_dev",
                    "target_property": "insert_size_std_dev"
                },
                {
                    "input_parameter": "read_orientation_outward",
                    "target_property": "read_orientation_outward"
                }
            ],
            "kb_service_output_mapping": [
                {
                    "narrative_system_variable": "workspace",
                    "target_property": "wsName"
                },
                {
                    "service_method_output_path": [
                        "0",
                        "obj_ref"
                    ],
                    "target_property": "obj_ref",
                    "target_type_transform": "resolved-ref"
                },
                {
                    "service_method_output_path": [
                        "0",
                        "report_name"
                    ],
                    "target_property": "report_name"
                },
                {
                    "service_method_output_path": [
                        "0",
                        "report_ref"
                    ],
                    "target_property": "report_ref"
                },
                {
                    "constant_value": "16",
                    "target_property": "report_window_line_height"
                }
            ]
        },
        "job_id_output_field": "docker"
    },
    {
        "info": {
            "id": "kb_uploadmethods/import_fastq_noninterleaved_as_reads_from_staging",
            "module_name": "kb_uploadmethods",
            "git_commit_hash": "7db3c27e23dbbbade89ea77c738c3ce33ac25c37",
            "name": "Import NonInterleaved FASTQ Files as Reads from Staging Area",
            "ver": "1.0.49",
            "subtitle": "Import a NonInterleaved FASTQ files into your Narrative as a Reads data object",
            "tooltip": "Import a NonInterleaved FASTQ files into your Narrative as a Reads data object",
            "icon": {
                "url": "img?method_id=kb_uploadmethods/import_fastq_noninterleaved_as_reads_from_staging&image_name=data-pink.png&tag=dev"
            },
            "categories": [
                "inactive",
                "reads",
                "upload"
            ],
            "authors": [
                "tgu2"
            ],
            "input_types": [],
            "output_types": [
                "KBaseFile.PairedEndLibrary",
                "KBaseFile.SingleEndLibrary"
            ],
            "app_type": "app",
            "namespace": "kb_uploadmethods"
        },
        "widgets": {
            "input": "null",
            "output": "no-display"
        },
        "parameters": [
            {
                "id": "fastq_fwd_staging_file_name",
                "ui_name": "Forward/Left FASTQ File Path",
                "short_hint": "Short read file containing a paired end library in FASTQ format",
                "description": "Valid file extensions for FASTQ: .fastq, .fnq, .fq;",
                "field_type": "dynamic_dropdown",
                "allow_multiple": 0,
                "optional": 1,
                "advanced": 0,
                "disabled": 0,
                "ui_class": "parameter",
                "default_values": [
                    ""
                ],
                "dynamic_dropdown_options": {
                    "data_source": "ftp_staging",
                    "service_params": null,
                    "multiselection": 0,
                    "query_on_empty_input": 1,
                    "result_array_index": 0
                }
            },
            {
                "id": "fastq_rev_staging_file_name",
                "ui_name": "Reverse/Right FASTQ File Path",
                "short_hint": "Second short read file containing a paired end library in FASTQ format.",
                "description": "Valid file extensions for FASTQ: .fastq, .fnq, .fq;",
                "field_type": "dynamic_dropdown",
                "allow_multiple": 0,
                "optional": 1,
                "advanced": 0,
                "disabled": 0,
                "ui_class": "parameter",
                "default_values": [
                    ""
                ],
                "dynamic_dropdown_options": {
                    "data_source": "ftp_staging",
                    "service_params": null,
                    "multiselection": 0,
                    "query_on_empty_input": 1,
                    "result_array_index": 0
                }
            },
            {
                "id": "sequencing_tech",
                "ui_name": "Sequencing Technology",
                "short_hint": "The name of the sequencing technology used to create the reads file",
                "description": "The name of the sequencing technology used to create the reads file",
                "field_type": "dropdown",
                "allow_multiple": 0,
                "optional": 0,
                "advanced": 0,
                "disabled": 0,
                "ui_class": "parameter",
                "default_values": [
                    "Illumina"
                ],
                "dropdown_options": {
                    "options": [
                        {
                            "value": "Illumina",
                            "display": "Illumina"
                        },
                        {
                            "value": "PacBio CLR",
                            "display": "PacBio CLR"
                        },
                        {
                            "value": "PacBio CCS",
                            "display": "PacBio CCS"
                        },
                        {
                            "value": "IonTorrent",
                            "display": "IonTorrent"
                        },
                        {
                            "value": "NanoPore",
                            "display": "NanoPore"
                        },
                        {
                            "value": "Unknown",
                            "display": "Unknown"
                        }
                    ],
                    "multiselection": 0
                }
            },
            {
                "id": "name",
                "ui_name": "Reads Object Name",
                "short_hint": "Provide a name for the Reads object that will be created by this importer",
                "description": "Provide a name for the Reads object that will be created by this importer",
                "field_type": "text",
                "allow_multiple": 0,
                "optional": 0,
                "advanced": 0,
                "disabled": 0,
                "ui_class": "output",
                "default_values": [
                    ""
                ],
                "text_options": {
                    "valid_ws_types": [
                        "KBaseFile.SingleEndLibrary",
                        "KBaseFile.PairedEndLibrary"
                    ],
                    "is_output_name": 1,
                    "placeholder": "",
                    "regex_constraint": []
                }
            },
            {
                "id": "single_genome",
                "ui_name": "Single Genome",
                "short_hint": "Select if the reads are from a single genome, leave blank if from a metagenome",
                "description": "Select if the reads are from a single genome, leave blank if from a metagenome",
                "field_type": "checkbox",
                "allow_multiple": 0,
                "optional": 0,
                "advanced": 0,
                "disabled": 0,
                "ui_class": "parameter",
                "default_values": [
                    "1"
                ],
                "checkbox_options": {
                    "checked_value": 1,
                    "unchecked_value": 0
                }
            },
            {
                "id": "read_orientation_outward",
                "ui_name": "Reads Orientation Outward",
                "short_hint": "Select if reads in a pair point outward",
                "description": "Select if reads in a pair point outward",
                "field_type": "checkbox",
                "allow_multiple": 0,
                "optional": 1,
                "advanced": 1,
                "disabled": 0,
                "ui_class": "parameter",
                "default_values": [
                    "0"
                ],
                "checkbox_options": {
                    "checked_value": 1,
                    "unchecked_value": 0
                }
            },
            {
                "id": "insert_size_std_dev",
                "ui_name": "St. Dev. of Insert Size",
                "short_hint": "The standard deviation of insert lengths",
                "description": "The standard deviation of insert lengths",
                "field_type": "text",
                "allow_multiple": 0,
                "optional": 1,
                "advanced": 1,
                "disabled": 0,
                "ui_class": "parameter",
                "default_values": [
                    ""
                ],
                "text_options": {
                    "validate_as": "float",
                    "is_output_name": 0,
                    "placeholder": "",
                    "regex_constraint": []
                }
            },
            {
                "id": "insert_size_mean",
                "ui_name": "Mean Insert Size",
                "short_hint": "The mean (average) insert length",
                "description": "The mean (average) insert length",
                "field_type": "text",
                "allow_multiple": 0,
                "optional": 1,
                "advanced": 1,
                "disabled": 0,
                "ui_class": "parameter",
                "default_values": [
                    ""
                ],
                "text_options": {
                    "validate_as": "float",
                    "is_output_name": 0,
                    "placeholder": "",
                    "regex_constraint": []
                }
            }
        ],
        "fixed_parameters": [],
        "behavior": {
            "kb_service_url": "",
            "kb_service_name": "kb_uploadmethods",
            "kb_service_version": "7db3c27e23dbbbade89ea77c738c3ce33ac25c37",
            "kb_service_method": "import_reads_from_staging",
            "kb_service_input_mapping": [
                {
                    "narrative_system_variable": "workspace",
                    "target_property": "workspace_name"
                },
                {
                    "constant_value": "FASTQ/FASTA",
                    "target_property": "import_type"
                },
                {
                    "input_parameter": "fastq_fwd_staging_file_name",
                    "target_property": "fastq_fwd_staging_file_name"
                },
                {
                    "input_parameter": "fastq_rev_staging_file_name",
                    "target_property": "fastq_rev_staging_file_name"
                },
                {
                    "input_parameter": "sequencing_tech",
                    "target_property": "sequencing_tech"
                },
                {
                    "input_parameter": "name",
                    "target_property": "name"
                },
                {
                    "input_parameter": "single_genome",
                    "target_property": "single_genome"
                },
                {
                    "constant_value": 0,
                    "target_property": "interleaved"
                },
                {
                    "input_parameter": "insert_size_mean",
                    "target_property": "insert_size_mean"
                },
                {
                    "input_parameter": "insert_size_std_dev",
                    "target_property": "insert_size_std_dev"
                },
                {
                    "input_parameter": "read_orientation_outward",
                    "target_property": "read_orientation_outward"
                }
            ],
            "kb_service_output_mapping": [
                {
                    "narrative_system_variable": "workspace",
                    "target_property": "wsName"
                },
                {
                    "service_method_output_path": [
                        "0",
                        "obj_ref"
                    ],
                    "target_property": "obj_ref",
                    "target_type_transform": "resolved-ref"
                },
                {
                    "service_method_output_path": [
                        "0",
                        "report_name"
                    ],
                    "target_property": "report_name"
                },
                {
                    "service_method_output_path": [
                        "0",
                        "report_ref"
                    ],
                    "target_property": "report_ref"
                },
                {
                    "constant_value": "16",
                    "target_property": "report_window_line_height"
                }
            ]
        },
        "job_id_output_field": "docker"
    },
    {
        "info": {
            "id": "kb_uploadmethods/import_sra_as_reads_from_staging",
            "module_name": "kb_uploadmethods",
            "git_commit_hash": "7db3c27e23dbbbade89ea77c738c3ce33ac25c37",
            "name": "Import SRA File as Reads from Staging Area",
            "ver": "1.0.49",
            "subtitle": "Import a SRA file into your Narrative as a Reads data object",
            "tooltip": "Import a SRA file into your Narrative as a Reads data object",
            "icon": {
                "url": "img?method_id=kb_uploadmethods/import_sra_as_reads_from_staging&image_name=data-pink.png&tag=dev"
            },
            "categories": [
                "inactive",
                "reads",
                "upload"
            ],
            "authors": [
                "tgu2"
            ],
            "input_types": [],
            "output_types": [],
            "app_type": "app",
            "namespace": "kb_uploadmethods"
        },
        "widgets": {
            "input": "null",
            "output": "no-display"
        },
        "parameters": [
            {
                "id": "sra_staging_file_name",
                "ui_name": "SRA File Path",
                "short_hint": "SRA staging file path",
                "description": "SRA staging file path",
                "field_type": "dynamic_dropdown",
                "allow_multiple": 0,
                "optional": 1,
                "advanced": 0,
                "disabled": 0,
                "ui_class": "parameter",
                "default_values": [
                    ""
                ],
                "dynamic_dropdown_options": {
                    "data_source": "ftp_staging",
                    "service_params": null,
                    "multiselection": 0,
                    "query_on_empty_input": 1,
                    "result_array_index": 0
                }
            },
            {
                "id": "sequencing_tech",
                "ui_name": "Sequencing Technology",
                "short_hint": "The name of the sequencing technology used to create the reads file",
                "description": "The name of the sequencing technology used to create the reads file",
                "field_type": "dropdown",
                "allow_multiple": 0,
                "optional": 0,
                "advanced": 0,
                "disabled": 0,
                "ui_class": "parameter",
                "default_values": [
                    "Illumina"
                ],
                "dropdown_options": {
                    "options": [
                        {
                            "value": "Illumina",
                            "display": "Illumina"
                        },
                        {
                            "value": "PacBio CLR",
                            "display": "PacBio CLR"
                        },
                        {
                            "value": "PacBio CCS",
                            "display": "PacBio CCS"
                        },
                        {
                            "value": "IonTorrent",
                            "display": "IonTorrent"
                        },
                        {
                            "value": "NanoPore",
                            "display": "NanoPore"
                        },
                        {
                            "value": "Unknown",
                            "display": "Unknown"
                        }
                    ],
                    "multiselection": 0
                }
            },
            {
                "id": "name",
                "ui_name": "Reads Object Name",
                "short_hint": "Provide a name for the Reads object that will be created by this importer",
                "description": "Provide a name for the Reads object that will be created by this importer",
                "field_type": "text",
                "allow_multiple": 0,
                "optional": 0,
                "advanced": 0,
                "disabled": 0,
                "ui_class": "parameter",
                "default_values": [
                    ""
                ],
                "text_options": {
                    "is_output_name": 1,
                    "placeholder": "",
                    "regex_constraint": []
                }
            },
            {
                "id": "single_genome",
                "ui_name": "Single Genome",
                "short_hint": "Select if the reads are from a single genome, leave blank if from a metagenome",
                "description": "Select if the reads are from a single genome, leave blank if from a metagenome",
                "field_type": "checkbox",
                "allow_multiple": 0,
                "optional": 0,
                "advanced": 0,
                "disabled": 0,
                "ui_class": "parameter",
                "default_values": [
                    "1"
                ],
                "checkbox_options": {
                    "checked_value": 1,
                    "unchecked_value": 0
                }
            },
            {
                "id": "read_orientation_outward",
                "ui_name": "Reads Orientation Outward",
                "short_hint": "Select if reads in a pair point outward",
                "description": "Select if reads in a pair point outward",
                "field_type": "checkbox",
                "allow_multiple": 0,
                "optional": 1,
                "advanced": 1,
                "disabled": 0,
                "ui_class": "parameter",
                "default_values": [
                    "0"
                ],
                "checkbox_options": {
                    "checked_value": 1,
                    "unchecked_value": 0
                }
            },
            {
                "id": "insert_size_std_dev",
                "ui_name": "St. Dev. of Insert Size",
                "short_hint": "The standard deviation of insert lengths",
                "description": "The standard deviation of insert lengths",
                "field_type": "text",
                "allow_multiple": 0,
                "optional": 1,
                "advanced": 1,
                "disabled": 0,
                "ui_class": "parameter",
                "default_values": [
                    ""
                ],
                "text_options": {
                    "validate_as": "float",
                    "is_output_name": 0,
                    "placeholder": "",
                    "regex_constraint": []
                }
            },
            {
                "id": "insert_size_mean",
                "ui_name": "Mean Insert Size",
                "short_hint": "The mean (average) insert length",
                "description": "The mean (average) insert length",
                "field_type": "text",
                "allow_multiple": 0,
                "optional": 1,
                "advanced": 1,
                "disabled": 0,
                "ui_class": "parameter",
                "default_values": [
                    ""
                ],
                "text_options": {
                    "validate_as": "float",
                    "is_output_name": 0,
                    "placeholder": "",
                    "regex_constraint": []
                }
            }
        ],
        "fixed_parameters": [],
        "behavior": {
            "kb_service_url": "",
            "kb_service_name": "kb_uploadmethods",
            "kb_service_version": "7db3c27e23dbbbade89ea77c738c3ce33ac25c37",
            "kb_service_method": "import_reads_from_staging",
            "kb_service_input_mapping": [
                {
                    "narrative_system_variable": "workspace",
                    "target_property": "workspace_name"
                },
                {
                    "constant_value": "SRA",
                    "target_property": "import_type"
                },
                {
                    "input_parameter": "sra_staging_file_name",
                    "target_property": "sra_staging_file_name"
                },
                {
                    "input_parameter": "sequencing_tech",
                    "target_property": "sequencing_tech"
                },
                {
                    "input_parameter": "name",
                    "target_property": "name"
                },
                {
                    "input_parameter": "single_genome",
                    "target_property": "single_genome"
                },
                {
                    "constant_value": "1",
                    "target_property": "interleaved"
                },
                {
                    "input_parameter": "insert_size_mean",
                    "target_property": "insert_size_mean"
                },
                {
                    "input_parameter": "insert_size_std_dev",
                    "target_property": "insert_size_std_dev"
                },
                {
                    "input_parameter": "read_orientation_outward",
                    "target_property": "read_orientation_outward"
                }
            ],
            "kb_service_output_mapping": [
                {
                    "narrative_system_variable": "workspace",
                    "target_property": "wsName"
                },
                {
                    "service_method_output_path": [
                        "0",
                        "obj_ref"
                    ],
                    "target_property": "obj_ref",
                    "target_type_transform": "resolved-ref"
                },
                {
                    "service_method_output_path": [
                        "0",
                        "report_name"
                    ],
                    "target_property": "report_name"
                },
                {
                    "service_method_output_path": [
                        "0",
                        "report_ref"
                    ],
                    "target_property": "report_ref"
                },
                {
                    "constant_value": "16",
                    "target_property": "report_window_line_height"
                }
            ]
        },
        "job_id_output_field": "docker"
    }
]
