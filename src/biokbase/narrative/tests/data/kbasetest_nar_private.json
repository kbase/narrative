{"info": [1, "Narrative.1436304284412", "KBaseNarrative.Narrative-3.0", "2015-07-07T21:20:02+0000", 2, "kbasetest", 670, "kbasetest:1436304284412", "a3ec4606723bd48b6fb42d7894470a78", 5561, {"methods": "{\"ipython\": {\"code\": 2, \"markdown\": 1}, \"output\": 0, \"app\": {\"genome_assembly\": 1}, \"method\": {}}", "format": "ipynb", "description": "", "creator": "kbasetest", "job_info": "{\"queue_time\": 0, \"running\": 0, \"completed\": 0, \"run_time\": 0, \"error\": 0}", "data_dependencies": "[]", "ws_name": "kbasetest:1436304284412", "type": "KBaseNarrative.Narrative", "name": "Test Private Narrative"}], "created": "2015-07-07T21:20:02+0000", "refs": [], "provenance": [{"input_ws_objects": [], "description": "saved through the narrative interface", "external_data": [], "service": "narrative", "resolved_ws_objects": []}], "creator": "kbasetest", "copy_source_inaccessible": 0, "data": {"nbformat": 3, "nbformat_minor": 0, "worksheets": [{"cells": [{"cell_type": "code", "language": "python", "outputs": [{"output_type": "stream", "stream": "stdout", "text": "hello I am code\n"}], "collapsed": false, "prompt_number": 1, "input": "print \"hello I am code\"", "metadata": {}}, {"source": "This is a private Narrative. It's smallish.", "cell_type": "markdown", "metadata": {}}, {"cell_type": "code", "language": "python", "outputs": [], "collapsed": false, "input": "", "metadata": {}}, {"source": "<div id='kb-cell-3-63e0ebae-d9fd-4215-a534-ac9c2bdf00c7'></div>\n<script>$('#kb-cell-3-63e0ebae-d9fd-4215-a534-ac9c2bdf00c7').kbaseNarrativeAppCell({'appSpec' : '{\"info\":{\"id\":\"genome_assembly\",\"name\":\"Assemble and Annotate Microbial Genome\",\"ver\":\"0.1.0\",\"subtitle\":\"Assemble NGS reads into contigs and then perform structural and functional annotation of the assembled contigs.\\n\",\"tooltip\":\"Assemble NGS reads into contigs and then perform structural and functional annotation of the assembled contigs.\\n\",\"header\":\"<p>The Assemble and Annotate Microbial Genome app assembles a set of Next-Generation Sequencing (NGS) short reads into contigs and then annotates the assembled contigs, calling genes and other genomic features and assigning biological functions. The user supplies a set of FASTA or FASTQ files of short reads and chooses from one of a variety of assembly algorithms. After the assembly, the contigs are automatically annotated by the KBase annotation pipeline, which includes assignment of biological functions derived from RAST (Rapid Annotations using Subsystems Technology). The resulting annotated genome can be exported in GenBank or FASTA format or used as input to other KBase apps such as Reconstruct Genome-scale Metabolic Model.</p>\\n\\n<p><a href=&quot;http://kbase.us/assemble-and-annotate-microbial-genome-app/&quot; target=&quot;_blank&quot;>Tutorial for Assemble and Annotate Microbial Genome App</a></p>\\n\",\"categories\":[\"featured_apps\"]},\"steps\":[{\"step_id\":\"step_1\",\"method_id\":\"assemble_contigset_from_reads\",\"input_mapping\":[],\"description\":\"additional instructions/details regarding the step with id step_1\\n\"},{\"step_id\":\"step_2\",\"method_id\":\"annotate_contigset\",\"input_mapping\":[{\"step_source\":\"step_1\",\"is_from_input\":1,\"from\":\"output_contigset\",\"to\":\"input_contigset\"}],\"description\":\"additional instructions/details regarding the step with id step_2\\n\"}]}', 'cellId' : 'kb-cell-3-63e0ebae-d9fd-4215-a534-ac9c2bdf00c7'});</script>", "cell_type": "markdown", "metadata": {"kb-cell": {"app": {"info": {"subtitle": "Assemble NGS reads into contigs and then perform structural and functional annotation of the assembled contigs.\n", "name": "Assemble and Annotate Microbial Genome", "tooltip": "Assemble NGS reads into contigs and then perform structural and functional annotation of the assembled contigs.\n", "header": "<p>The Assemble and Annotate Microbial Genome app assembles a set of Next-Generation Sequencing (NGS) short reads into contigs and then annotates the assembled contigs, calling genes and other genomic features and assigning biological functions. The user supplies a set of FASTA or FASTQ files of short reads and chooses from one of a variety of assembly algorithms. After the assembly, the contigs are automatically annotated by the KBase annotation pipeline, which includes assignment of biological functions derived from RAST (Rapid Annotations using Subsystems Technology). The resulting annotated genome can be exported in GenBank or FASTA format or used as input to other KBase apps such as Reconstruct Genome-scale Metabolic Model.</p>\n\n<p><a href=\"http://kbase.us/assemble-and-annotate-microbial-genome-app/\" target=\"_blank\">Tutorial for Assemble and Annotate Microbial Genome App</a></p>\n", "ver": "0.1.0", "id": "genome_assembly", "categories": ["featured_apps"]}, "steps": [{"step_id": "step_1", "method_id": "assemble_contigset_from_reads", "description": "additional instructions/details regarding the step with id step_1\n", "input_mapping": []}, {"step_id": "step_2", "method_id": "annotate_contigset", "description": "additional instructions/details regarding the step with id step_2\n", "input_mapping": [{"to": "input_contigset", "is_from_input": 1, "from": "output_contigset", "step_source": "step_1"}]}]}, "type": "kb_app", "widget_state": [{"state": {"step": {"step_1": {"inputState": {"pipeline": null, "assembly_input": null, "description": null, "reference": null, "read_library": null, "assembler": null, "recipe": "auto", "output_contigset": ""}}, "step_2": {"inputState": {"domain": "B", "kmer_v1_parameters": 1, "genetic_code": "11", "call_features_CDS_prodigal": 1, "call_features_rRNA_SEED": 1, "call_features_insertion_sequences": 0, "call_features_strep_pneumo_repeat": 1, "call_selenoproteins": 1, "annotate_proteins_similarity": 1, "scientific_name": "", "find_close_neighbors": 1, "call_features_repeat_region_SEED": 1, "call_pyrrolysoproteins": 1, "call_features_strep_suis_repeat": 1, "call_features_crispr": 1, "annotate_proteins_kmer_v2": 1, "call_features_prophage_phispy": 0, "call_features_tRNA_trnascan": 1, "input_contigset": "", "call_features_CDS_glimmer3": 1, "output_genome": "", "resolve_overlapping_features": 1}}}, "runningState": {"appRunState": "input", "runningStep": null, "submittedText": ""}}, "time": 1436304332850}]}}}], "metadata": {}}], "metadata": {"name": "Test Private Narrative", "format": "ipynb", "creator": "kbasetest", "data_dependencies": [], "ws_name": "kbasetest:1436304284412", "type": "KBaseNarrative.Narrative", "job_ids": {"job_usage": {"queue_time": 0, "run_time": 0}, "apps": [], "methods": []}, "description": ""}}, "extracted_ids": {}}