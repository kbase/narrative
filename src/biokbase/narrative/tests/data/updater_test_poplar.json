{"info": [32, "Narrative.1466104446131", "KBaseNarrative.Narrative-4.0", "2016-06-22T18:30:59+0000", 9, "aparkin", 8245, "aparkin:1466611484825", "6c36fa3a2ef196373466c8f32e5f3cd4", 190384, {"method.kb_cummerbund/generate_cummerbund_plots/1b93d82ceb5b9c40218f49aeaaa3f8511ad45cac": "1", "method.KBaseRNASeq/assemble_transcripts_with_cufflinks/9283ae31ace5a743963d0d0e007d812c7b72dfa1": "1", "description": "", "format": "ipynb", "viewer": "8", "type": "KBaseNarrative.Narrative", "creator": "sunita", "job_info": "{\"queue_time\": 12211, \"running\": 2, \"completed\": 2, \"run_time\": 679021, \"error\": 0}", "data_dependencies": "[]", "method.kb_cummerbund/create_expression_matrix/1b93d82ceb5b9c40218f49aeaaa3f8511ad45cac": "1", "method.KBaseRNASeq/build_bowtie2_index/d076c01c6d6ca2084b67023790846e2dbff17cfd": "1", "method.KBaseRNASeq/identify_differential_expression_using_cuffdiff/ee32dfed5c2ec485628ec0d854dd2bda0a268966": "1", "ws_name": "aparkin:1466611484825", "method.KBaseRNASeq/describe_rnaseq_experiment/9283ae31ace5a743963d0d0e007d812c7b72dfa1": "1", "method.KBaseRNASeq/align_reads_using_tophat/9283ae31ace5a743963d0d0e007d812c7b72dfa1": "1", "jupyter.markdown": "11", "name": "Poplar Roots Transcriptome Analysis Under Drought Stress Demo - Copy"}], "orig_wsid": 8245, "created": "2016-06-22T18:30:59+0000", "refs": [], "provenance": [{"input_ws_objects": [], "description": "Saved by KBase Narrative Interface", "service": "narrative", "resolved_ws_objects": [], "external_data": [], "custom": {}, "service_ver": "2.0.8", "subactions": []}], "epoch": 1466620259126, "creator": "aparkin", "copy_source_inaccessible": 0, "data": {"nbformat_minor": 0, "nbformat": 4, "cells": [{"source": "<h1>Abiotic stress induced Poplar transcriptome analyses</h1>\n\n\n#### Unpublished Data from our Collaborators\n\nProject: Poplar Interactome for Bioenergy Research (DOE (BER) Award DE-SC0008570)\n\nINVESTIGATORS: Jaiswal, P., Dharmawardhana, P., Brunner, A., Beers, E.\n\nINSTITUTIONS: Oregon State University, Virginia Tech University\n\n#### Description of the Project: \n\nPoplars have many characteristics which make them suitable as a bioenergy feedstock. They are fast growing woody perennials where the biomass can be stored in the trunk. Poplars also have heating values and cellulose content that are comparable to corn, wheat and switchgrass. A key constraint to the expansion of cellulosic bioenergy sources such as in poplar is the negative consequence of converting land use from food crops to energy crops. Therefore, understanding the biological mechanisms and development of operational poplar varieties that can thrive under abiotic stress on marginal land unsuitable for food crops is imperative.\n\n\n#### Experimental Design\n\n<p> Here, in this narrative, we are using UNPUBLISHED DATA that we have received from our collaborators to examine the gene expression changes in Populus trichocarpa var Nisqually-1  to study the impact of different abiotic stress treatments on different tissues to study the target gene expression and to see the differences in metabolic pathways based on FBA models between different treatments. \n\n<center>\n<table>\n<tr> \n<td><iframe src=\"https://app.box.com/embed/preview/0kfon6129kyoid4ygm2coflmjc0hul4v?theme=light\" width=\"400\" height=\"500\" frameborder=\"0\"allowfullscreen webkitallowfullscreen msallowfullscreen></iframe>\n</td> \n\n</tr>\n\n<tr>\n<td><strong>Experimental Design of Poplar Transcriptome Data</strong>\n</tr>\n\n</table>\n</center>\n\n</p>\n\n", "cell_type": "markdown", "metadata": {"kbstate": {"title": "Abiotic stress induced Poplar transcriptome analyses", "selected": false, "icon": ""}}}, {"source": "## RNA-seq Pipeline \n\n<p>KBase's RNA-seq pipeline is based on the widely used <b>Tuxedo suite of tools</b> (Bowtie, TopHat, Cufflinks, Cuffmerge, Cuffdiff, CummeRbund). Together, these tools quantify gene expression based on high-throughput reads obtained from Illumina or SOLiD sequencing platforms [1]. </p>\n\nThe RNA-seq pipeline enables researchers to perform computationally intensive tasks in a streamlined workflow:\n\n1. Short reads, a genome, a reference annotation, and Bowtie2 indexes are imported into the Narrative. \n\n2. The imported data and additional user-provided metadata are associated with an  \"Experiment Analysis\" object. <b>TopHat</b> or <b>Bowtie2</b> maps the reads to the reference genome resulting in read alignments for each sample. The reads for each biological replicate are mapped independently. Unlike Bowtie2, TopHat also requires gene annotations in gene transfer format (GTF). \n\n3. These mapped reads and the gene annotations are provided as input to <b>Cufflinks</b>, which produces one file of assembled transcribed fragments for each replicate. \n\n4. The assembly files are merged with the reference transcriptome annotation into a unified annotation using <b>Cuffmerge</b>. \n\n5. This merged annotation is quantified for each condition by <b>Cuffdiff</b>, which produces expression data and related statistics as a set of tabular files.\n\n6. These files are indexed and visualized with <b>CummeRbund</b> to facilitate exploration of differentially expressed genes identified by Cuffdiff as FPKM (Fragments Per Kilobase of transcript per Million mapped reads). \n\n7. An expression matrix is generated based on the Cuffdiff output.\n\n<p>\n<center>\n<table>\n<tr> \n\n<td><iframe src=\"https://app.box.com/embed/preview/jzpvzcqwthm7cranclroo6utt1nwry31?view=&sort=&direction=ASC&theme=light\" width=\"500\" height=\"500\" frameborder=\"0\"allowfullscreen webkitallowfullscreen msallowfullscreen></iframe></td></tr>\n\n<tr>\n<td><strong>Tuxedo Workflow. Adapted by permission from Macmillan Publishers Ltd: Trapnell, C., et al. 2012. \"Differential Gene and Transcript Expression Analysis of RNA-seq Experiments with TopHat and Cufflinks,\" Nature Protocols 7, 562-78. Copyright 2012.</strong></td></tr>\n\n</table>\n</center>\n\n</p>\n", "cell_type": "markdown", "metadata": {"kbstate": {"title": "RNA-seq Pipeline", "selected": false, "icon": ""}}}, {"source": "## Steps in this Narrative\n\n<b>The RNA-seq pipeline in KBase consists of eight steps that represent the Tuxedo workflow and are not intended or designed to run alone. Steps 3-5 must be run sequentially, followed by Steps 6-7, which may be run in any order.</b>\n  \n\n+ **<span style='cursor: pointer; color: darkblue' onclick=\"javascript:scrolltoelem('step1a')\"><a href=#Step1a>Step 1a</a></span>:** Import Data to the Narrative\n+ **<span style='cursor: pointer; color: darkblue' onclick=\"javascript:scrolltoelem('step1b');\"><a href=#Step1b>Step 1b</a></span>:** Build Bowtie2 Index\n+ **<span style='cursor: pointer; color: darkblue' onclick=\"javascript:scrolltoelem('step2');\"><a href=#Step2>Step 2</a></span>:** Create RNA-seq Sample Set\n+ **<span style='cursor: pointer; color: darkblue' onclick=\"javascript:scrolltoelem('step3');\"><a href=#Step3>Step 3</a></span>:** Align Reads using TopHat\n+ **<span style='cursor: pointer; color: darkblue' onclick=\"javascript:scrolltoelem('step4');\"><a href=#Step4>Step 4</a></span>:** Assemble Transcripts using Cufflinks\n+ **<span style='cursor: pointer; color: darkblue' onclick=\"javascript:scrolltoelem('step5');\"><a href=#Step5>Step 5</a></span>:** Identify Differential Expression using Cuffdiff\n+ **<span style='cursor: pointer; color: darkblue' onclick=\"javascript:scrolltoelem('step6');\"><a href=#Step6>Step 6</a></span>:** View CummeRbund Plots\n+ **<span style='cursor: pointer; color: darkblue' onclick=\"javascript:scrolltoelem('step7');\"><a href=#Step7>Step 7</a></span>:** Create Expression Matrix from Cuffdiff", "cell_type": "markdown", "metadata": {"kbstate": {"title": "Steps in this Narrative", "selected": false, "icon": ""}}}, {"source": "\n<p id=Step1a></p>\n### Step 1a. Import Data to the Narrative\n\n<b>The RNA-seq pipeline requires user to import Genome Annotation and Short Reads.</b>\n\n<li>This Narrative uses a small sample dataset from our collaborators to identify differential gene expression in <i> Poplulus trichocarpa var Nisqually-1 </i> roots under prolonged drought treatment using KBase's RNA-seq pipeline. Water was withhold to roots for 12 days to create the prolonged drought treatment condition. </li>\n\n\n<li><b>Genome Annotation</b>: Import the <i> \"Populus trichocarpa\" </i> genome from the Public tab -> GenomeAnnotation in the Data Browser.</li>\n\n\n<li><b>Short Reads</b>: A set of  paired-end reads in FASTA or FASTQ format is required. The reads can be imported in compressed \".gz\" or \".bz2\" format for faster upload. The dataset includes six sample read files obtained from two conditions (control and prolonged drought) with three replicates per condition.  Derived from the <b>Illumina Genome Analyzer</b>, all reads are <b>paired-end</b> and have been filtered, trimmed, and generated as FASTQ files. We uploaded an example subset of the FASTQ files to this Narrative using the [Uploader](http://kbase.us/data-upload-download-guide/). </li>\n\n<ul>\n\n<li>Root_Control_set_2_Replicate_1.fastq</li>\n\n<li>Root_Control_set_2_Replicate_2.fastq</li>\n\n<li>Root_Control_set_2_Replicate_3.fastq</li>\n\n<li>Root_prolonged_drought_Replicate_1.fastq</li>\n\n<li>Root_prolonged_drought_Replicate_2.fastq</li>\n\n<li>Root_prolonged_drought_Replicate_3.fastq</li>\n</ul>\n\n\n", "cell_type": "markdown", "metadata": {"kbstate": {"title": "", "selected": false, "icon": ""}}}, {"source": "<p id=Step1b></p>\n### Step 1b. Build Bowtie2 Index\n\nThis method builds the Bowtie2 index for a given reference genome.\n\n<b>NOTE: This method takes around 30 minutes to 2 hours to generate a Bowtie2 index for a typical eukaryotic genome. </i></b>.\n", "cell_type": "markdown", "metadata": {"kbstate": {"title": "", "selected": false, "icon": ""}}}, {"source": "<div id='kb-cell-23-b9b45d81-3ecf-4ca8-9bdf-62a0eba25f2f'></div>\n<script>$('#kb-cell-23-b9b45d81-3ecf-4ca8-9bdf-62a0eba25f2f').kbaseNarrativeMethodCell({'method' : '{\"info\":{\"id\":\"KBaseRNASeq/build_bowtie2_index\",\"module_name\":\"KBaseRNASeq\",\"git_commit_hash\":\"d076c01c6d6ca2084b67023790846e2dbff17cfd\",\"name\":\"Build Bowtie2 Index\",\"ver\":\"0.0.1\",\"subtitle\":\"Build Bowtie2 index for a given genome\\n\",\"tooltip\":\"Build Bowtie2 index for a given genome\\n\",\"icon\":{\"url\":\"img?method_id=KBaseRNASeq/build_bowtie2_index&image_name=bowtie-cyan.png&tag=dev\"},\"categories\":[\"active\",\"expression\",\"sequence\"],\"authors\":[],\"input_types\":[\"KBaseGenomeAnnotations.GenomeAnnotation\"],\"output_types\":[\"KBaseRNASeq.Bowtie2Indexes\"],\"namespace\":\"KBaseRNASeq\"},\"replacement_text\":\"Creates a new bowtie2 Index  for {{{input_genome}}}\",\"widgets\":{\"input\":\"null\",\"output\":\"no-display\"},\"parameters\":[{\"id\":\"input_genome\",\"ui_name\":\"Genome Annotation\\n\",\"short_hint\":\"The input genome to be indexed \\n\",\"description\":\"\",\"field_type\":\"text\",\"allow_multiple\":0,\"optional\":0,\"advanced\":0,\"disabled\":0,\"ui_class\":\"input\",\"default_values\":[\"\"],\"text_options\":{\"valid_ws_types\":[\"KBaseGenomeAnnotations.GenomeAnnotation\"],\"is_output_name\":0,\"placeholder\":\"\",\"regex_constraint\":[]}},{\"id\":\"out_index_name\",\"ui_name\":\"Bowtie2 Index\\n\",\"short_hint\":\"The indexed genome as output\\n\",\"description\":\"\",\"field_type\":\"text\",\"allow_multiple\":0,\"optional\":0,\"advanced\":0,\"disabled\":0,\"ui_class\":\"output\",\"default_values\":[\"\"],\"text_options\":{\"valid_ws_types\":[\"KBaseRNASeq.Bowtie2Indexes\"],\"is_output_name\":1,\"placeholder\":\"\",\"regex_constraint\":[]}}],\"fixed_parameters\":[],\"behavior\":{\"kb_service_url\":\"\",\"kb_service_name\":\"KBaseRNASeq\",\"kb_service_version\":\"d076c01c6d6ca2084b67023790846e2dbff17cfd\",\"kb_service_method\":\"BuildBowtie2Index\",\"kb_service_input_mapping\":[{\"narrative_system_variable\":\"workspace\",\"target_property\":\"ws_id\"},{\"input_parameter\":\"input_genome\",\"target_property\":\"reference\"},{\"input_parameter\":\"out_index_name\",\"target_property\":\"output_obj_name\"}],\"kb_service_output_mapping\":[{\"service_method_output_path\":[\"0\",\"report_name\"],\"target_property\":\"report_name\"},{\"service_method_output_path\":[\"0\",\"report_ref\"],\"target_property\":\"report_ref\"},{\"narrative_system_variable\":\"workspace\",\"target_property\":\"workspace_name\"},{\"constant_value\":\"5\",\"target_property\":\"report_window_line_height\"}]},\"job_id_output_field\":\"docker\"}', 'cellId' : 'kb-cell-23-b9b45d81-3ecf-4ca8-9bdf-62a0eba25f2f'});</script>", "cell_type": "markdown", "metadata": {"kbstate": {"title": "Build Bowtie2 Index", "selected": false, "icon": "<img src=\"https://ci.kbase.us/services/narrative_method_store/img?method_id=KBaseRNASeq/build_bowtie2_index&amp;image_name=bowtie-cyan.png&amp;tag=dev\" style=\"max-width: 50px; max-height: 50px; cursor: default;\">"}, "kb-cell": {"widget_state": [{"state": {"runningState": {"outputState": true, "runState": "error", "submittedText": "submitted on 09:12:28, 6/22/2016 by <a href=\"/#people/aparkin\" target=\"_blank\">aparkin</a>"}, "jobDetails": {"job_info": {"spec": {"parameterValues": ["Ptricocarpa_ensembl", "Ptr_bowtie2_indexed2"], "methodSpec": {"info": {"subtitle": "Build Bowtie2 index for a given genome", "name": "Build Bowtie2 Index", "output_types": ["KBaseRNASeq.Bowtie2Indexes"], "namespace": "KBaseRNASeq", "tooltip": "Build Bowtie2 index for a given genome", "git_commit_hash": "d076c01c6d6ca2084b67023790846e2dbff17cfd", "input_types": ["KBaseGenomeAnnotations.GenomeAnnotation"], "authors": [], "module_name": "KBaseRNASeq", "ver": "0.0.1", "id": "KBaseRNASeq/build_bowtie2_index", "categories": ["active", "expression", "sequence"], "icon": {"url": "img?method_id=KBaseRNASeq/build_bowtie2_index&image_name=bowtie-cyan.png&tag=dev"}}, "parameters": [{"field_type": "text", "ui_name": "Genome Annotation", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "valid_ws_types": ["KBaseGenomeAnnotations.GenomeAnnotation"]}, "disabled": 0, "short_hint": "The input genome to be indexed ", "default_values": [""], "ui_class": "input", "optional": 0, "id": "input_genome", "advanced": 0}, {"field_type": "text", "ui_name": "Bowtie2 Index", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 1, "placeholder": "", "regex_constraint": [], "valid_ws_types": ["KBaseRNASeq.Bowtie2Indexes"]}, "disabled": 0, "short_hint": "The indexed genome as output", "default_values": [""], "ui_class": "output", "optional": 0, "id": "out_index_name", "advanced": 0}], "job_id_output_field": "docker", "fixed_parameters": [], "replacement_text": "Creates a new bowtie2 Index  for {{{input_genome}}}", "behavior": {"kb_service_method": "BuildBowtie2Index", "kb_service_version": "d076c01c6d6ca2084b67023790846e2dbff17cfd", "kb_service_output_mapping": [{"target_property": "report_name", "service_method_output_path": ["0", "report_name"]}, {"target_property": "report_ref", "service_method_output_path": ["0", "report_ref"]}, {"target_property": "workspace_name", "narrative_system_variable": "workspace"}, {"target_property": "report_window_line_height", "constant_value": "5"}], "kb_service_url": "", "kb_service_name": "KBaseRNASeq", "kb_service_input_mapping": [{"target_property": "ws_id", "narrative_system_variable": "workspace"}, {"target_property": "reference", "input_parameter": "input_genome"}, {"target_property": "output_obj_name", "input_parameter": "out_index_name"}]}, "widgets": {"input": "null", "output": "no-display"}}}}, "job_state": {"status": "suspend", "target": "", "$elem": "null", "timestamp": "2016-06-22T16:12:29.026Z", "source": "kb-cell-23-b9b45d81-3ecf-4ca8-9bdf-62a0eba25f2f", "state": {"start_timestamp": 1466611948223, "is_deleted": 0, "job_id": "method:576ab8ece4b000fe6e787ca7", "complete_time": "2016-06-22T16:14:17.320Z", "step_job_ids": {"KBaseRNASeq/build_bowtie2_index": "576ab8ece4b000fe6e787ca7"}, "job_state": "suspend", "running_step_id": "KBaseRNASeq/build_bowtie2_index", "step_stats": {"KBaseRNASeq/build_bowtie2_index": {"finish_time": 1466612057320, "creation_time": 1466611948220, "awe_job_id": "7722874d-8fba-4329-b7cb-05dc93c7e695", "exec_start_time": 1466611951421}}, "step_outputs": {}, "submit_time": "2016-06-22T16:12:28.220Z", "step_errors": {"KBaseRNASeq/build_bowtie2_index": "Fatal error: java.lang.IllegalStateException: Output file is not found, exit code is 123\n\tat us.kbase.narrativejobservice.sdkjobs.DockerRunner.run(DockerRunner.java:159)\n\tat us.kbase.narrativejobservice.sdkjobs.SDKLocalMethodRunner.main(SDKLocalMethodRunner.java:309)\n\nConsole output/error logs:\nRunning on ci49 (10.58.1.149), in /mnt/awe-nfs/ci49/awe/ci-assembly/work/77/22/87/7722874d-8fba-4329-b7cb-05dc93c7e695_0_0\nClient group: ci-assembly\nImage name received from catalog: dockerhub-ci.kbase.us/kbase:kbasernaseq.d076c01c6d6ca2084b67023790846e2dbff17cfd\nJob runner recieved callback URL: http://172.17.42.1:54255\n/kb/module/scripts\n2016-06-22 16:14:11,822 - KBaseRNASeqImpl.py - 151 - INFO - Logger was set\n2016-06-22 16:14:12,441 - KBaseRNASeqImpl.py - 270 - INFO - Generating FASTA from Genome Annotation\n2016-06-22 16:14:12,868 - script_util.py - 47 - INFO - Generating FASTA file from Assembly for Ptricocarpa_ensembl\n2016-06-22 16:14:16,742 - KBaseRNASeqImpl.py - 281 - ERROR - Traceback (most recent call last):\n  File \"/kb/module/lib/biokbase/RNASeq/KBaseRNASeqImpl.py\", line 274, in BuildBowtie2Index\n    output_file = script_util.generate_fasta(self.__LOGGER,self.__SERVICES,user_token,genome_id,bowtie_dir,params['reference'])\n  File \"/kb/module/lib/biokbase/RNASeq/script_util.py\", line 54, in generate_fasta\n    raise Exception(\"Unable to Create FASTA file from Genome Annotation : {0}\".format(obj_name))\nException: Unable to Create FASTA file from Genome Annotation : Ptricocarpa_ensembl\nTraceback (most recent call last):\n  File \"/kb/module/lib/biokbase/RNASeq/KBaseRNASeqImpl.py\", line 274, in BuildBowtie2Index\n    output_file = script_util.generate_fasta(self.__LOGGER,self.__SERVICES,user_token,genome_id,bowtie_dir,params['reference'])\n  File \"/kb/module/lib/biokbase/RNASeq/script_util.py\", line 54, in generate_fasta\n    raise Exception(\"Unable to Create FASTA file from Genome Annotation : {0}\".format(obj_name))\nException: Unable to Create FASTA file from Genome Annotation : Ptricocarpa_ensembl\nTraceback (most recent call last):\n  File \"/kb/module/lib/biokbase/RNASeq/KBaseRNASeq.py\", line 619, in <module>\n    sys.exit(process_async_cli(sys.argv[1], sys.argv[2], token))\n  File \"/kb/module/lib/biokbase/RNASeq/KBaseRNASeq.py\", line 584, in process_async_cli\n    resp = application.rpc_service.call_py(ctx, req)\n  File \"/kb/module/lib/biokbase/RNASeq/KBaseRNASeq.py\", line 137, in call_py\n    respond = self._handle_request(ctx, request)\n  File \"/kb/module/lib/biokbase/RNASeq/KBaseRNASeq.py\", line 175, in _handle_request\n    result = self._call_method(ctx, request)\n  File \"/kb/module/lib/biokbase/RNASeq/KBaseRNASeq.py\", line 93, in _call_method\n    result = method(ctx, *params)\n  File \"/kb/module/lib/biokbase/RNASeq/KBaseRNASeqImpl.py\", line 347, in BuildBowtie2Index\n    raise KBaseRNASeqException(\"Build Bowtie2Index failed: {0}\".format(\"\".join(traceback.format_exc())))\nbiokbase.RNASeq.KBaseRNASeqImpl.KBaseRNASeqException: 'Build Bowtie2Index failed: Traceback (most recent call last):\\n  File \"/kb/module/lib/biokbase/RNASeq/KBaseRNASeqImpl.py\", line 282, in BuildBowtie2Index\\n    raise ValueError(\\'Unable to get FASTA for object {}\\'.format(\"\".join(traceback.format_exc())))\\nValueError: Unable to get FASTA for object Traceback (most recent call last):\\n  File \"/kb/module/lib/biokbase/RNASeq/KBaseRNASeqImpl.py\", line 274, in BuildBowtie2Index\\n    output_file = script_util.generate_fasta(self.__LOGGER,self.__SERVICES,user_token,genome_id,bowtie_dir,params[\\'reference\\'])\\n  File \"/kb/module/lib/biokbase/RNASeq/script_util.py\", line 54, in generate_fasta\\n    raise Exception(\"Unable to Create FASTA file from Genome Annotation : {0}\".format(obj_name))\\nException: Unable to Create FASTA file from Genome Annotation : Ptricocarpa_ensembl\\n\\n'\nFatal error: java.lang.IllegalStateException: Output file is not found, exit code is 123\n\tat us.kbase.narrativejobservice.sdkjobs.DockerRunner.run(DockerRunner.java:159)\n\tat us.kbase.narrativejobservice.sdkjobs.SDKLocalMethodRunner.main(SDKLocalMethodRunner.java:309)\n\n"}, "start_time": "2016-06-22T16:12:31.421Z", "original_app": {"steps": [{"service": {"method_name": "BuildBowtie2Index", "service_name": "KBaseRNASeq", "service_url": "", "service_version": "d076c01c6d6ca2084b67023790846e2dbff17cfd"}, "script": {"method_name": "", "has_files": 0, "service_name": ""}, "method_spec_id": "KBaseRNASeq/build_bowtie2_index", "input_values": [{"output_obj_name": "Ptr_bowtie2_indexed2", "ws_id": "aparkin:1466611484825", "reference": "Ptricocarpa_ensembl"}], "step_id": "KBaseRNASeq/build_bowtie2_index", "type": "service", "is_long_running": 1}], "name": "App wrapper for method KBaseRNASeq/build_bowtie2_index"}}, "id": "method:576ab8ece4b000fe6e787ca7"}, "job_id": "method:576ab8ece4b000fe6e787ca7"}, "params": {"input_genome": "Ptricocarpa_ensembl", "out_index_name": "Ptr_bowtie2_indexed2"}}, "time": 1466620258942}, {"state": {"runningState": {"outputState": true, "runState": "error", "submittedText": "submitted on 09:12:28, 6/22/2016 by <a href=\"/#people/aparkin\" target=\"_blank\">aparkin</a>"}, "jobDetails": {"job_info": {"spec": {"parameterValues": ["Ptricocarpa_ensembl", "Ptr_bowtie2_indexed2"], "methodSpec": {"info": {"subtitle": "Build Bowtie2 index for a given genome", "name": "Build Bowtie2 Index", "output_types": ["KBaseRNASeq.Bowtie2Indexes"], "namespace": "KBaseRNASeq", "tooltip": "Build Bowtie2 index for a given genome", "git_commit_hash": "d076c01c6d6ca2084b67023790846e2dbff17cfd", "input_types": ["KBaseGenomeAnnotations.GenomeAnnotation"], "authors": [], "module_name": "KBaseRNASeq", "ver": "0.0.1", "id": "KBaseRNASeq/build_bowtie2_index", "categories": ["active", "expression", "sequence"], "icon": {"url": "img?method_id=KBaseRNASeq/build_bowtie2_index&image_name=bowtie-cyan.png&tag=dev"}}, "parameters": [{"field_type": "text", "ui_name": "Genome Annotation", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "valid_ws_types": ["KBaseGenomeAnnotations.GenomeAnnotation"]}, "disabled": 0, "short_hint": "The input genome to be indexed ", "default_values": [""], "ui_class": "input", "optional": 0, "id": "input_genome", "advanced": 0}, {"field_type": "text", "ui_name": "Bowtie2 Index", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 1, "placeholder": "", "regex_constraint": [], "valid_ws_types": ["KBaseRNASeq.Bowtie2Indexes"]}, "disabled": 0, "short_hint": "The indexed genome as output", "default_values": [""], "ui_class": "output", "optional": 0, "id": "out_index_name", "advanced": 0}], "job_id_output_field": "docker", "fixed_parameters": [], "replacement_text": "Creates a new bowtie2 Index  for {{{input_genome}}}", "behavior": {"kb_service_method": "BuildBowtie2Index", "kb_service_version": "d076c01c6d6ca2084b67023790846e2dbff17cfd", "kb_service_output_mapping": [{"target_property": "report_name", "service_method_output_path": ["0", "report_name"]}, {"target_property": "report_ref", "service_method_output_path": ["0", "report_ref"]}, {"target_property": "workspace_name", "narrative_system_variable": "workspace"}, {"target_property": "report_window_line_height", "constant_value": "5"}], "kb_service_url": "", "kb_service_name": "KBaseRNASeq", "kb_service_input_mapping": [{"target_property": "ws_id", "narrative_system_variable": "workspace"}, {"target_property": "reference", "input_parameter": "input_genome"}, {"target_property": "output_obj_name", "input_parameter": "out_index_name"}]}, "widgets": {"input": "null", "output": "no-display"}}}}, "job_state": {"status": "suspend", "target": "", "$elem": "null", "timestamp": "2016-06-22T16:12:29.026Z", "source": "kb-cell-23-b9b45d81-3ecf-4ca8-9bdf-62a0eba25f2f", "state": {"start_timestamp": 1466611948223, "is_deleted": 0, "job_id": "method:576ab8ece4b000fe6e787ca7", "complete_time": "2016-06-22T16:14:17.320Z", "step_job_ids": {"KBaseRNASeq/build_bowtie2_index": "576ab8ece4b000fe6e787ca7"}, "job_state": "suspend", "running_step_id": "KBaseRNASeq/build_bowtie2_index", "step_stats": {"KBaseRNASeq/build_bowtie2_index": {"finish_time": 1466612057320, "creation_time": 1466611948220, "awe_job_id": "7722874d-8fba-4329-b7cb-05dc93c7e695", "exec_start_time": 1466611951421}}, "step_outputs": {}, "submit_time": "2016-06-22T16:12:28.220Z", "step_errors": {"KBaseRNASeq/build_bowtie2_index": "Fatal error: java.lang.IllegalStateException: Output file is not found, exit code is 123\n\tat us.kbase.narrativejobservice.sdkjobs.DockerRunner.run(DockerRunner.java:159)\n\tat us.kbase.narrativejobservice.sdkjobs.SDKLocalMethodRunner.main(SDKLocalMethodRunner.java:309)\n\nConsole output/error logs:\nRunning on ci49 (10.58.1.149), in /mnt/awe-nfs/ci49/awe/ci-assembly/work/77/22/87/7722874d-8fba-4329-b7cb-05dc93c7e695_0_0\nClient group: ci-assembly\nImage name received from catalog: dockerhub-ci.kbase.us/kbase:kbasernaseq.d076c01c6d6ca2084b67023790846e2dbff17cfd\nJob runner recieved callback URL: http://172.17.42.1:54255\n/kb/module/scripts\n2016-06-22 16:14:11,822 - KBaseRNASeqImpl.py - 151 - INFO - Logger was set\n2016-06-22 16:14:12,441 - KBaseRNASeqImpl.py - 270 - INFO - Generating FASTA from Genome Annotation\n2016-06-22 16:14:12,868 - script_util.py - 47 - INFO - Generating FASTA file from Assembly for Ptricocarpa_ensembl\n2016-06-22 16:14:16,742 - KBaseRNASeqImpl.py - 281 - ERROR - Traceback (most recent call last):\n  File \"/kb/module/lib/biokbase/RNASeq/KBaseRNASeqImpl.py\", line 274, in BuildBowtie2Index\n    output_file = script_util.generate_fasta(self.__LOGGER,self.__SERVICES,user_token,genome_id,bowtie_dir,params['reference'])\n  File \"/kb/module/lib/biokbase/RNASeq/script_util.py\", line 54, in generate_fasta\n    raise Exception(\"Unable to Create FASTA file from Genome Annotation : {0}\".format(obj_name))\nException: Unable to Create FASTA file from Genome Annotation : Ptricocarpa_ensembl\nTraceback (most recent call last):\n  File \"/kb/module/lib/biokbase/RNASeq/KBaseRNASeqImpl.py\", line 274, in BuildBowtie2Index\n    output_file = script_util.generate_fasta(self.__LOGGER,self.__SERVICES,user_token,genome_id,bowtie_dir,params['reference'])\n  File \"/kb/module/lib/biokbase/RNASeq/script_util.py\", line 54, in generate_fasta\n    raise Exception(\"Unable to Create FASTA file from Genome Annotation : {0}\".format(obj_name))\nException: Unable to Create FASTA file from Genome Annotation : Ptricocarpa_ensembl\nTraceback (most recent call last):\n  File \"/kb/module/lib/biokbase/RNASeq/KBaseRNASeq.py\", line 619, in <module>\n    sys.exit(process_async_cli(sys.argv[1], sys.argv[2], token))\n  File \"/kb/module/lib/biokbase/RNASeq/KBaseRNASeq.py\", line 584, in process_async_cli\n    resp = application.rpc_service.call_py(ctx, req)\n  File \"/kb/module/lib/biokbase/RNASeq/KBaseRNASeq.py\", line 137, in call_py\n    respond = self._handle_request(ctx, request)\n  File \"/kb/module/lib/biokbase/RNASeq/KBaseRNASeq.py\", line 175, in _handle_request\n    result = self._call_method(ctx, request)\n  File \"/kb/module/lib/biokbase/RNASeq/KBaseRNASeq.py\", line 93, in _call_method\n    result = method(ctx, *params)\n  File \"/kb/module/lib/biokbase/RNASeq/KBaseRNASeqImpl.py\", line 347, in BuildBowtie2Index\n    raise KBaseRNASeqException(\"Build Bowtie2Index failed: {0}\".format(\"\".join(traceback.format_exc())))\nbiokbase.RNASeq.KBaseRNASeqImpl.KBaseRNASeqException: 'Build Bowtie2Index failed: Traceback (most recent call last):\\n  File \"/kb/module/lib/biokbase/RNASeq/KBaseRNASeqImpl.py\", line 282, in BuildBowtie2Index\\n    raise ValueError(\\'Unable to get FASTA for object {}\\'.format(\"\".join(traceback.format_exc())))\\nValueError: Unable to get FASTA for object Traceback (most recent call last):\\n  File \"/kb/module/lib/biokbase/RNASeq/KBaseRNASeqImpl.py\", line 274, in BuildBowtie2Index\\n    output_file = script_util.generate_fasta(self.__LOGGER,self.__SERVICES,user_token,genome_id,bowtie_dir,params[\\'reference\\'])\\n  File \"/kb/module/lib/biokbase/RNASeq/script_util.py\", line 54, in generate_fasta\\n    raise Exception(\"Unable to Create FASTA file from Genome Annotation : {0}\".format(obj_name))\\nException: Unable to Create FASTA file from Genome Annotation : Ptricocarpa_ensembl\\n\\n'\nFatal error: java.lang.IllegalStateException: Output file is not found, exit code is 123\n\tat us.kbase.narrativejobservice.sdkjobs.DockerRunner.run(DockerRunner.java:159)\n\tat us.kbase.narrativejobservice.sdkjobs.SDKLocalMethodRunner.main(SDKLocalMethodRunner.java:309)\n\n"}, "start_time": "2016-06-22T16:12:31.421Z", "original_app": {"steps": [{"service": {"method_name": "BuildBowtie2Index", "service_name": "KBaseRNASeq", "service_url": "", "service_version": "d076c01c6d6ca2084b67023790846e2dbff17cfd"}, "script": {"method_name": "", "has_files": 0, "service_name": ""}, "method_spec_id": "KBaseRNASeq/build_bowtie2_index", "input_values": [{"output_obj_name": "Ptr_bowtie2_indexed2", "ws_id": "aparkin:1466611484825", "reference": "Ptricocarpa_ensembl"}], "step_id": "KBaseRNASeq/build_bowtie2_index", "type": "service", "is_long_running": 1}], "name": "App wrapper for method KBaseRNASeq/build_bowtie2_index"}}, "id": "method:576ab8ece4b000fe6e787ca7"}, "job_id": "method:576ab8ece4b000fe6e787ca7"}, "params": {"input_genome": "Ptricocarpa_ensembl", "out_index_name": "Ptr_bowtie2_indexed2"}}, "time": 1466612167988}], "widget": "null", "type": "function_input", "method": {"info": {"subtitle": "Build Bowtie2 index for a given genome\n", "name": "Build Bowtie2 Index", "output_types": ["KBaseRNASeq.Bowtie2Indexes"], "namespace": "KBaseRNASeq", "tooltip": "Build Bowtie2 index for a given genome\n", "git_commit_hash": "d076c01c6d6ca2084b67023790846e2dbff17cfd", "input_types": ["KBaseGenomeAnnotations.GenomeAnnotation"], "authors": [], "module_name": "KBaseRNASeq", "ver": "0.0.1", "id": "KBaseRNASeq/build_bowtie2_index", "categories": ["active", "expression", "sequence"], "icon": {"url": "img?method_id=KBaseRNASeq/build_bowtie2_index&image_name=bowtie-cyan.png&tag=dev"}}, "parameters": [{"field_type": "text", "ui_name": "Genome Annotation\n", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "valid_ws_types": ["KBaseGenomeAnnotations.GenomeAnnotation"]}, "disabled": 0, "short_hint": "The input genome to be indexed \n", "default_values": [""], "ui_class": "input", "optional": 0, "id": "input_genome", "advanced": 0}, {"field_type": "text", "ui_name": "Bowtie2 Index\n", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 1, "placeholder": "", "regex_constraint": [], "valid_ws_types": ["KBaseRNASeq.Bowtie2Indexes"]}, "disabled": 0, "short_hint": "The indexed genome as output\n", "default_values": [""], "ui_class": "output", "optional": 0, "id": "out_index_name", "advanced": 0}], "job_id_output_field": "docker", "fixed_parameters": [], "replacement_text": "Creates a new bowtie2 Index  for {{{input_genome}}}", "behavior": {"kb_service_method": "BuildBowtie2Index", "kb_service_version": "d076c01c6d6ca2084b67023790846e2dbff17cfd", "kb_service_output_mapping": [{"target_property": "report_name", "service_method_output_path": ["0", "report_name"]}, {"target_property": "report_ref", "service_method_output_path": ["0", "report_ref"]}, {"target_property": "workspace_name", "narrative_system_variable": "workspace"}, {"target_property": "report_window_line_height", "constant_value": "5"}], "kb_service_url": "", "kb_service_name": "KBaseRNASeq", "kb_service_input_mapping": [{"target_property": "ws_id", "narrative_system_variable": "workspace"}, {"target_property": "reference", "input_parameter": "input_genome"}, {"target_property": "output_obj_name", "input_parameter": "out_index_name"}]}, "widgets": {"input": "null", "output": "no-display"}}}}}, {"source": "<p id=Step2></p>\n### Step 2. Create RNA-seq Sample Set\n\nThis method allows you to add experimental metadata to the input sequence reads and create a RNA-seq sample set object, which will be used by the successive methods in the pipeline. \n\n<b>NOTE: The treatment labels should be added in the same order as the reads, and each treatment label should be added individually using the \"Add another treatment label\" button.</b>", "cell_type": "markdown", "metadata": {"kbstate": {"title": "", "selected": false, "icon": ""}}}, {"source": "<div id='kb-cell-1-c3bce319-9fea-4af1-ad1b-4f91aff8f43a'></div>\n<script>$('#kb-cell-1-c3bce319-9fea-4af1-ad1b-4f91aff8f43a').kbaseNarrativeMethodCell({'method' : '{\"info\":{\"id\":\"KBaseRNASeq/describe_rnaseq_experiment\",\"module_name\":\"KBaseRNASeq\",\"git_commit_hash\":\"9283ae31ace5a743963d0d0e007d812c7b72dfa1\",\"name\":\"Create RNA-seq Sample Set\",\"ver\":\"0.0.1\",\"subtitle\":\"Provide RNA-seq reads and the metadata to create an RNA-seq Sample Set\\n\",\"tooltip\":\"Provide RNA-seq reads and the metadata to create an RNA-seq Sample Set\\n\",\"icon\":{\"url\":\"img?method_id=KBaseRNASeq/describe_rnaseq_experiment&image_name=rnaseq-yellow.png&tag=dev\"},\"categories\":[\"active\",\"expression\"],\"authors\":[],\"input_types\":[\"KBaseAssembly.PairedEndLibrary\",\"KBaseAssembly.SingleEndLibrary\"],\"output_types\":[\"KBaseRNASeq.RNASeqSampleSet\"],\"namespace\":\"KBaseRNASeq\"},\"widgets\":{\"input\":\"null\",\"output\":\"kbaseRNASeqAnalysisNew\"},\"parameters\":[{\"id\":\"sampleset_id\",\"ui_name\":\"RNA-seq Sample Set\\n\",\"short_hint\":\"Name of the output RNA-seq sample set object.\\n\",\"description\":\"\",\"field_type\":\"text\",\"allow_multiple\":0,\"optional\":0,\"advanced\":0,\"disabled\":0,\"ui_class\":\"output\",\"default_values\":[\"\"],\"text_options\":{\"valid_ws_types\":[\"KBaseRNASeq.RNASeqSampleSet\"],\"is_output_name\":1,\"placeholder\":\"\",\"regex_constraint\":[]}},{\"id\":\"sampleset_desc\",\"ui_name\":\"Sample Set Description\\n\",\"short_hint\":\"The detailed description of the RNA-seq samples selected\\n\",\"description\":\"\",\"field_type\":\"textarea\",\"allow_multiple\":0,\"optional\":1,\"advanced\":1,\"disabled\":0,\"ui_class\":\"parameter\",\"default_values\":[\"\"],\"textarea_options\":{\"n_rows\":4,\"placeholder\":\"\"}},{\"id\":\"platform\",\"ui_name\":\"Platform\\n\",\"short_hint\":\"The platform used for sequencing (e.g Illumina)\\n\",\"description\":\"\",\"field_type\":\"text\",\"allow_multiple\":0,\"optional\":1,\"advanced\":1,\"disabled\":0,\"ui_class\":\"parameter\",\"default_values\":[\"\"]},{\"id\":\"Library_type\",\"ui_name\":\"Library Type\\n\",\"short_hint\":\"The type of sequencing reads - single-end vs. paired-end \\n\",\"description\":\"\",\"field_type\":\"dropdown\",\"allow_multiple\":0,\"optional\":0,\"advanced\":0,\"disabled\":0,\"ui_class\":\"parameter\",\"default_values\":[\"\"],\"dropdown_options\":{\"options\":[{\"value\":\"singleEnd\",\"display\":\"Single-end\"},{\"value\":\"pairedEnd\",\"display\":\"Paired-end\"}]}},{\"id\":\"sample_ids\",\"ui_name\":\"Reads (Single-end/Paired-end)\\n\",\"short_hint\":\"Select the single-end or paired-end reads files based on the type of sequencing reads.\\n\",\"description\":\"\",\"field_type\":\"text\",\"allow_multiple\":1,\"optional\":0,\"advanced\":0,\"disabled\":0,\"ui_class\":\"input\",\"default_values\":[\"\"],\"text_options\":{\"valid_ws_types\":[\"KBaseAssembly.SingleEndLibrary\",\"KBaseAssembly.PairedEndLibrary\"],\"is_output_name\":0,\"placeholder\":\"\",\"regex_constraint\":[]}},{\"id\":\"condition\",\"ui_name\":\"Treatment Labels\\n\",\"short_hint\":\"Short name for each unique sample treatment (no replicates) in the RNA-seq experiment. The treatment labels must be added in the same order as the reads.\\n\",\"description\":\"\",\"field_type\":\"text\",\"allow_multiple\":1,\"optional\":0,\"advanced\":0,\"disabled\":0,\"ui_class\":\"parameter\",\"default_values\":[\"\"]},{\"id\":\"domain\",\"ui_name\":\"Domain \\n\",\"short_hint\":\"The domain of the genome - prokaryotes vs. eukaryotes\\n\",\"description\":\"\",\"field_type\":\"dropdown\",\"allow_multiple\":0,\"optional\":1,\"advanced\":0,\"disabled\":0,\"ui_class\":\"parameter\",\"default_values\":[\"\"],\"dropdown_options\":{\"options\":[{\"value\":\"Eukaryotes\",\"display\":\"Eukaryotes\"},{\"value\":\"Prokaryotes\",\"display\":\"Prokaryotes\"}]}},{\"id\":\"source\",\"ui_name\":\"Source\\n\",\"short_hint\":\"The source of the data used for RNA-seq experiment (e.g NCBI)\\n\",\"description\":\"\",\"field_type\":\"text\",\"allow_multiple\":0,\"optional\":1,\"advanced\":1,\"disabled\":0,\"ui_class\":\"parameter\",\"default_values\":[\"\"]},{\"id\":\"publication_id\",\"ui_name\":\"Publication Details \\n\",\"short_hint\":\"The publication details of the data used for RNA-seq experiment\\n\",\"description\":\"\",\"field_type\":\"text\",\"allow_multiple\":0,\"optional\":1,\"advanced\":1,\"disabled\":0,\"ui_class\":\"parameter\",\"default_values\":[\"\"]}],\"fixed_parameters\":[],\"behavior\":{\"kb_service_url\":\"\",\"kb_service_name\":\"KBaseRNASeq\",\"kb_service_version\":\"9283ae31ace5a743963d0d0e007d812c7b72dfa1\",\"kb_service_method\":\"CreateRNASeqSampleSet\",\"kb_service_input_mapping\":[{\"narrative_system_variable\":\"workspace\",\"target_property\":\"ws_id\"},{\"input_parameter\":\"sampleset_id\",\"target_property\":\"sampleset_id\"},{\"input_parameter\":\"sampleset_desc\",\"target_property\":\"sampleset_desc\"},{\"input_parameter\":\"platform\",\"target_property\":\"platform\"},{\"input_parameter\":\"Library_type\",\"target_property\":\"Library_type\"},{\"input_parameter\":\"sample_ids\",\"target_property\":\"sample_ids\"},{\"input_parameter\":\"condition\",\"target_property\":\"condition\"},{\"input_parameter\":\"domain\",\"target_property\":\"domain\"},{\"input_parameter\":\"source\",\"target_property\":\"source\"},{\"input_parameter\":\"publication_id\",\"target_property\":\"publication_id\"}],\"kb_service_output_mapping\":[{\"input_parameter\":\"sampleset_id\",\"target_property\":\"output\"},{\"narrative_system_variable\":\"workspace\",\"target_property\":\"workspace\"},{\"service_method_output_path\":[\"0\"],\"target_property\":\"CreateRNASeqSampleSet\"}]},\"job_id_output_field\":\"docker\"}', 'cellId' : 'kb-cell-1-c3bce319-9fea-4af1-ad1b-4f91aff8f43a'});</script>", "cell_type": "markdown", "metadata": {"kbstate": {"title": "Create RNA-seq Sample Set", "selected": false, "icon": "<img src=\"https://ci.kbase.us/services/narrative_method_store/img?method_id=KBaseRNASeq/describe_rnaseq_experiment&amp;image_name=rnaseq-yellow.png&amp;tag=dev\" style=\"max-width: 50px; max-height: 50px; cursor: default;\">"}, "kb-cell": {"widget_state": [{"state": {"runningState": {"outputState": false, "runState": "complete", "submittedText": "submitted on 09:12:50, 6/22/2016 by <a href=\"/#people/aparkin\" target=\"_blank\">aparkin</a>"}, "jobDetails": {"job_info": {"spec": {"parameterValues": ["Ptr_prolongdrought_test", "Poplar with 6 samples ", "illumina", "pairedEnd", ["Root_Control_set_2_Replicate_1", "Root_Control_set_2_Replicate_2", "Root_Control_set_2_Replicate_3", "Root_prolonged_drought_Replicate_1", "Root_prolonged_drought_Replicate_2", "Root_prolonged_drought_Replicate_3"], ["control", "control", "control", "prolongDrought", "prolongDrought", "prolongDrought"], "Eukaryotes", "private", "unpublished"], "methodSpec": {"info": {"subtitle": "Provide RNA-seq reads and the metadata to create an RNA-seq Sample Set", "name": "Create RNA-seq Sample Set", "output_types": ["KBaseRNASeq.RNASeqSampleSet"], "namespace": "KBaseRNASeq", "tooltip": "Provide RNA-seq reads and the metadata to create an RNA-seq Sample Set", "git_commit_hash": "9283ae31ace5a743963d0d0e007d812c7b72dfa1", "input_types": ["KBaseAssembly.PairedEndLibrary", "KBaseAssembly.SingleEndLibrary"], "authors": [], "module_name": "KBaseRNASeq", "ver": "0.0.1", "id": "KBaseRNASeq/describe_rnaseq_experiment", "categories": ["active", "expression"], "icon": {"url": "img?method_id=KBaseRNASeq/describe_rnaseq_experiment&image_name=rnaseq-yellow.png&tag=dev"}}, "parameters": [{"field_type": "text", "ui_name": "RNA-seq Sample Set", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 1, "placeholder": "", "regex_constraint": [], "valid_ws_types": ["KBaseRNASeq.RNASeqSampleSet"]}, "disabled": 0, "short_hint": "Name of the output RNA-seq sample set object.", "default_values": [""], "ui_class": "output", "optional": 0, "id": "sampleset_id", "advanced": 0}, {"field_type": "textarea", "ui_name": "Sample Set Description", "allow_multiple": 0, "description": "", "disabled": 0, "short_hint": "The detailed description of the RNA-seq samples selected", "textarea_options": {"n_rows": 4, "placeholder": ""}, "default_values": [""], "ui_class": "parameter", "optional": 1, "id": "sampleset_desc", "advanced": 1}, {"field_type": "text", "ui_name": "Platform", "allow_multiple": 0, "description": "", "disabled": 0, "short_hint": "The platform used for sequencing (e.g Illumina)", "default_values": [""], "ui_class": "parameter", "optional": 1, "id": "platform", "advanced": 1}, {"field_type": "dropdown", "ui_name": "Library Type", "allow_multiple": 0, "description": "", "dropdown_options": {"options": [{"display": "Single-end", "value": "singleEnd"}, {"display": "Paired-end", "value": "pairedEnd"}]}, "disabled": 0, "short_hint": "The type of sequencing reads - single-end vs. paired-end ", "default_values": [""], "ui_class": "parameter", "optional": 0, "id": "Library_type", "advanced": 0}, {"field_type": "text", "ui_name": "Reads (Single-end/Paired-end)", "allow_multiple": 1, "description": "", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "valid_ws_types": ["KBaseAssembly.SingleEndLibrary", "KBaseAssembly.PairedEndLibrary"]}, "disabled": 0, "short_hint": "Select the single-end or paired-end reads files based on the type of sequencing reads.", "default_values": [""], "ui_class": "input", "optional": 0, "id": "sample_ids", "advanced": 0}, {"field_type": "text", "ui_name": "Treatment Labels", "allow_multiple": 1, "description": "", "disabled": 0, "short_hint": "Short name for each unique sample treatment (no replicates) in the RNA-seq experiment. The treatment labels must be added in the same order as the reads.", "default_values": [""], "ui_class": "parameter", "optional": 0, "id": "condition", "advanced": 0}, {"field_type": "dropdown", "ui_name": "Domain ", "allow_multiple": 0, "description": "", "dropdown_options": {"options": [{"display": "Eukaryotes", "value": "Eukaryotes"}, {"display": "Prokaryotes", "value": "Prokaryotes"}]}, "disabled": 0, "short_hint": "The domain of the genome - prokaryotes vs. eukaryotes", "default_values": [""], "ui_class": "parameter", "optional": 1, "id": "domain", "advanced": 0}, {"field_type": "text", "ui_name": "Source", "allow_multiple": 0, "description": "", "disabled": 0, "short_hint": "The source of the data used for RNA-seq experiment (e.g NCBI)", "default_values": [""], "ui_class": "parameter", "optional": 1, "id": "source", "advanced": 1}, {"field_type": "text", "ui_name": "Publication Details ", "allow_multiple": 0, "description": "", "disabled": 0, "short_hint": "The publication details of the data used for RNA-seq experiment", "default_values": [""], "ui_class": "parameter", "optional": 1, "id": "publication_id", "advanced": 1}], "job_id_output_field": "docker", "fixed_parameters": [], "behavior": {"kb_service_method": "CreateRNASeqSampleSet", "kb_service_version": "9283ae31ace5a743963d0d0e007d812c7b72dfa1", "kb_service_output_mapping": [{"target_property": "output", "input_parameter": "sampleset_id"}, {"target_property": "workspace", "narrative_system_variable": "workspace"}, {"target_property": "CreateRNASeqSampleSet", "service_method_output_path": ["0"]}], "kb_service_url": "", "kb_service_name": "KBaseRNASeq", "kb_service_input_mapping": [{"target_property": "ws_id", "narrative_system_variable": "workspace"}, {"target_property": "sampleset_id", "input_parameter": "sampleset_id"}, {"target_property": "sampleset_desc", "input_parameter": "sampleset_desc"}, {"target_property": "platform", "input_parameter": "platform"}, {"target_property": "Library_type", "input_parameter": "Library_type"}, {"target_property": "sample_ids", "input_parameter": "sample_ids"}, {"target_property": "condition", "input_parameter": "condition"}, {"target_property": "domain", "input_parameter": "domain"}, {"target_property": "source", "input_parameter": "source"}, {"target_property": "publication_id", "input_parameter": "publication_id"}]}, "widgets": {"input": "null", "output": "kbaseRNASeqAnalysisNew"}}}}, "job_state": {"status": "completed", "target": "", "$elem": "null", "timestamp": "2016-06-22T16:12:51.310Z", "source": "kb-cell-1-c3bce319-9fea-4af1-ad1b-4f91aff8f43a", "state": {"start_timestamp": 1466611970508, "is_deleted": 0, "job_id": "method:576ab902e4b000fe6e787ca8", "complete_time": "2016-06-22T16:16:05.295Z", "start_time": "2016-06-22T16:12:53.276Z", "widget_outputs": {"CreateRNASeqSampleSet": {"Library_type": "pairedEnd", "domain": "Eukaryotes", "sample_ids": ["Root_Control_set_2_Replicate_1", "Root_Control_set_2_Replicate_2", "Root_Control_set_2_Replicate_3", "Root_prolonged_drought_Replicate_1", "Root_prolonged_drought_Replicate_2", "Root_prolonged_drought_Replicate_3"], "source": "private", "publication_id": "unpublished", "platform": "illumina", "sampleset_id": "Ptr_prolongdrought_test", "num_samples": 6, "sampleset_desc": "Poplar with 6 samples ", "condition": ["control", "control", "control", "prolongDrought", "prolongDrought", "prolongDrought"]}, "workspace": "aparkin:1466611484825", "output": "Ptr_prolongdrought_test"}, "step_job_ids": {"KBaseRNASeq/describe_rnaseq_experiment": "576ab902e4b000fe6e787ca8"}, "step_stats": {"KBaseRNASeq/describe_rnaseq_experiment": {"finish_time": 1466612165295, "creation_time": 1466611970489, "awe_job_id": "f1ba49eb-2880-449f-ab7f-f399f5302e46", "exec_start_time": 1466611973276}}, "step_outputs": {"KBaseRNASeq/describe_rnaseq_experiment": "[{\"Library_type\":\"pairedEnd\",\"platform\":\"illumina\",\"publication_id\":\"unpublished\",\"source\":\"private\",\"condition\":[\"control\",\"control\",\"control\",\"prolongDrought\",\"prolongDrought\",\"prolongDrought\"],\"domain\":\"Eukaryotes\",\"sampleset_id\":\"Ptr_prolongdrought_test\",\"sample_ids\":[\"Root_Control_set_2_Replicate_1\",\"Root_Control_set_2_Replicate_2\",\"Root_Control_set_2_Replicate_3\",\"Root_prolonged_drought_Replicate_1\",\"Root_prolonged_drought_Replicate_2\",\"Root_prolonged_drought_Replicate_3\"],\"num_samples\":6,\"sampleset_desc\":\"Poplar with 6 samples \"}]"}, "submit_time": "2016-06-22T16:12:50.489Z", "step_errors": {}, "job_state": "completed", "original_app": {"steps": [{"service": {"method_name": "CreateRNASeqSampleSet", "service_name": "KBaseRNASeq", "service_url": "", "service_version": "9283ae31ace5a743963d0d0e007d812c7b72dfa1"}, "script": {"method_name": "", "has_files": 0, "service_name": ""}, "method_spec_id": "KBaseRNASeq/describe_rnaseq_experiment", "input_values": [{"Library_type": "pairedEnd", "domain": "Eukaryotes", "sample_ids": ["Root_Control_set_2_Replicate_1", "Root_Control_set_2_Replicate_2", "Root_Control_set_2_Replicate_3", "Root_prolonged_drought_Replicate_1", "Root_prolonged_drought_Replicate_2", "Root_prolonged_drought_Replicate_3"], "source": "private", "publication_id": "unpublished", "platform": "illumina", "sampleset_id": "Ptr_prolongdrought_test", "sampleset_desc": "Poplar with 6 samples ", "ws_id": "aparkin:1466611484825", "condition": ["control", "control", "control", "prolongDrought", "prolongDrought", "prolongDrought"]}], "step_id": "KBaseRNASeq/describe_rnaseq_experiment", "type": "service", "is_long_running": 1}], "name": "App wrapper for method KBaseRNASeq/describe_rnaseq_experiment"}}, "id": "method:576ab902e4b000fe6e787ca8"}, "job_id": "method:576ab902e4b000fe6e787ca8", "result": {"CreateRNASeqSampleSet": {"Library_type": "pairedEnd", "domain": "Eukaryotes", "sample_ids": ["Root_Control_set_2_Replicate_1", "Root_Control_set_2_Replicate_2", "Root_Control_set_2_Replicate_3", "Root_prolonged_drought_Replicate_1", "Root_prolonged_drought_Replicate_2", "Root_prolonged_drought_Replicate_3"], "source": "private", "publication_id": "unpublished", "platform": "illumina", "sampleset_id": "Ptr_prolongdrought_test", "num_samples": 6, "sampleset_desc": "Poplar with 6 samples ", "condition": ["control", "control", "control", "prolongDrought", "prolongDrought", "prolongDrought"]}, "workspace": "aparkin:1466611484825", "output": "Ptr_prolongdrought_test"}}, "params": {"Library_type": "pairedEnd", "domain": "Eukaryotes", "sample_ids": ["Root_Control_set_2_Replicate_1", "Root_Control_set_2_Replicate_2", "Root_Control_set_2_Replicate_3", "Root_prolonged_drought_Replicate_1", "Root_prolonged_drought_Replicate_2", "Root_prolonged_drought_Replicate_3"], "source": "private", "publication_id": "unpublished", "platform": "illumina", "sampleset_id": "Ptr_prolongdrought_test", "sampleset_desc": "Poplar with 6 samples ", "condition": ["control", "control", "control", "prolongDrought", "prolongDrought", "prolongDrought"]}}, "time": 1466620258942}, {"state": {"runningState": {"outputState": false, "runState": "complete", "submittedText": "submitted on 09:12:50, 6/22/2016 by <a href=\"/#people/aparkin\" target=\"_blank\">aparkin</a>"}, "jobDetails": {"job_info": {"spec": {"parameterValues": ["Ptr_prolongdrought_test", "Poplar with 6 samples ", "illumina", "pairedEnd", ["Root_Control_set_2_Replicate_1", "Root_Control_set_2_Replicate_2", "Root_Control_set_2_Replicate_3", "Root_prolonged_drought_Replicate_1", "Root_prolonged_drought_Replicate_2", "Root_prolonged_drought_Replicate_3"], ["control", "control", "control", "prolongDrought", "prolongDrought", "prolongDrought"], "Eukaryotes", "private", "unpublished"], "methodSpec": {"info": {"subtitle": "Provide RNA-seq reads and the metadata to create an RNA-seq Sample Set", "name": "Create RNA-seq Sample Set", "output_types": ["KBaseRNASeq.RNASeqSampleSet"], "namespace": "KBaseRNASeq", "tooltip": "Provide RNA-seq reads and the metadata to create an RNA-seq Sample Set", "git_commit_hash": "9283ae31ace5a743963d0d0e007d812c7b72dfa1", "input_types": ["KBaseAssembly.PairedEndLibrary", "KBaseAssembly.SingleEndLibrary"], "authors": [], "module_name": "KBaseRNASeq", "ver": "0.0.1", "id": "KBaseRNASeq/describe_rnaseq_experiment", "categories": ["active", "expression"], "icon": {"url": "img?method_id=KBaseRNASeq/describe_rnaseq_experiment&image_name=rnaseq-yellow.png&tag=dev"}}, "parameters": [{"field_type": "text", "ui_name": "RNA-seq Sample Set", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 1, "placeholder": "", "regex_constraint": [], "valid_ws_types": ["KBaseRNASeq.RNASeqSampleSet"]}, "disabled": 0, "short_hint": "Name of the output RNA-seq sample set object.", "default_values": [""], "ui_class": "output", "optional": 0, "id": "sampleset_id", "advanced": 0}, {"field_type": "textarea", "ui_name": "Sample Set Description", "allow_multiple": 0, "description": "", "disabled": 0, "short_hint": "The detailed description of the RNA-seq samples selected", "textarea_options": {"n_rows": 4, "placeholder": ""}, "default_values": [""], "ui_class": "parameter", "optional": 1, "id": "sampleset_desc", "advanced": 1}, {"field_type": "text", "ui_name": "Platform", "allow_multiple": 0, "description": "", "disabled": 0, "short_hint": "The platform used for sequencing (e.g Illumina)", "default_values": [""], "ui_class": "parameter", "optional": 1, "id": "platform", "advanced": 1}, {"field_type": "dropdown", "ui_name": "Library Type", "allow_multiple": 0, "description": "", "dropdown_options": {"options": [{"display": "Single-end", "value": "singleEnd"}, {"display": "Paired-end", "value": "pairedEnd"}]}, "disabled": 0, "short_hint": "The type of sequencing reads - single-end vs. paired-end ", "default_values": [""], "ui_class": "parameter", "optional": 0, "id": "Library_type", "advanced": 0}, {"field_type": "text", "ui_name": "Reads (Single-end/Paired-end)", "allow_multiple": 1, "description": "", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "valid_ws_types": ["KBaseAssembly.SingleEndLibrary", "KBaseAssembly.PairedEndLibrary"]}, "disabled": 0, "short_hint": "Select the single-end or paired-end reads files based on the type of sequencing reads.", "default_values": [""], "ui_class": "input", "optional": 0, "id": "sample_ids", "advanced": 0}, {"field_type": "text", "ui_name": "Treatment Labels", "allow_multiple": 1, "description": "", "disabled": 0, "short_hint": "Short name for each unique sample treatment (no replicates) in the RNA-seq experiment. The treatment labels must be added in the same order as the reads.", "default_values": [""], "ui_class": "parameter", "optional": 0, "id": "condition", "advanced": 0}, {"field_type": "dropdown", "ui_name": "Domain ", "allow_multiple": 0, "description": "", "dropdown_options": {"options": [{"display": "Eukaryotes", "value": "Eukaryotes"}, {"display": "Prokaryotes", "value": "Prokaryotes"}]}, "disabled": 0, "short_hint": "The domain of the genome - prokaryotes vs. eukaryotes", "default_values": [""], "ui_class": "parameter", "optional": 1, "id": "domain", "advanced": 0}, {"field_type": "text", "ui_name": "Source", "allow_multiple": 0, "description": "", "disabled": 0, "short_hint": "The source of the data used for RNA-seq experiment (e.g NCBI)", "default_values": [""], "ui_class": "parameter", "optional": 1, "id": "source", "advanced": 1}, {"field_type": "text", "ui_name": "Publication Details ", "allow_multiple": 0, "description": "", "disabled": 0, "short_hint": "The publication details of the data used for RNA-seq experiment", "default_values": [""], "ui_class": "parameter", "optional": 1, "id": "publication_id", "advanced": 1}], "job_id_output_field": "docker", "fixed_parameters": [], "behavior": {"kb_service_method": "CreateRNASeqSampleSet", "kb_service_version": "9283ae31ace5a743963d0d0e007d812c7b72dfa1", "kb_service_output_mapping": [{"target_property": "output", "input_parameter": "sampleset_id"}, {"target_property": "workspace", "narrative_system_variable": "workspace"}, {"target_property": "CreateRNASeqSampleSet", "service_method_output_path": ["0"]}], "kb_service_url": "", "kb_service_name": "KBaseRNASeq", "kb_service_input_mapping": [{"target_property": "ws_id", "narrative_system_variable": "workspace"}, {"target_property": "sampleset_id", "input_parameter": "sampleset_id"}, {"target_property": "sampleset_desc", "input_parameter": "sampleset_desc"}, {"target_property": "platform", "input_parameter": "platform"}, {"target_property": "Library_type", "input_parameter": "Library_type"}, {"target_property": "sample_ids", "input_parameter": "sample_ids"}, {"target_property": "condition", "input_parameter": "condition"}, {"target_property": "domain", "input_parameter": "domain"}, {"target_property": "source", "input_parameter": "source"}, {"target_property": "publication_id", "input_parameter": "publication_id"}]}, "widgets": {"input": "null", "output": "kbaseRNASeqAnalysisNew"}}}}, "job_state": {"status": "completed", "target": "", "$elem": "null", "timestamp": "2016-06-22T16:12:51.310Z", "source": "kb-cell-1-c3bce319-9fea-4af1-ad1b-4f91aff8f43a", "state": {"start_timestamp": 1466611970508, "is_deleted": 0, "job_id": "method:576ab902e4b000fe6e787ca8", "complete_time": "2016-06-22T16:16:05.295Z", "start_time": "2016-06-22T16:12:53.276Z", "widget_outputs": {"CreateRNASeqSampleSet": {"Library_type": "pairedEnd", "domain": "Eukaryotes", "sample_ids": ["Root_Control_set_2_Replicate_1", "Root_Control_set_2_Replicate_2", "Root_Control_set_2_Replicate_3", "Root_prolonged_drought_Replicate_1", "Root_prolonged_drought_Replicate_2", "Root_prolonged_drought_Replicate_3"], "source": "private", "publication_id": "unpublished", "platform": "illumina", "sampleset_id": "Ptr_prolongdrought_test", "num_samples": 6, "sampleset_desc": "Poplar with 6 samples ", "condition": ["control", "control", "control", "prolongDrought", "prolongDrought", "prolongDrought"]}, "workspace": "aparkin:1466611484825", "output": "Ptr_prolongdrought_test"}, "step_job_ids": {"KBaseRNASeq/describe_rnaseq_experiment": "576ab902e4b000fe6e787ca8"}, "step_stats": {"KBaseRNASeq/describe_rnaseq_experiment": {"finish_time": 1466612165295, "creation_time": 1466611970489, "awe_job_id": "f1ba49eb-2880-449f-ab7f-f399f5302e46", "exec_start_time": 1466611973276}}, "step_outputs": {"KBaseRNASeq/describe_rnaseq_experiment": "[{\"Library_type\":\"pairedEnd\",\"platform\":\"illumina\",\"publication_id\":\"unpublished\",\"source\":\"private\",\"condition\":[\"control\",\"control\",\"control\",\"prolongDrought\",\"prolongDrought\",\"prolongDrought\"],\"domain\":\"Eukaryotes\",\"sampleset_id\":\"Ptr_prolongdrought_test\",\"sample_ids\":[\"Root_Control_set_2_Replicate_1\",\"Root_Control_set_2_Replicate_2\",\"Root_Control_set_2_Replicate_3\",\"Root_prolonged_drought_Replicate_1\",\"Root_prolonged_drought_Replicate_2\",\"Root_prolonged_drought_Replicate_3\"],\"num_samples\":6,\"sampleset_desc\":\"Poplar with 6 samples \"}]"}, "submit_time": "2016-06-22T16:12:50.489Z", "step_errors": {}, "job_state": "completed", "original_app": {"steps": [{"service": {"method_name": "CreateRNASeqSampleSet", "service_name": "KBaseRNASeq", "service_url": "", "service_version": "9283ae31ace5a743963d0d0e007d812c7b72dfa1"}, "script": {"method_name": "", "has_files": 0, "service_name": ""}, "method_spec_id": "KBaseRNASeq/describe_rnaseq_experiment", "input_values": [{"Library_type": "pairedEnd", "domain": "Eukaryotes", "sample_ids": ["Root_Control_set_2_Replicate_1", "Root_Control_set_2_Replicate_2", "Root_Control_set_2_Replicate_3", "Root_prolonged_drought_Replicate_1", "Root_prolonged_drought_Replicate_2", "Root_prolonged_drought_Replicate_3"], "source": "private", "publication_id": "unpublished", "platform": "illumina", "sampleset_id": "Ptr_prolongdrought_test", "sampleset_desc": "Poplar with 6 samples ", "ws_id": "aparkin:1466611484825", "condition": ["control", "control", "control", "prolongDrought", "prolongDrought", "prolongDrought"]}], "step_id": "KBaseRNASeq/describe_rnaseq_experiment", "type": "service", "is_long_running": 1}], "name": "App wrapper for method KBaseRNASeq/describe_rnaseq_experiment"}}, "id": "method:576ab902e4b000fe6e787ca8"}, "job_id": "method:576ab902e4b000fe6e787ca8", "result": {"CreateRNASeqSampleSet": {"Library_type": "pairedEnd", "domain": "Eukaryotes", "sample_ids": ["Root_Control_set_2_Replicate_1", "Root_Control_set_2_Replicate_2", "Root_Control_set_2_Replicate_3", "Root_prolonged_drought_Replicate_1", "Root_prolonged_drought_Replicate_2", "Root_prolonged_drought_Replicate_3"], "source": "private", "publication_id": "unpublished", "platform": "illumina", "sampleset_id": "Ptr_prolongdrought_test", "num_samples": 6, "sampleset_desc": "Poplar with 6 samples ", "condition": ["control", "control", "control", "prolongDrought", "prolongDrought", "prolongDrought"]}, "workspace": "aparkin:1466611484825", "output": "Ptr_prolongdrought_test"}}, "params": {"Library_type": "pairedEnd", "domain": "Eukaryotes", "sample_ids": ["Root_Control_set_2_Replicate_1", "Root_Control_set_2_Replicate_2", "Root_Control_set_2_Replicate_3", "Root_prolonged_drought_Replicate_1", "Root_prolonged_drought_Replicate_2", "Root_prolonged_drought_Replicate_3"], "source": "private", "publication_id": "unpublished", "platform": "illumina", "sampleset_id": "Ptr_prolongdrought_test", "sampleset_desc": "Poplar with 6 samples ", "condition": ["control", "control", "control", "prolongDrought", "prolongDrought", "prolongDrought"]}}, "time": 1466612167989}], "widget": "null", "type": "function_input", "method": {"info": {"subtitle": "Provide RNA-seq reads and the metadata to create an RNA-seq Sample Set\n", "name": "Create RNA-seq Sample Set", "output_types": ["KBaseRNASeq.RNASeqSampleSet"], "namespace": "KBaseRNASeq", "tooltip": "Provide RNA-seq reads and the metadata to create an RNA-seq Sample Set\n", "git_commit_hash": "9283ae31ace5a743963d0d0e007d812c7b72dfa1", "input_types": ["KBaseAssembly.PairedEndLibrary", "KBaseAssembly.SingleEndLibrary"], "authors": [], "module_name": "KBaseRNASeq", "ver": "0.0.1", "id": "KBaseRNASeq/describe_rnaseq_experiment", "categories": ["active", "expression"], "icon": {"url": "img?method_id=KBaseRNASeq/describe_rnaseq_experiment&image_name=rnaseq-yellow.png&tag=dev"}}, "parameters": [{"field_type": "text", "ui_name": "RNA-seq Sample Set\n", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 1, "placeholder": "", "regex_constraint": [], "valid_ws_types": ["KBaseRNASeq.RNASeqSampleSet"]}, "disabled": 0, "short_hint": "Name of the output RNA-seq sample set object.\n", "default_values": [""], "ui_class": "output", "optional": 0, "id": "sampleset_id", "advanced": 0}, {"field_type": "textarea", "ui_name": "Sample Set Description\n", "allow_multiple": 0, "description": "", "disabled": 0, "short_hint": "The detailed description of the RNA-seq samples selected\n", "textarea_options": {"n_rows": 4, "placeholder": ""}, "default_values": [""], "ui_class": "parameter", "optional": 1, "id": "sampleset_desc", "advanced": 1}, {"field_type": "text", "ui_name": "Platform\n", "allow_multiple": 0, "description": "", "disabled": 0, "short_hint": "The platform used for sequencing (e.g Illumina)\n", "default_values": [""], "ui_class": "parameter", "optional": 1, "id": "platform", "advanced": 1}, {"field_type": "dropdown", "ui_name": "Library Type\n", "allow_multiple": 0, "description": "", "dropdown_options": {"options": [{"display": "Single-end", "value": "singleEnd"}, {"display": "Paired-end", "value": "pairedEnd"}]}, "disabled": 0, "short_hint": "The type of sequencing reads - single-end vs. paired-end \n", "default_values": [""], "ui_class": "parameter", "optional": 0, "id": "Library_type", "advanced": 0}, {"field_type": "text", "ui_name": "Reads (Single-end/Paired-end)\n", "allow_multiple": 1, "description": "", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "valid_ws_types": ["KBaseAssembly.SingleEndLibrary", "KBaseAssembly.PairedEndLibrary"]}, "disabled": 0, "short_hint": "Select the single-end or paired-end reads files based on the type of sequencing reads.\n", "default_values": [""], "ui_class": "input", "optional": 0, "id": "sample_ids", "advanced": 0}, {"field_type": "text", "ui_name": "Treatment Labels\n", "allow_multiple": 1, "description": "", "disabled": 0, "short_hint": "Short name for each unique sample treatment (no replicates) in the RNA-seq experiment. The treatment labels must be added in the same order as the reads.\n", "default_values": [""], "ui_class": "parameter", "optional": 0, "id": "condition", "advanced": 0}, {"field_type": "dropdown", "ui_name": "Domain \n", "allow_multiple": 0, "description": "", "dropdown_options": {"options": [{"display": "Eukaryotes", "value": "Eukaryotes"}, {"display": "Prokaryotes", "value": "Prokaryotes"}]}, "disabled": 0, "short_hint": "The domain of the genome - prokaryotes vs. eukaryotes\n", "default_values": [""], "ui_class": "parameter", "optional": 1, "id": "domain", "advanced": 0}, {"field_type": "text", "ui_name": "Source\n", "allow_multiple": 0, "description": "", "disabled": 0, "short_hint": "The source of the data used for RNA-seq experiment (e.g NCBI)\n", "default_values": [""], "ui_class": "parameter", "optional": 1, "id": "source", "advanced": 1}, {"field_type": "text", "ui_name": "Publication Details \n", "allow_multiple": 0, "description": "", "disabled": 0, "short_hint": "The publication details of the data used for RNA-seq experiment\n", "default_values": [""], "ui_class": "parameter", "optional": 1, "id": "publication_id", "advanced": 1}], "job_id_output_field": "docker", "fixed_parameters": [], "behavior": {"kb_service_method": "CreateRNASeqSampleSet", "kb_service_version": "9283ae31ace5a743963d0d0e007d812c7b72dfa1", "kb_service_output_mapping": [{"target_property": "output", "input_parameter": "sampleset_id"}, {"target_property": "workspace", "narrative_system_variable": "workspace"}, {"target_property": "CreateRNASeqSampleSet", "service_method_output_path": ["0"]}], "kb_service_url": "", "kb_service_name": "KBaseRNASeq", "kb_service_input_mapping": [{"target_property": "ws_id", "narrative_system_variable": "workspace"}, {"target_property": "sampleset_id", "input_parameter": "sampleset_id"}, {"target_property": "sampleset_desc", "input_parameter": "sampleset_desc"}, {"target_property": "platform", "input_parameter": "platform"}, {"target_property": "Library_type", "input_parameter": "Library_type"}, {"target_property": "sample_ids", "input_parameter": "sample_ids"}, {"target_property": "condition", "input_parameter": "condition"}, {"target_property": "domain", "input_parameter": "domain"}, {"target_property": "source", "input_parameter": "source"}, {"target_property": "publication_id", "input_parameter": "publication_id"}]}, "widgets": {"input": "null", "output": "kbaseRNASeqAnalysisNew"}}}}}, {"source": "<div id=\"kb-cell-out-7f3c9012-ed7f-408a-97ad-6679b04b9ce4\"></div>\n<script>$(\"#kb-cell-out-7f3c9012-ed7f-408a-97ad-6679b04b9ce4\").kbaseNarrativeOutputCell({\"data\":{\"output\":\"Ptr_prolongdrought_test\",\"workspace\":\"aparkin:1466611484825\",\"CreateRNASeqSampleSet\":{\"Library_type\":\"pairedEnd\",\"domain\":\"Eukaryotes\",\"sample_ids\":[\"Root_Control_set_2_Replicate_1\",\"Root_Control_set_2_Replicate_2\",\"Root_Control_set_2_Replicate_3\",\"Root_prolonged_drought_Replicate_1\",\"Root_prolonged_drought_Replicate_2\",\"Root_prolonged_drought_Replicate_3\"],\"source\":\"private\",\"publication_id\":\"unpublished\",\"platform\":\"illumina\",\"sampleset_id\":\"Ptr_prolongdrought_test\",\"num_samples\":6,\"sampleset_desc\":\"Poplar with 6 samples \",\"condition\":[\"control\",\"control\",\"control\",\"prolongDrought\",\"prolongDrought\",\"prolongDrought\"]}}, \"type\":\"method\", \"widget\":\"kbaseRNASeqAnalysisNew\", \"cellId\":\"kb-cell-out-7f3c9012-ed7f-408a-97ad-6679b04b9ce4\", \"title\":\"Create RNA-seq Sample Set\", \"time\":1466612167955});</script>", "cell_type": "markdown", "metadata": {"kbstate": {"title": "Create RNA-seq Sample Set (method output)", "icon": "<i class=\"fa fa-2x fa-file-o method-output-icon\"></i>"}, "kb-cell": {"widget": "kbaseRNASeqAnalysisNew", "type": "function_output", "widget_state": [{"state": null, "time": 1466620258942}, {"state": null, "time": 1466612167989}]}}}, {"source": "<div id=\"kb-cell-out-ce130655-5f1b-445b-8a7f-fad195e27486\"></div>\n<script>$(\"#kb-cell-out-ce130655-5f1b-445b-8a7f-fad195e27486\").kbaseNarrativeOutputCell({\"data\":{\"output\":\"Ptr_prolongdrought_test\",\"workspace\":\"sunita:1466104446131\",\"CreateRNASeqSampleSet\":{\"Library_type\":\"pairedEnd\",\"domain\":\"Eukaryotes\",\"sample_ids\":[\"Root_Control_set_2_Replicate_1\",\"Root_Control_set_2_Replicate_2\",\"Root_Control_set_2_Replicate_3\",\"Root_prolonged_drought_Replicate_1\",\"Root_prolonged_drought_Replicate_2\",\"Root_prolonged_drought_Replicate_3\"],\"source\":\"private\",\"publication_id\":\"unpublished\",\"platform\":\"illumina\",\"sampleset_id\":\"Ptr_prolongdrought_test\",\"num_samples\":6,\"sampleset_desc\":\"Poplar with 6 samples \",\"condition\":[\"control\",\"control\",\"control\",\"prolongDrought\",\"prolongDrought\",\"prolongDrought\"]}}, \"type\":\"method\", \"widget\":\"kbaseRNASeqAnalysisNew\", \"cellId\":\"kb-cell-out-ce130655-5f1b-445b-8a7f-fad195e27486\", \"title\":\"Create RNA-seq Sample Set\", \"time\":1466104678526});</script>", "cell_type": "markdown", "metadata": {"kbstate": {"title": "Create RNA-seq Sample Set (method output)", "selected": false, "icon": "<i class=\"fa fa-2x fa-file-o method-output-icon\"></i>"}, "kb-cell": {"widget": "kbaseRNASeqAnalysisNew", "type": "function_output", "widget_state": [{"state": null, "time": 1466620258943}, {"state": null, "time": 1466612167989}]}}}, {"source": "<p id=Step3></p>\n### Step 3. Align Reads using TopHat\n\nThis method aligns the RNA-seq reads to a eukaryotic genome using TopHat in order to identify splice junctions between exons with the help of the Bowtie2 mapping program.\n\nUsing a Bowtie2 index object and the sequencing read file, this method generates a set of read alignments in BAM format. In addition, it provides in a table format the alignment statistics, including alignment rate and total number of reads, mapped and unmapped reads, singletons, and multiple alignments. \n\nIt takes the sample set and indexed genome as input and generates the corresponding alignments of each sample and the merged alignment set. \n\n<b>NOTE: You can also use this as a stand alone method if you want to generate the alignment of only one single-end or paired-end library object.</b>", "cell_type": "markdown", "metadata": {"kbstate": {"title": "", "selected": false, "icon": ""}}}, {"source": "<div id='kb-cell-3-e88c735c-0173-48df-8b5e-87640b702ea9'></div>\n<script>$('#kb-cell-3-e88c735c-0173-48df-8b5e-87640b702ea9').kbaseNarrativeMethodCell({'method' : '{\"info\":{\"id\":\"KBaseRNASeq/align_reads_using_tophat\",\"module_name\":\"KBaseRNASeq\",\"git_commit_hash\":\"9283ae31ace5a743963d0d0e007d812c7b72dfa1\",\"name\":\"Align Reads using TopHat\",\"ver\":\"0.0.1\",\"subtitle\":\"Align sequencing reads to a genome using TopHat to identify exon-exon splice junctions.\\n\",\"tooltip\":\"Align sequencing reads to a genome using TopHat to identify exon-exon splice junctions.\\n\",\"icon\":{\"url\":\"img?method_id=KBaseRNASeq/align_reads_using_tophat&image_name=tophat-cyan.png&tag=dev\"},\"categories\":[\"active\",\"expression\",\"sequence\"],\"authors\":[],\"input_types\":[\"KBaseAssembly.PairedEndLibrary\",\"KBaseAssembly.SingleEndLibrary\",\"KBaseRNASeq.Bowtie2Indexes\",\"KBaseRNASeq.RNASeqSampleSet\"],\"output_types\":[],\"namespace\":\"KBaseRNASeq\"},\"widgets\":{\"input\":\"null\",\"output\":\"no-display\"},\"parameters\":[{\"id\":\"sampleset_id\",\"ui_name\":\"RNA-seq Sample or Sample Set\\n\",\"short_hint\":\"Select the RNA-seq read sample set associated with the RNA-seq experiment. Alternatively, if you have only one sample of RNA-seq reads, select the corresponding library object.\\n\",\"description\":\"\",\"field_type\":\"text\",\"allow_multiple\":0,\"optional\":0,\"advanced\":0,\"disabled\":0,\"ui_class\":\"input\",\"default_values\":[\"\"],\"text_options\":{\"valid_ws_types\":[\"KBaseRNASeq.RNASeqSampleSet\",\"KBaseAssembly.SingleEndLibrary\",\"KBaseAssembly.PairedEndLibrary\"],\"is_output_name\":0,\"placeholder\":\"\",\"regex_constraint\":[]}},{\"id\":\"bowtie_index\",\"ui_name\":\"Indexed Genome\\n\",\"short_hint\":\"Select the indexed genome built using Bowtie2\\n\",\"description\":\"\",\"field_type\":\"text\",\"allow_multiple\":0,\"optional\":0,\"advanced\":0,\"disabled\":0,\"ui_class\":\"input\",\"default_values\":[\"\"],\"text_options\":{\"valid_ws_types\":[\"KBaseRNASeq.Bowtie2Indexes\"],\"is_output_name\":0,\"placeholder\":\"\",\"regex_constraint\":[]}},{\"id\":\"read_mismatches\",\"ui_name\":\"Read Mismatch Cutoff\\n\",\"short_hint\":\"Final read alignments with more than this many mismatches are discarded.\\n\",\"description\":\"\",\"field_type\":\"text\",\"allow_multiple\":0,\"optional\":1,\"advanced\":1,\"disabled\":0,\"ui_class\":\"parameter\",\"default_values\":[\"2\"],\"text_options\":{\"validate_as\":\"int\",\"is_output_name\":0,\"placeholder\":\"\",\"regex_constraint\":[]}},{\"id\":\"read_gap_length\",\"ui_name\":\"Read Gap Cutoff\\n\",\"short_hint\":\"Final read alignments with more than this many gaps are discarded.\\n\",\"description\":\"\",\"field_type\":\"text\",\"allow_multiple\":0,\"optional\":1,\"advanced\":1,\"disabled\":0,\"ui_class\":\"parameter\",\"default_values\":[\"2\"],\"text_options\":{\"validate_as\":\"int\",\"is_output_name\":0,\"placeholder\":\"\",\"regex_constraint\":[]}},{\"id\":\"read_edit_dist\",\"ui_name\":\"Read Edit Cutoff\\n\",\"short_hint\":\"Final read alignments with more than this many edits are discarded.\\n\",\"description\":\"\",\"field_type\":\"text\",\"allow_multiple\":0,\"optional\":1,\"advanced\":1,\"disabled\":0,\"ui_class\":\"parameter\",\"default_values\":[\"2\"],\"text_options\":{\"validate_as\":\"int\",\"is_output_name\":0,\"placeholder\":\"\",\"regex_constraint\":[]}},{\"id\":\"min_intron_length\",\"ui_name\":\"Minimum Intron Length\\n\",\"short_hint\":\"TopHat will ignore donor/acceptor pairs closer than this many bases apart.\\n\",\"description\":\"\",\"field_type\":\"text\",\"allow_multiple\":0,\"optional\":1,\"advanced\":1,\"disabled\":0,\"ui_class\":\"parameter\",\"default_values\":[\"70\"],\"text_options\":{\"validate_as\":\"int\",\"is_output_name\":0,\"placeholder\":\"\",\"regex_constraint\":[]}},{\"id\":\"max_intron_length\",\"ui_name\":\"Maximum Intron Length\\n\",\"short_hint\":\"TopHat will ignore donor/acceptor pairs farther than this many bases apart.\\n\",\"description\":\"\",\"field_type\":\"text\",\"allow_multiple\":0,\"optional\":1,\"advanced\":1,\"disabled\":0,\"ui_class\":\"parameter\",\"default_values\":[\"500000\"],\"text_options\":{\"validate_as\":\"int\",\"is_output_name\":0,\"placeholder\":\"\",\"regex_constraint\":[]}},{\"id\":\"min-anchor-length\",\"ui_name\":\"Minimum Anchor Length\\n\",\"short_hint\":\"TopHat will report junctions spanned by reads with at least this many bases on each side of the junction. This must be at least 3 and the default is 8.\\n\",\"description\":\"\",\"field_type\":\"text\",\"allow_multiple\":0,\"optional\":1,\"advanced\":1,\"disabled\":0,\"ui_class\":\"parameter\",\"default_values\":[\"8\"],\"text_options\":{\"validate_as\":\"int\",\"is_output_name\":0,\"placeholder\":\"\",\"regex_constraint\":[]}},{\"id\":\"num_threads\",\"ui_name\":\"Number of Threads\\n\",\"short_hint\":\"Number of computational threads to align reads.\\n\",\"description\":\"\",\"field_type\":\"text\",\"allow_multiple\":0,\"optional\":1,\"advanced\":1,\"disabled\":0,\"ui_class\":\"parameter\",\"default_values\":[\"2\"],\"text_options\":{\"validate_as\":\"int\",\"is_output_name\":0,\"placeholder\":\"\",\"regex_constraint\":[]}},{\"id\":\"report_secondary_alignments\",\"ui_name\":\"Report Secondary Alignments\\n\",\"short_hint\":\"Use this option to output secondary alignments.\\n\",\"description\":\"\",\"field_type\":\"checkbox\",\"allow_multiple\":0,\"optional\":1,\"advanced\":1,\"disabled\":0,\"ui_class\":\"parameter\",\"default_values\":[\"\"],\"checkbox_options\":{\"checked_value\":1,\"unchecked_value\":0}},{\"id\":\"no_coverage_search\",\"ui_name\":\"No Coverage Search\\n\",\"short_hint\":\"Use this option to disable the coverage-based search for junctions.\\n\",\"description\":\"\",\"field_type\":\"checkbox\",\"allow_multiple\":0,\"optional\":1,\"advanced\":1,\"disabled\":0,\"ui_class\":\"parameter\",\"default_values\":[\"\"],\"checkbox_options\":{\"checked_value\":1,\"unchecked_value\":0}},{\"id\":\"library_type\",\"ui_name\":\"Library Type\\n\",\"short_hint\":\"Select the direction of the reads with respect to the original mRNA when the library was prepared. The default is fr-unstranded.\\n\",\"description\":\"\",\"field_type\":\"dropdown\",\"allow_multiple\":0,\"optional\":1,\"advanced\":1,\"disabled\":0,\"ui_class\":\"parameter\",\"default_values\":[\"\"],\"dropdown_options\":{\"options\":[{\"value\":\"fr-unstranded\",\"display\":\"fr-unstranded\"},{\"value\":\"fr-firststrand\",\"display\":\"fr-firststrand\"},{\"value\":\"fr-secondstrand\",\"display\":\"fr-secondstrand\"}]}},{\"id\":\"preset_options\",\"ui_name\":\"Bowtie2 Alignment Preset Options\\n\",\"short_hint\":\"Select the preset options to Bowtie2 for how reads are mapped. \\n\",\"description\":\"Faster option is generally less sensitive and vice versa.\\n\",\"field_type\":\"dropdown\",\"allow_multiple\":0,\"optional\":1,\"advanced\":1,\"disabled\":0,\"ui_class\":\"parameter\",\"default_values\":[\"\"],\"dropdown_options\":{\"options\":[{\"value\":\"b2-very-fast\",\"display\":\"b2-very-fast\"},{\"value\":\"b2-fast\",\"display\":\"b2-fast\"},{\"value\":\"b2-sensitive\",\"display\":\"b2-sensitive\"},{\"value\":\"b2-very-sensitive\",\"display\":\"b2-very-sensitive\"}]}}],\"fixed_parameters\":[],\"behavior\":{\"kb_service_url\":\"\",\"kb_service_name\":\"KBaseRNASeq\",\"kb_service_version\":\"9283ae31ace5a743963d0d0e007d812c7b72dfa1\",\"kb_service_method\":\"TophatCall\",\"kb_service_input_mapping\":[{\"narrative_system_variable\":\"workspace\",\"target_property\":\"ws_id\"},{\"input_parameter\":\"sampleset_id\",\"target_property\":\"sampleset_id\"},{\"input_parameter\":\"bowtie_index\",\"target_property\":\"bowtie_index\"},{\"input_parameter\":\"read_mismatches\",\"target_property\":\"read_mismatches\"},{\"input_parameter\":\"read_gap_length\",\"target_property\":\"read_gap_length\"},{\"input_parameter\":\"read_edit_dist\",\"target_property\":\"read_edit_dist\"},{\"input_parameter\":\"min_intron_length\",\"target_property\":\"min_intron_length\"},{\"input_parameter\":\"max_intron_length\",\"target_property\":\"maxi_intron_length\"},{\"input_parameter\":\"min-anchor-length\",\"target_property\":\"min-anchor-length\"},{\"input_parameter\":\"num_threads\",\"target_property\":\"num_threads\"},{\"input_parameter\":\"report_secondary_alignments\",\"target_property\":\"report_secondary_alignments\"},{\"input_parameter\":\"no_coverage_search\",\"target_property\":\"no_coverage_search\"},{\"input_parameter\":\"library_type\",\"target_property\":\"library_type\"},{\"input_parameter\":\"preset_options\",\"target_property\":\"preset_options\"}],\"kb_service_output_mapping\":[{\"service_method_output_path\":[\"0\",\"report_name\"],\"target_property\":\"report_name\"},{\"service_method_output_path\":[\"0\",\"report_ref\"],\"target_property\":\"report_ref\"},{\"narrative_system_variable\":\"workspace\",\"target_property\":\"workspace_name\"},{\"constant_value\":\"5\",\"target_property\":\"report_window_line_height\"}]},\"job_id_output_field\":\"docker\"}', 'cellId' : 'kb-cell-3-e88c735c-0173-48df-8b5e-87640b702ea9'});</script>", "cell_type": "markdown", "metadata": {"kbstate": {"title": "Align Reads using TopHat", "selected": false, "icon": "<img src=\"https://ci.kbase.us/services/narrative_method_store/img?method_id=KBaseRNASeq/align_reads_using_tophat&amp;image_name=tophat-cyan.png&amp;tag=dev\" style=\"max-width: 50px; max-height: 50px; cursor: default;\">"}, "kb-cell": {"widget_state": [{"state": {"runningState": {"outputState": true, "runState": "running", "submittedText": "submitted on 09:56:03, 6/22/2016 by <a href=\"/#people/aparkin\" target=\"_blank\">aparkin</a>"}, "jobDetails": {"job_info": {"spec": {"parameterValues": ["Ptr_prolongdrought_test", "Ptr_bowtie2_indexed", "2", "2", "2", "70", "500000", "8", "2", 0, 0, null, null], "methodSpec": {"info": {"subtitle": "Align sequencing reads to a genome using TopHat to identify exon-exon splice junctions.", "name": "Align Reads using TopHat", "output_types": [], "namespace": "KBaseRNASeq", "tooltip": "Align sequencing reads to a genome using TopHat to identify exon-exon splice junctions.", "git_commit_hash": "9283ae31ace5a743963d0d0e007d812c7b72dfa1", "input_types": ["KBaseAssembly.PairedEndLibrary", "KBaseAssembly.SingleEndLibrary", "KBaseRNASeq.Bowtie2Indexes", "KBaseRNASeq.RNASeqSampleSet"], "authors": [], "module_name": "KBaseRNASeq", "ver": "0.0.1", "id": "KBaseRNASeq/align_reads_using_tophat", "categories": ["active", "expression", "sequence"], "icon": {"url": "img?method_id=KBaseRNASeq/align_reads_using_tophat&image_name=tophat-cyan.png&tag=dev"}}, "parameters": [{"field_type": "text", "ui_name": "RNA-seq Sample or Sample Set", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "valid_ws_types": ["KBaseRNASeq.RNASeqSampleSet", "KBaseAssembly.SingleEndLibrary", "KBaseAssembly.PairedEndLibrary"]}, "disabled": 0, "short_hint": "Select the RNA-seq read sample set associated with the RNA-seq experiment. Alternatively, if you have only one sample of RNA-seq reads, select the corresponding library object.", "default_values": [""], "ui_class": "input", "optional": 0, "id": "sampleset_id", "advanced": 0}, {"field_type": "text", "ui_name": "Indexed Genome", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "valid_ws_types": ["KBaseRNASeq.Bowtie2Indexes"]}, "disabled": 0, "short_hint": "Select the indexed genome built using Bowtie2", "default_values": [""], "ui_class": "input", "optional": 0, "id": "bowtie_index", "advanced": 0}, {"field_type": "text", "ui_name": "Read Mismatch Cutoff", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "int"}, "disabled": 0, "short_hint": "Final read alignments with more than this many mismatches are discarded.", "default_values": ["2"], "ui_class": "parameter", "optional": 1, "id": "read_mismatches", "advanced": 1}, {"field_type": "text", "ui_name": "Read Gap Cutoff", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "int"}, "disabled": 0, "short_hint": "Final read alignments with more than this many gaps are discarded.", "default_values": ["2"], "ui_class": "parameter", "optional": 1, "id": "read_gap_length", "advanced": 1}, {"field_type": "text", "ui_name": "Read Edit Cutoff", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "int"}, "disabled": 0, "short_hint": "Final read alignments with more than this many edits are discarded.", "default_values": ["2"], "ui_class": "parameter", "optional": 1, "id": "read_edit_dist", "advanced": 1}, {"field_type": "text", "ui_name": "Minimum Intron Length", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "int"}, "disabled": 0, "short_hint": "TopHat will ignore donor/acceptor pairs closer than this many bases apart.", "default_values": ["70"], "ui_class": "parameter", "optional": 1, "id": "min_intron_length", "advanced": 1}, {"field_type": "text", "ui_name": "Maximum Intron Length", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "int"}, "disabled": 0, "short_hint": "TopHat will ignore donor/acceptor pairs farther than this many bases apart.", "default_values": ["500000"], "ui_class": "parameter", "optional": 1, "id": "max_intron_length", "advanced": 1}, {"field_type": "text", "ui_name": "Minimum Anchor Length", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "int"}, "disabled": 0, "short_hint": "TopHat will report junctions spanned by reads with at least this many bases on each side of the junction. This must be at least 3 and the default is 8.", "default_values": ["8"], "ui_class": "parameter", "optional": 1, "id": "min-anchor-length", "advanced": 1}, {"field_type": "text", "ui_name": "Number of Threads", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "int"}, "disabled": 0, "short_hint": "Number of computational threads to align reads.", "default_values": ["2"], "ui_class": "parameter", "optional": 1, "id": "num_threads", "advanced": 1}, {"field_type": "checkbox", "ui_name": "Report Secondary Alignments", "allow_multiple": 0, "description": "", "optional": 1, "disabled": 0, "short_hint": "Use this option to output secondary alignments.", "default_values": [""], "ui_class": "parameter", "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "id": "report_secondary_alignments", "advanced": 1}, {"field_type": "checkbox", "ui_name": "No Coverage Search", "allow_multiple": 0, "description": "", "optional": 1, "disabled": 0, "short_hint": "Use this option to disable the coverage-based search for junctions.", "default_values": [""], "ui_class": "parameter", "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "id": "no_coverage_search", "advanced": 1}, {"field_type": "dropdown", "ui_name": "Library Type", "allow_multiple": 0, "description": "", "dropdown_options": {"options": [{"display": "fr-unstranded", "value": "fr-unstranded"}, {"display": "fr-firststrand", "value": "fr-firststrand"}, {"display": "fr-secondstrand", "value": "fr-secondstrand"}]}, "disabled": 0, "short_hint": "Select the direction of the reads with respect to the original mRNA when the library was prepared. The default is fr-unstranded.", "default_values": [""], "ui_class": "parameter", "optional": 1, "id": "library_type", "advanced": 1}, {"field_type": "dropdown", "ui_name": "Bowtie2 Alignment Preset Options", "allow_multiple": 0, "description": "Faster option is generally less sensitive and vice versa.", "dropdown_options": {"options": [{"display": "b2-very-fast", "value": "b2-very-fast"}, {"display": "b2-fast", "value": "b2-fast"}, {"display": "b2-sensitive", "value": "b2-sensitive"}, {"display": "b2-very-sensitive", "value": "b2-very-sensitive"}]}, "disabled": 0, "short_hint": "Select the preset options to Bowtie2 for how reads are mapped. ", "default_values": [""], "ui_class": "parameter", "optional": 1, "id": "preset_options", "advanced": 1}], "job_id_output_field": "docker", "fixed_parameters": [], "behavior": {"kb_service_method": "TophatCall", "kb_service_version": "9283ae31ace5a743963d0d0e007d812c7b72dfa1", "kb_service_output_mapping": [{"target_property": "report_name", "service_method_output_path": ["0", "report_name"]}, {"target_property": "report_ref", "service_method_output_path": ["0", "report_ref"]}, {"target_property": "workspace_name", "narrative_system_variable": "workspace"}, {"target_property": "report_window_line_height", "constant_value": "5"}], "kb_service_url": "", "kb_service_name": "KBaseRNASeq", "kb_service_input_mapping": [{"target_property": "ws_id", "narrative_system_variable": "workspace"}, {"target_property": "sampleset_id", "input_parameter": "sampleset_id"}, {"target_property": "bowtie_index", "input_parameter": "bowtie_index"}, {"target_property": "read_mismatches", "input_parameter": "read_mismatches"}, {"target_property": "read_gap_length", "input_parameter": "read_gap_length"}, {"target_property": "read_edit_dist", "input_parameter": "read_edit_dist"}, {"target_property": "min_intron_length", "input_parameter": "min_intron_length"}, {"target_property": "maxi_intron_length", "input_parameter": "max_intron_length"}, {"target_property": "min-anchor-length", "input_parameter": "min-anchor-length"}, {"target_property": "num_threads", "input_parameter": "num_threads"}, {"target_property": "report_secondary_alignments", "input_parameter": "report_secondary_alignments"}, {"target_property": "no_coverage_search", "input_parameter": "no_coverage_search"}, {"target_property": "library_type", "input_parameter": "library_type"}, {"target_property": "preset_options", "input_parameter": "preset_options"}]}, "widgets": {"input": "null", "output": "no-display"}}}}, "job_state": {"status": "in-progress", "target": "", "$elem": "null", "timestamp": "2016-06-22T16:56:04.116Z", "source": "kb-cell-3-e88c735c-0173-48df-8b5e-87640b702ea9", "state": {"start_timestamp": 1466614563279, "is_deleted": 0, "job_id": "method:576ac323e4b000fe6e787cb0", "step_job_ids": {"KBaseRNASeq/align_reads_using_tophat": "576ac323e4b000fe6e787cb0"}, "start_time": "2016-06-22T18:21:15.585Z", "running_step_id": "KBaseRNASeq/align_reads_using_tophat", "step_stats": {"KBaseRNASeq/align_reads_using_tophat": {"creation_time": 1466614563275, "awe_job_id": "5d05f0a3-2871-4bff-96ed-d25843e123da", "exec_start_time": 1466619675585}}, "step_outputs": {}, "submit_time": "2016-06-22T16:56:03.275Z", "step_errors": {}, "job_state": "in-progress", "original_app": {"steps": [{"service": {"method_name": "TophatCall", "service_name": "KBaseRNASeq", "service_url": "", "service_version": "9283ae31ace5a743963d0d0e007d812c7b72dfa1"}, "script": {"method_name": "", "has_files": 0, "service_name": ""}, "method_spec_id": "KBaseRNASeq/align_reads_using_tophat", "input_values": [{"library_type": null, "num_threads": "2", "ws_id": "aparkin:1466611484825", "no_coverage_search": 0, "read_gap_length": "2", "min_intron_length": "70", "sampleset_id": "Ptr_prolongdrought_test", "preset_options": null, "min-anchor-length": "8", "read_edit_dist": "2", "report_secondary_alignments": 0, "bowtie_index": "Ptr_bowtie2_indexed", "read_mismatches": "2", "maxi_intron_length": "500000"}], "step_id": "KBaseRNASeq/align_reads_using_tophat", "type": "service", "is_long_running": 1}], "name": "App wrapper for method KBaseRNASeq/align_reads_using_tophat"}}, "id": "method:576ac323e4b000fe6e787cb0"}, "job_id": "method:576ac323e4b000fe6e787cb0"}, "params": {"library_type": null, "num_threads": "2", "no_coverage_search": 0, "max_intron_length": "500000", "min_intron_length": "70", "sampleset_id": "Ptr_prolongdrought_test", "preset_options": null, "min-anchor-length": "8", "read_edit_dist": "2", "report_secondary_alignments": 0, "bowtie_index": "Ptr_bowtie2_indexed", "read_mismatches": "2", "read_gap_length": "2"}}, "time": 1466620258943}, {"state": {"runningState": {"outputState": true, "runState": "submitted", "submittedText": "submitted on 09:56:03, 6/22/2016 by <a href=\"/#people/aparkin\" target=\"_blank\">aparkin</a>"}, "jobDetails": null, "params": {"library_type": null, "num_threads": "2", "no_coverage_search": 0, "max_intron_length": "500000", "min_intron_length": "70", "sampleset_id": "Ptr_prolongdrought_test", "preset_options": null, "min-anchor-length": "8", "read_edit_dist": "2", "report_secondary_alignments": 0, "bowtie_index": "Ptr_bowtie2_indexed", "read_mismatches": "2", "read_gap_length": "2"}}, "time": 1466614563798}], "widget": "null", "type": "function_input", "method": {"info": {"subtitle": "Align sequencing reads to a genome using TopHat to identify exon-exon splice junctions.\n", "name": "Align Reads using TopHat", "output_types": [], "namespace": "KBaseRNASeq", "tooltip": "Align sequencing reads to a genome using TopHat to identify exon-exon splice junctions.\n", "git_commit_hash": "9283ae31ace5a743963d0d0e007d812c7b72dfa1", "input_types": ["KBaseAssembly.PairedEndLibrary", "KBaseAssembly.SingleEndLibrary", "KBaseRNASeq.Bowtie2Indexes", "KBaseRNASeq.RNASeqSampleSet"], "authors": [], "module_name": "KBaseRNASeq", "ver": "0.0.1", "id": "KBaseRNASeq/align_reads_using_tophat", "categories": ["active", "expression", "sequence"], "icon": {"url": "img?method_id=KBaseRNASeq/align_reads_using_tophat&image_name=tophat-cyan.png&tag=dev"}}, "parameters": [{"field_type": "text", "ui_name": "RNA-seq Sample or Sample Set\n", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "valid_ws_types": ["KBaseRNASeq.RNASeqSampleSet", "KBaseAssembly.SingleEndLibrary", "KBaseAssembly.PairedEndLibrary"]}, "disabled": 0, "short_hint": "Select the RNA-seq read sample set associated with the RNA-seq experiment. Alternatively, if you have only one sample of RNA-seq reads, select the corresponding library object.\n", "default_values": [""], "ui_class": "input", "optional": 0, "id": "sampleset_id", "advanced": 0}, {"field_type": "text", "ui_name": "Indexed Genome\n", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "valid_ws_types": ["KBaseRNASeq.Bowtie2Indexes"]}, "disabled": 0, "short_hint": "Select the indexed genome built using Bowtie2\n", "default_values": [""], "ui_class": "input", "optional": 0, "id": "bowtie_index", "advanced": 0}, {"field_type": "text", "ui_name": "Read Mismatch Cutoff\n", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "int"}, "disabled": 0, "short_hint": "Final read alignments with more than this many mismatches are discarded.\n", "default_values": ["2"], "ui_class": "parameter", "optional": 1, "id": "read_mismatches", "advanced": 1}, {"field_type": "text", "ui_name": "Read Gap Cutoff\n", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "int"}, "disabled": 0, "short_hint": "Final read alignments with more than this many gaps are discarded.\n", "default_values": ["2"], "ui_class": "parameter", "optional": 1, "id": "read_gap_length", "advanced": 1}, {"field_type": "text", "ui_name": "Read Edit Cutoff\n", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "int"}, "disabled": 0, "short_hint": "Final read alignments with more than this many edits are discarded.\n", "default_values": ["2"], "ui_class": "parameter", "optional": 1, "id": "read_edit_dist", "advanced": 1}, {"field_type": "text", "ui_name": "Minimum Intron Length\n", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "int"}, "disabled": 0, "short_hint": "TopHat will ignore donor/acceptor pairs closer than this many bases apart.\n", "default_values": ["70"], "ui_class": "parameter", "optional": 1, "id": "min_intron_length", "advanced": 1}, {"field_type": "text", "ui_name": "Maximum Intron Length\n", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "int"}, "disabled": 0, "short_hint": "TopHat will ignore donor/acceptor pairs farther than this many bases apart.\n", "default_values": ["500000"], "ui_class": "parameter", "optional": 1, "id": "max_intron_length", "advanced": 1}, {"field_type": "text", "ui_name": "Minimum Anchor Length\n", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "int"}, "disabled": 0, "short_hint": "TopHat will report junctions spanned by reads with at least this many bases on each side of the junction. This must be at least 3 and the default is 8.\n", "default_values": ["8"], "ui_class": "parameter", "optional": 1, "id": "min-anchor-length", "advanced": 1}, {"field_type": "text", "ui_name": "Number of Threads\n", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "int"}, "disabled": 0, "short_hint": "Number of computational threads to align reads.\n", "default_values": ["2"], "ui_class": "parameter", "optional": 1, "id": "num_threads", "advanced": 1}, {"field_type": "checkbox", "ui_name": "Report Secondary Alignments\n", "allow_multiple": 0, "description": "", "optional": 1, "disabled": 0, "short_hint": "Use this option to output secondary alignments.\n", "default_values": [""], "ui_class": "parameter", "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "id": "report_secondary_alignments", "advanced": 1}, {"field_type": "checkbox", "ui_name": "No Coverage Search\n", "allow_multiple": 0, "description": "", "optional": 1, "disabled": 0, "short_hint": "Use this option to disable the coverage-based search for junctions.\n", "default_values": [""], "ui_class": "parameter", "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "id": "no_coverage_search", "advanced": 1}, {"field_type": "dropdown", "ui_name": "Library Type\n", "allow_multiple": 0, "description": "", "dropdown_options": {"options": [{"display": "fr-unstranded", "value": "fr-unstranded"}, {"display": "fr-firststrand", "value": "fr-firststrand"}, {"display": "fr-secondstrand", "value": "fr-secondstrand"}]}, "disabled": 0, "short_hint": "Select the direction of the reads with respect to the original mRNA when the library was prepared. The default is fr-unstranded.\n", "default_values": [""], "ui_class": "parameter", "optional": 1, "id": "library_type", "advanced": 1}, {"field_type": "dropdown", "ui_name": "Bowtie2 Alignment Preset Options\n", "allow_multiple": 0, "description": "Faster option is generally less sensitive and vice versa.\n", "dropdown_options": {"options": [{"display": "b2-very-fast", "value": "b2-very-fast"}, {"display": "b2-fast", "value": "b2-fast"}, {"display": "b2-sensitive", "value": "b2-sensitive"}, {"display": "b2-very-sensitive", "value": "b2-very-sensitive"}]}, "disabled": 0, "short_hint": "Select the preset options to Bowtie2 for how reads are mapped. \n", "default_values": [""], "ui_class": "parameter", "optional": 1, "id": "preset_options", "advanced": 1}], "job_id_output_field": "docker", "fixed_parameters": [], "behavior": {"kb_service_method": "TophatCall", "kb_service_version": "9283ae31ace5a743963d0d0e007d812c7b72dfa1", "kb_service_output_mapping": [{"target_property": "report_name", "service_method_output_path": ["0", "report_name"]}, {"target_property": "report_ref", "service_method_output_path": ["0", "report_ref"]}, {"target_property": "workspace_name", "narrative_system_variable": "workspace"}, {"target_property": "report_window_line_height", "constant_value": "5"}], "kb_service_url": "", "kb_service_name": "KBaseRNASeq", "kb_service_input_mapping": [{"target_property": "ws_id", "narrative_system_variable": "workspace"}, {"target_property": "sampleset_id", "input_parameter": "sampleset_id"}, {"target_property": "bowtie_index", "input_parameter": "bowtie_index"}, {"target_property": "read_mismatches", "input_parameter": "read_mismatches"}, {"target_property": "read_gap_length", "input_parameter": "read_gap_length"}, {"target_property": "read_edit_dist", "input_parameter": "read_edit_dist"}, {"target_property": "min_intron_length", "input_parameter": "min_intron_length"}, {"target_property": "maxi_intron_length", "input_parameter": "max_intron_length"}, {"target_property": "min-anchor-length", "input_parameter": "min-anchor-length"}, {"target_property": "num_threads", "input_parameter": "num_threads"}, {"target_property": "report_secondary_alignments", "input_parameter": "report_secondary_alignments"}, {"target_property": "no_coverage_search", "input_parameter": "no_coverage_search"}, {"target_property": "library_type", "input_parameter": "library_type"}, {"target_property": "preset_options", "input_parameter": "preset_options"}]}, "widgets": {"input": "null", "output": "no-display"}}}}}, {"source": "<div id=\"kb-cell-out-f3ce2ae8-f63a-4e65-83a3-d48db25aff8b\"></div>\n<script>$(\"#kb-cell-out-f3ce2ae8-f63a-4e65-83a3-d48db25aff8b\").kbaseNarrativeOutputCell({\"data\":{\"nearCellIdx\":11,\"widget\":\"kbaseNarrativeDataCell\",\"info\":{\"id\":19,\"name\":\"Ptr_prolongdrought_test_AlignmentSet\",\"type\":\"KBaseRNASeq.RNASeqAlignmentSet-6.0\",\"save_date\":\"2016-06-16T20:15:30+0000\",\"version\":1,\"saved_by\":\"sunita\",\"ws_id\":8052,\"ws_name\":\"sunita:1466104446131\",\"chsum\":\"39bfbccfb2337c200b3499e2ac6725fc\",\"size\":1287,\"meta\":null}}, \"type\":\"viewer\", \"widget\":\"kbaseNarrativeDataCell\", \"cellId\":\"kb-cell-out-f3ce2ae8-f63a-4e65-83a3-d48db25aff8b\", \"title\":\"Data Viewer\", \"time\":1466442373381});</script>", "cell_type": "markdown", "metadata": {"kbstate": {"title": "Ptr_prolongdrought_test_AlignmentSet", "selected": false, "icon": "<i class=\"fa fa-2x fa-table data-viewer-icon\"></i>"}, "kb-cell": {"widget": "kbaseNarrativeDataCell", "type": "function_output", "widget_state": [{"state": null, "time": 1466620258943}, {"state": null, "time": 1466612167989}]}}}, {"source": "<p id=Step4></p>\n### Step 4. Assemble Transcripts using Cufflinks\n\nThis method assembles transcripts using Cufflinks and generates an output object containing GTF and FPKM files. \n\nThe GTF file contains annotated transcripts assembled by Cufflinks, whereas the FPKM file gives the normalized abundance of each transcript expressed in FPKM. In the Cufflinks Table, the Histogram tab displays the abundance of normalized gene expression value, log2(FPKM+1).\n\n\n<b>NOTE: You can also use this as a stand alone method if you want to generate the cufflinks of only one alignment object.</b>", "cell_type": "markdown", "metadata": {"kbstate": {"title": "", "selected": false, "icon": ""}}}, {"source": "<div id='kb-cell-5-e360a06c-82a3-4480-996f-a638d18f7216'></div>\n<script>$('#kb-cell-5-e360a06c-82a3-4480-996f-a638d18f7216').kbaseNarrativeMethodCell({'method' : '{\"info\":{\"id\":\"KBaseRNASeq/assemble_transcripts_with_cufflinks\",\"module_name\":\"KBaseRNASeq\",\"git_commit_hash\":\"9283ae31ace5a743963d0d0e007d812c7b72dfa1\",\"name\":\"Assemble Transcripts using Cufflinks\",\"ver\":\"0.0.1\",\"subtitle\":\"Assemble the transcripts from RNA-seq reads using Cufflinks. \\n\",\"tooltip\":\"Assemble the transcripts from RNA-seq reads using Cufflinks. \\n\",\"icon\":{\"url\":\"img?method_id=KBaseRNASeq/assemble_transcripts_with_cufflinks&image_name=cufflinks-yellow.png&tag=dev\"},\"categories\":[\"active\",\"expression\",\"assembly\"],\"authors\":[],\"input_types\":[\"KBaseRNASeq.RNASeqAlignment\",\"KBaseRNASeq.RNASeqAlignmentSet\"],\"output_types\":[],\"namespace\":\"KBaseRNASeq\"},\"widgets\":{\"input\":\"null\",\"output\":\"no-display\"},\"parameters\":[{\"id\":\"alignmentset_id\",\"ui_name\":\"RNA-seq Alignment or Alignment Set \\n\",\"short_hint\":\"Select the RNA-seq alignment or alignment set created by Bowtie2 or TopHat.\\n\",\"description\":\"\",\"field_type\":\"text\",\"allow_multiple\":0,\"optional\":0,\"advanced\":0,\"disabled\":0,\"ui_class\":\"input\",\"default_values\":[\"\"],\"text_options\":{\"valid_ws_types\":[\"KBaseRNASeq.RNASeqAlignmentSet\",\"KBaseRNASeq.RNASeqAlignment\"],\"is_output_name\":0,\"placeholder\":\"\",\"regex_constraint\":[]}},{\"id\":\"num-threads\",\"ui_name\":\"Number of  Threads\\n\",\"short_hint\":\"Number of computational threads to assemble transcriptomes. The default is 1.\\n\",\"description\":\"\",\"field_type\":\"text\",\"allow_multiple\":0,\"optional\":1,\"advanced\":1,\"disabled\":0,\"ui_class\":\"parameter\",\"default_values\":[\"2\"],\"text_options\":{\"validate_as\":\"int\",\"is_output_name\":0,\"placeholder\":\"\",\"regex_constraint\":[]}},{\"id\":\"min-intron-length\",\"ui_name\":\"Minimum Intron Length\\n\",\"short_hint\":\"Minimum size of intron allowed in a genome. The default is 50bp.\\n\",\"description\":\"\",\"field_type\":\"text\",\"allow_multiple\":0,\"optional\":1,\"advanced\":1,\"disabled\":0,\"ui_class\":\"parameter\",\"default_values\":[\"50\"],\"text_options\":{\"validate_as\":\"int\",\"is_output_name\":0,\"placeholder\":\"\",\"regex_constraint\":[]}},{\"id\":\"max-intron-length\",\"ui_name\":\"Maximum lntron Length\\n\",\"short_hint\":\"Cufflinks will not report transcripts with introns longer than this. The default is 300,000bp. \\n\",\"description\":\"\",\"field_type\":\"text\",\"allow_multiple\":0,\"optional\":1,\"advanced\":1,\"disabled\":0,\"ui_class\":\"parameter\",\"default_values\":[\"300000\"],\"text_options\":{\"validate_as\":\"int\",\"is_output_name\":0,\"placeholder\":\"\",\"regex_constraint\":[]}},{\"id\":\"overhang-tolerance\",\"ui_name\":\"Overhang Tolerance\\n\",\"short_hint\":\"The number of terminal exon base pairs allowed in a transcript intron. The default is 8bp.\\n\",\"description\":\"\",\"field_type\":\"text\",\"allow_multiple\":0,\"optional\":1,\"advanced\":1,\"disabled\":0,\"ui_class\":\"parameter\",\"default_values\":[\"8\"],\"text_options\":{\"validate_as\":\"int\",\"is_output_name\":0,\"placeholder\":\"\",\"regex_constraint\":[]}}],\"fixed_parameters\":[],\"behavior\":{\"kb_service_url\":\"\",\"kb_service_name\":\"KBaseRNASeq\",\"kb_service_version\":\"9283ae31ace5a743963d0d0e007d812c7b72dfa1\",\"kb_service_method\":\"CufflinksCall\",\"kb_service_input_mapping\":[{\"narrative_system_variable\":\"workspace\",\"target_property\":\"ws_id\"},{\"input_parameter\":\"alignmentset_id\",\"target_property\":\"alignmentset_id\"},{\"input_parameter\":\"num-threads\",\"target_property\":\"num-threads\"},{\"input_parameter\":\"min-intron-length\",\"target_property\":\"min-intron-length\"},{\"input_parameter\":\"max-intron-length\",\"target_property\":\"max-intron-length\"},{\"input_parameter\":\"overhang-tolerance\",\"target_property\":\"overhang-tolerance\"}],\"kb_service_output_mapping\":[{\"service_method_output_path\":[\"0\",\"report_name\"],\"target_property\":\"report_name\"},{\"service_method_output_path\":[\"0\",\"report_ref\"],\"target_property\":\"report_ref\"},{\"narrative_system_variable\":\"workspace\",\"target_property\":\"workspace_name\"},{\"constant_value\":\"5\",\"target_property\":\"report_window_line_height\"}]},\"job_id_output_field\":\"docker\"}', 'cellId' : 'kb-cell-5-e360a06c-82a3-4480-996f-a638d18f7216'});</script>", "cell_type": "markdown", "metadata": {"kbstate": {"title": "Assemble Transcripts using Cufflinks", "selected": false, "icon": "<img src=\"https://ci.kbase.us/services/narrative_method_store/img?method_id=KBaseRNASeq/assemble_transcripts_with_cufflinks&amp;image_name=cufflinks-yellow.png&amp;tag=dev\" style=\"max-width: 50px; max-height: 50px; cursor: default;\">"}, "kb-cell": {"widget_state": [{"state": {"runningState": {"outputState": false, "runState": "complete", "submittedText": "submitted on 10:05:04, 6/18/2016 by <a href=\"/#people/sunita\" target=\"_blank\">sunita</a>"}, "jobDetails": {"job_info": {"spec": {"parameterValues": ["Ptr_prolongdrought_test_AlignmentSet", "2", "50", "300000", "8"], "methodSpec": {"info": {"subtitle": "Assemble the transcripts from RNA-seq reads using Cufflinks. ", "name": "Assemble Transcripts using Cufflinks", "output_types": [], "namespace": "KBaseRNASeq", "tooltip": "Assemble the transcripts from RNA-seq reads using Cufflinks. ", "git_commit_hash": "9283ae31ace5a743963d0d0e007d812c7b72dfa1", "input_types": ["KBaseRNASeq.RNASeqAlignment", "KBaseRNASeq.RNASeqAlignmentSet"], "authors": [], "module_name": "KBaseRNASeq", "ver": "0.0.1", "id": "KBaseRNASeq/assemble_transcripts_with_cufflinks", "categories": ["active", "expression", "assembly"], "icon": {"url": "img?method_id=KBaseRNASeq/assemble_transcripts_with_cufflinks&image_name=cufflinks-yellow.png&tag=dev"}}, "parameters": [{"field_type": "text", "ui_name": "RNA-seq Alignment or Alignment Set ", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "valid_ws_types": ["KBaseRNASeq.RNASeqAlignmentSet", "KBaseRNASeq.RNASeqAlignment"]}, "disabled": 0, "short_hint": "Select the RNA-seq alignment or alignment set created by Bowtie2 or TopHat.", "default_values": [""], "ui_class": "input", "optional": 0, "id": "alignmentset_id", "advanced": 0}, {"field_type": "text", "ui_name": "Number of  Threads", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "int"}, "disabled": 0, "short_hint": "Number of computational threads to assemble transcriptomes. The default is 1.", "default_values": ["2"], "ui_class": "parameter", "optional": 1, "id": "num-threads", "advanced": 1}, {"field_type": "text", "ui_name": "Minimum Intron Length", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "int"}, "disabled": 0, "short_hint": "Minimum size of intron allowed in a genome. The default is 50bp.", "default_values": ["50"], "ui_class": "parameter", "optional": 1, "id": "min-intron-length", "advanced": 1}, {"field_type": "text", "ui_name": "Maximum lntron Length", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "int"}, "disabled": 0, "short_hint": "Cufflinks will not report transcripts with introns longer than this. The default is 300,000bp. ", "default_values": ["300000"], "ui_class": "parameter", "optional": 1, "id": "max-intron-length", "advanced": 1}, {"field_type": "text", "ui_name": "Overhang Tolerance", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "int"}, "disabled": 0, "short_hint": "The number of terminal exon base pairs allowed in a transcript intron. The default is 8bp.", "default_values": ["8"], "ui_class": "parameter", "optional": 1, "id": "overhang-tolerance", "advanced": 1}], "job_id_output_field": "docker", "fixed_parameters": [], "behavior": {"kb_service_method": "CufflinksCall", "kb_service_version": "9283ae31ace5a743963d0d0e007d812c7b72dfa1", "kb_service_output_mapping": [{"target_property": "report_name", "service_method_output_path": ["0", "report_name"]}, {"target_property": "report_ref", "service_method_output_path": ["0", "report_ref"]}, {"target_property": "workspace_name", "narrative_system_variable": "workspace"}, {"target_property": "report_window_line_height", "constant_value": "5"}], "kb_service_url": "", "kb_service_name": "KBaseRNASeq", "kb_service_input_mapping": [{"target_property": "ws_id", "narrative_system_variable": "workspace"}, {"target_property": "alignmentset_id", "input_parameter": "alignmentset_id"}, {"target_property": "num-threads", "input_parameter": "num-threads"}, {"target_property": "min-intron-length", "input_parameter": "min-intron-length"}, {"target_property": "max-intron-length", "input_parameter": "max-intron-length"}, {"target_property": "overhang-tolerance", "input_parameter": "overhang-tolerance"}]}, "widgets": {"input": "null", "output": "no-display"}}}}, "job_state": {"status": "completed", "target": "", "$elem": null, "timestamp": "2016-06-18T14:05:05.789Z", "source": "kb-cell-5-e360a06c-82a3-4480-996f-a638d18f7216", "state": {"start_timestamp": 1466258704358, "is_deleted": 0, "job_id": "method:5765550fe4b0f704316469fb", "complete_time": "2016-06-18T14:35:34.474Z", "start_time": "2016-06-18T14:05:10.344Z", "widget_outputs": {"showCreatedObjects": false, "report_name": "Assemble_Transcripts_Using_Cufflinks_0x242ac1103ccL", "workspace_name": "sunita:1466104446131", "report_window_line_height": "5", "report_ref": "8052/30/1", "showReportText": true}, "step_job_ids": {"KBaseRNASeq/assemble_transcripts_with_cufflinks": "5765550fe4b0f704316469fb"}, "step_stats": {"KBaseRNASeq/assemble_transcripts_with_cufflinks": {"finish_time": 1466260534474, "creation_time": 1466258704356, "awe_job_id": "794dfe96-6b7d-4d48-af75-7ec426deea9c", "exec_start_time": 1466258710344}}, "step_outputs": {"KBaseRNASeq/assemble_transcripts_with_cufflinks": "[{\"report_name\":\"Assemble_Transcripts_Using_Cufflinks_0x242ac1103ccL\",\"report_ref\":\"8052/30/1\"}]"}, "submit_time": "2016-06-18T14:05:04.356Z", "step_errors": {}, "job_state": "completed", "original_app": {"steps": [{"service": {"method_name": "CufflinksCall", "service_name": "KBaseRNASeq", "service_url": "", "service_version": "9283ae31ace5a743963d0d0e007d812c7b72dfa1"}, "script": {"method_name": "", "has_files": 0, "service_name": ""}, "method_spec_id": "KBaseRNASeq/assemble_transcripts_with_cufflinks", "input_values": [{"overhang-tolerance": "8", "min-intron-length": "50", "max-intron-length": "300000", "ws_id": "sunita:1466104446131", "alignmentset_id": "Ptr_prolongdrought_test_AlignmentSet", "num-threads": "2"}], "step_id": "KBaseRNASeq/assemble_transcripts_with_cufflinks", "type": "service", "is_long_running": 1}], "name": "App wrapper for method KBaseRNASeq/assemble_transcripts_with_cufflinks"}}, "id": "method:5765550fe4b0f704316469fb"}, "job_id": "method:5765550fe4b0f704316469fb", "result": {"showCreatedObjects": false, "report_name": "Assemble_Transcripts_Using_Cufflinks_0x242ac1103ccL", "workspace_name": "sunita:1466104446131", "report_window_line_height": "5", "report_ref": "8052/30/1", "showReportText": true}}, "params": {"max-intron-length": "300000", "overhang-tolerance": "8", "min-intron-length": "50", "alignmentset_id": "Ptr_prolongdrought_test_AlignmentSet", "num-threads": "2"}}, "time": 1466620258943}, {"state": {"runningState": {"outputState": false, "runState": "complete", "submittedText": "submitted on 10:05:04, 6/18/2016 by <a href=\"/#people/sunita\" target=\"_blank\">sunita</a>"}, "jobDetails": {"job_info": {"spec": {"parameterValues": ["Ptr_prolongdrought_test_AlignmentSet", "2", "50", "300000", "8"], "methodSpec": {"info": {"subtitle": "Assemble the transcripts from RNA-seq reads using Cufflinks. ", "name": "Assemble Transcripts using Cufflinks", "output_types": [], "namespace": "KBaseRNASeq", "tooltip": "Assemble the transcripts from RNA-seq reads using Cufflinks. ", "git_commit_hash": "9283ae31ace5a743963d0d0e007d812c7b72dfa1", "input_types": ["KBaseRNASeq.RNASeqAlignment", "KBaseRNASeq.RNASeqAlignmentSet"], "authors": [], "module_name": "KBaseRNASeq", "ver": "0.0.1", "id": "KBaseRNASeq/assemble_transcripts_with_cufflinks", "categories": ["active", "expression", "assembly"], "icon": {"url": "img?method_id=KBaseRNASeq/assemble_transcripts_with_cufflinks&image_name=cufflinks-yellow.png&tag=dev"}}, "parameters": [{"field_type": "text", "ui_name": "RNA-seq Alignment or Alignment Set ", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "valid_ws_types": ["KBaseRNASeq.RNASeqAlignmentSet", "KBaseRNASeq.RNASeqAlignment"]}, "disabled": 0, "short_hint": "Select the RNA-seq alignment or alignment set created by Bowtie2 or TopHat.", "default_values": [""], "ui_class": "input", "optional": 0, "id": "alignmentset_id", "advanced": 0}, {"field_type": "text", "ui_name": "Number of  Threads", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "int"}, "disabled": 0, "short_hint": "Number of computational threads to assemble transcriptomes. The default is 1.", "default_values": ["2"], "ui_class": "parameter", "optional": 1, "id": "num-threads", "advanced": 1}, {"field_type": "text", "ui_name": "Minimum Intron Length", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "int"}, "disabled": 0, "short_hint": "Minimum size of intron allowed in a genome. The default is 50bp.", "default_values": ["50"], "ui_class": "parameter", "optional": 1, "id": "min-intron-length", "advanced": 1}, {"field_type": "text", "ui_name": "Maximum lntron Length", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "int"}, "disabled": 0, "short_hint": "Cufflinks will not report transcripts with introns longer than this. The default is 300,000bp. ", "default_values": ["300000"], "ui_class": "parameter", "optional": 1, "id": "max-intron-length", "advanced": 1}, {"field_type": "text", "ui_name": "Overhang Tolerance", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "int"}, "disabled": 0, "short_hint": "The number of terminal exon base pairs allowed in a transcript intron. The default is 8bp.", "default_values": ["8"], "ui_class": "parameter", "optional": 1, "id": "overhang-tolerance", "advanced": 1}], "job_id_output_field": "docker", "fixed_parameters": [], "behavior": {"kb_service_method": "CufflinksCall", "kb_service_version": "9283ae31ace5a743963d0d0e007d812c7b72dfa1", "kb_service_output_mapping": [{"target_property": "report_name", "service_method_output_path": ["0", "report_name"]}, {"target_property": "report_ref", "service_method_output_path": ["0", "report_ref"]}, {"target_property": "workspace_name", "narrative_system_variable": "workspace"}, {"target_property": "report_window_line_height", "constant_value": "5"}], "kb_service_url": "", "kb_service_name": "KBaseRNASeq", "kb_service_input_mapping": [{"target_property": "ws_id", "narrative_system_variable": "workspace"}, {"target_property": "alignmentset_id", "input_parameter": "alignmentset_id"}, {"target_property": "num-threads", "input_parameter": "num-threads"}, {"target_property": "min-intron-length", "input_parameter": "min-intron-length"}, {"target_property": "max-intron-length", "input_parameter": "max-intron-length"}, {"target_property": "overhang-tolerance", "input_parameter": "overhang-tolerance"}]}, "widgets": {"input": "null", "output": "no-display"}}}}, "job_state": {"status": "completed", "target": "", "$elem": null, "timestamp": "2016-06-18T14:05:05.789Z", "source": "kb-cell-5-e360a06c-82a3-4480-996f-a638d18f7216", "state": {"start_timestamp": 1466258704358, "is_deleted": 0, "job_id": "method:5765550fe4b0f704316469fb", "complete_time": "2016-06-18T14:35:34.474Z", "start_time": "2016-06-18T14:05:10.344Z", "widget_outputs": {"showCreatedObjects": false, "report_name": "Assemble_Transcripts_Using_Cufflinks_0x242ac1103ccL", "workspace_name": "sunita:1466104446131", "report_window_line_height": "5", "report_ref": "8052/30/1", "showReportText": true}, "step_job_ids": {"KBaseRNASeq/assemble_transcripts_with_cufflinks": "5765550fe4b0f704316469fb"}, "step_stats": {"KBaseRNASeq/assemble_transcripts_with_cufflinks": {"finish_time": 1466260534474, "creation_time": 1466258704356, "awe_job_id": "794dfe96-6b7d-4d48-af75-7ec426deea9c", "exec_start_time": 1466258710344}}, "step_outputs": {"KBaseRNASeq/assemble_transcripts_with_cufflinks": "[{\"report_name\":\"Assemble_Transcripts_Using_Cufflinks_0x242ac1103ccL\",\"report_ref\":\"8052/30/1\"}]"}, "submit_time": "2016-06-18T14:05:04.356Z", "step_errors": {}, "job_state": "completed", "original_app": {"steps": [{"service": {"method_name": "CufflinksCall", "service_name": "KBaseRNASeq", "service_url": "", "service_version": "9283ae31ace5a743963d0d0e007d812c7b72dfa1"}, "script": {"method_name": "", "has_files": 0, "service_name": ""}, "method_spec_id": "KBaseRNASeq/assemble_transcripts_with_cufflinks", "input_values": [{"overhang-tolerance": "8", "min-intron-length": "50", "max-intron-length": "300000", "ws_id": "sunita:1466104446131", "alignmentset_id": "Ptr_prolongdrought_test_AlignmentSet", "num-threads": "2"}], "step_id": "KBaseRNASeq/assemble_transcripts_with_cufflinks", "type": "service", "is_long_running": 1}], "name": "App wrapper for method KBaseRNASeq/assemble_transcripts_with_cufflinks"}}, "id": "method:5765550fe4b0f704316469fb"}, "job_id": "method:5765550fe4b0f704316469fb", "result": {"showCreatedObjects": false, "report_name": "Assemble_Transcripts_Using_Cufflinks_0x242ac1103ccL", "workspace_name": "sunita:1466104446131", "report_window_line_height": "5", "report_ref": "8052/30/1", "showReportText": true}}, "params": {"max-intron-length": "300000", "overhang-tolerance": "8", "min-intron-length": "50", "alignmentset_id": "Ptr_prolongdrought_test_AlignmentSet", "num-threads": "2"}}, "time": 1466612167990}], "widget": "null", "type": "function_input", "method": {"info": {"subtitle": "Assemble the transcripts from RNA-seq reads using Cufflinks. \n", "name": "Assemble Transcripts using Cufflinks", "output_types": [], "namespace": "KBaseRNASeq", "tooltip": "Assemble the transcripts from RNA-seq reads using Cufflinks. \n", "git_commit_hash": "9283ae31ace5a743963d0d0e007d812c7b72dfa1", "input_types": ["KBaseRNASeq.RNASeqAlignment", "KBaseRNASeq.RNASeqAlignmentSet"], "authors": [], "module_name": "KBaseRNASeq", "ver": "0.0.1", "id": "KBaseRNASeq/assemble_transcripts_with_cufflinks", "categories": ["active", "expression", "assembly"], "icon": {"url": "img?method_id=KBaseRNASeq/assemble_transcripts_with_cufflinks&image_name=cufflinks-yellow.png&tag=dev"}}, "parameters": [{"field_type": "text", "ui_name": "RNA-seq Alignment or Alignment Set \n", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "valid_ws_types": ["KBaseRNASeq.RNASeqAlignmentSet", "KBaseRNASeq.RNASeqAlignment"]}, "disabled": 0, "short_hint": "Select the RNA-seq alignment or alignment set created by Bowtie2 or TopHat.\n", "default_values": [""], "ui_class": "input", "optional": 0, "id": "alignmentset_id", "advanced": 0}, {"field_type": "text", "ui_name": "Number of  Threads\n", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "int"}, "disabled": 0, "short_hint": "Number of computational threads to assemble transcriptomes. The default is 1.\n", "default_values": ["2"], "ui_class": "parameter", "optional": 1, "id": "num-threads", "advanced": 1}, {"field_type": "text", "ui_name": "Minimum Intron Length\n", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "int"}, "disabled": 0, "short_hint": "Minimum size of intron allowed in a genome. The default is 50bp.\n", "default_values": ["50"], "ui_class": "parameter", "optional": 1, "id": "min-intron-length", "advanced": 1}, {"field_type": "text", "ui_name": "Maximum lntron Length\n", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "int"}, "disabled": 0, "short_hint": "Cufflinks will not report transcripts with introns longer than this. The default is 300,000bp. \n", "default_values": ["300000"], "ui_class": "parameter", "optional": 1, "id": "max-intron-length", "advanced": 1}, {"field_type": "text", "ui_name": "Overhang Tolerance\n", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "int"}, "disabled": 0, "short_hint": "The number of terminal exon base pairs allowed in a transcript intron. The default is 8bp.\n", "default_values": ["8"], "ui_class": "parameter", "optional": 1, "id": "overhang-tolerance", "advanced": 1}], "job_id_output_field": "docker", "fixed_parameters": [], "behavior": {"kb_service_method": "CufflinksCall", "kb_service_version": "9283ae31ace5a743963d0d0e007d812c7b72dfa1", "kb_service_output_mapping": [{"target_property": "report_name", "service_method_output_path": ["0", "report_name"]}, {"target_property": "report_ref", "service_method_output_path": ["0", "report_ref"]}, {"target_property": "workspace_name", "narrative_system_variable": "workspace"}, {"target_property": "report_window_line_height", "constant_value": "5"}], "kb_service_url": "", "kb_service_name": "KBaseRNASeq", "kb_service_input_mapping": [{"target_property": "ws_id", "narrative_system_variable": "workspace"}, {"target_property": "alignmentset_id", "input_parameter": "alignmentset_id"}, {"target_property": "num-threads", "input_parameter": "num-threads"}, {"target_property": "min-intron-length", "input_parameter": "min-intron-length"}, {"target_property": "max-intron-length", "input_parameter": "max-intron-length"}, {"target_property": "overhang-tolerance", "input_parameter": "overhang-tolerance"}]}, "widgets": {"input": "null", "output": "no-display"}}}}}, {"source": "<div id=\"kb-cell-out-11314f8f-afe8-487b-9e77-4ba3eccfcaf4\"></div>\n<script>$(\"#kb-cell-out-11314f8f-afe8-487b-9e77-4ba3eccfcaf4\").kbaseNarrativeOutputCell({\"data\":{\"nearCellIdx\":5,\"widget\":\"kbaseNarrativeDataCell\",\"info\":{\"id\":27,\"name\":\"Ptr_prolongdrought_test_AlignmentSet_ExpressionSet\",\"type\":\"KBaseRNASeq.RNASeqExpressionSet-4.0\",\"save_date\":\"2016-06-18T14:35:32+0000\",\"version\":2,\"saved_by\":\"sunita\",\"ws_id\":8052,\"ws_name\":\"sunita:1466104446131\",\"chsum\":\"685dadd18f1cf04ece9141c47df23adc\",\"size\":1094,\"meta\":{}}}, \"type\":\"viewer\", \"widget\":\"kbaseNarrativeDataCell\", \"cellId\":\"kb-cell-out-11314f8f-afe8-487b-9e77-4ba3eccfcaf4\", \"title\":\"Data Viewer\", \"time\":1466433256386});</script>", "cell_type": "markdown", "metadata": {"kbstate": {"title": "Ptr_prolongdrought_test_AlignmentSet_ExpressionSet", "selected": false, "icon": "<i class=\"fa fa-2x fa-table data-viewer-icon\"></i>"}, "kb-cell": {"widget": "kbaseNarrativeDataCell", "type": "function_output", "widget_state": [{"state": null, "time": 1466620258944}, {"state": null, "time": 1466612167990}]}}}, {"source": "\n<p id=Step5></p>\n### Step 5. Identify Differential Expression using Cuffdiff\n\nThis method uses the Cufflinks transcripts to calculate gene and transcript levels under two or more conditions and finds significant changes in the expression levels. It calculates the FPKM value of each transcript, primary transcript, and gene in each sample and produces a number of output files zipped together as a Cuffdiff output object.\n\nAs an input, the Cuffdiff method accepts the Expression Set created by Cufflinks and you need to provide the name of output object.\n", "cell_type": "markdown", "metadata": {"kbstate": {"title": "", "selected": false, "icon": ""}}}, {"source": "<div id='kb-cell-11-18074458-a525-4f6e-abe7-833310fb5fe3'></div>\n<script>$('#kb-cell-11-18074458-a525-4f6e-abe7-833310fb5fe3').kbaseNarrativeMethodCell({'method' : '{\"info\":{\"id\":\"KBaseRNASeq/identify_differential_expression_using_cuffdiff\",\"module_name\":\"KBaseRNASeq\",\"git_commit_hash\":\"ee32dfed5c2ec485628ec0d854dd2bda0a268966\",\"name\":\"Identify Differential Expression using Cuffdiff\",\"ver\":\"0.0.1\",\"subtitle\":\"Identify significant changes in the gene and transcript expression level using Cuffdiff\\n\",\"tooltip\":\"Identify significant changes in the gene and transcript expression level using Cuffdiff\\n\",\"icon\":{\"url\":\"img?method_id=KBaseRNASeq/identify_differential_expression_using_cuffdiff&image_name=cuffdiff-yellow.png&tag=dev\"},\"categories\":[\"active\",\"expression\"],\"authors\":[],\"input_types\":[\"KBaseRNASeq.RNASeqExpressionSet\"],\"output_types\":[\"KBaseRNASeq.RNASeqDifferentialExpression\"],\"namespace\":\"KBaseRNASeq\"},\"widgets\":{\"input\":\"null\",\"output\":\"kbaseRNASeqAnalysisNew\"},\"parameters\":[{\"id\":\"expressionset_id\",\"ui_name\":\"RNA-seq Expression Set\\n\",\"short_hint\":\"Select the RNA-seq expression set associated with assembled transcripts using Cufflinks.\\n\",\"description\":\"\",\"field_type\":\"text\",\"allow_multiple\":0,\"optional\":0,\"advanced\":0,\"disabled\":0,\"ui_class\":\"input\",\"default_values\":[\"\"],\"text_options\":{\"valid_ws_types\":[\"KBaseRNASeq.RNASeqExpressionSet\"],\"is_output_name\":0,\"placeholder\":\"\",\"regex_constraint\":[]}},{\"id\":\"output_obj_name\",\"ui_name\":\"Cuffdiff Output\\n\",\"short_hint\":\"Provide the name of Cuffdiff output\\n\",\"description\":\"\",\"field_type\":\"text\",\"allow_multiple\":0,\"optional\":0,\"advanced\":0,\"disabled\":0,\"ui_class\":\"output\",\"default_values\":[\"\"],\"text_options\":{\"valid_ws_types\":[\"KBaseRNASeq.RNASeqDifferentialExpression\"],\"is_output_name\":1,\"placeholder\":\"\",\"regex_constraint\":[]}},{\"id\":\"num-threads\",\"ui_name\":\"Number of Threads\\n\",\"short_hint\":\"Number of  computational threads to align reads. The default is 1.\\n\",\"description\":\"\",\"field_type\":\"text\",\"allow_multiple\":0,\"optional\":1,\"advanced\":1,\"disabled\":0,\"ui_class\":\"parameter\",\"default_values\":[\"2\"],\"text_options\":{\"validate_as\":\"int\",\"is_output_name\":0,\"placeholder\":\"\",\"regex_constraint\":[]}},{\"id\":\"min-alignment-count\",\"ui_name\":\"Minimum Alignments\\n\",\"short_hint\":\"The minimum number of fragment alignments in a locus needed for a significance test on changes in that locus observed between samples. The default is 10. \\n\",\"description\":\"\",\"field_type\":\"text\",\"allow_multiple\":0,\"optional\":1,\"advanced\":1,\"disabled\":0,\"ui_class\":\"parameter\",\"default_values\":[\"10\"],\"text_options\":{\"validate_as\":\"int\",\"is_output_name\":0,\"placeholder\":\"\",\"regex_constraint\":[]}},{\"id\":\"time-series\",\"ui_name\":\"Time Series\\n\",\"short_hint\":\"Analyze the provided samples as a time series, rather than testing for differences between all pairs of samples. \\n\",\"description\":\"\",\"field_type\":\"checkbox\",\"allow_multiple\":0,\"optional\":1,\"advanced\":1,\"disabled\":0,\"ui_class\":\"parameter\",\"default_values\":[\"\"],\"checkbox_options\":{\"checked_value\":1,\"unchecked_value\":0}},{\"id\":\"multi-read-correct\",\"ui_name\":\"Multi Read Correct\\n\",\"short_hint\":\"Do an initial estimation procedure to more accurately weight reads mapping to multiple locations in the genome. \\n\",\"description\":\"\",\"field_type\":\"checkbox\",\"allow_multiple\":0,\"optional\":1,\"advanced\":1,\"disabled\":0,\"ui_class\":\"parameter\",\"default_values\":[\"\"],\"checkbox_options\":{\"checked_value\":1,\"unchecked_value\":0}},{\"id\":\"labels\",\"ui_name\":\"Treatment Labels\\n\",\"short_hint\":\"Specify a label for each sample that will be included in various Cuffdiff output files.\\n\",\"description\":\"\",\"field_type\":\"text\",\"allow_multiple\":1,\"optional\":1,\"advanced\":1,\"disabled\":0,\"ui_class\":\"parameter\",\"default_values\":[\"\"]},{\"id\":\"library-type\",\"ui_name\":\"Library Types\\n\",\"short_hint\":\"Select the direction of the reads with respect to the original mRNA when the library was prepared. The default is Standard Illumina.\\n\",\"description\":\"\",\"field_type\":\"dropdown\",\"allow_multiple\":0,\"optional\":1,\"advanced\":1,\"disabled\":0,\"ui_class\":\"parameter\",\"default_values\":[\"fr-unstranded\"],\"dropdown_options\":{\"options\":[{\"value\":\"fr-unstranded\",\"display\":\"Standard Illumina\"},{\"value\":\"fr-firststrand\",\"display\":\"Only sequenced for single end reads\"},{\"value\":\"fr-secondstrand\",\"display\":\"Directional Illumina\"}]}},{\"id\":\"library-norm-method\",\"ui_name\":\"Library Normalization Method\\n\",\"short_hint\":\"Select how library sizes (sequencing depths) are normalized in Cufflinks and Cuffdiff. By default, no scaling is applied to FPKM.\\n\",\"description\":\"\",\"field_type\":\"dropdown\",\"allow_multiple\":0,\"optional\":1,\"advanced\":1,\"disabled\":0,\"ui_class\":\"parameter\",\"default_values\":[\"classic-fpkm\"],\"dropdown_options\":{\"options\":[{\"value\":\"classic-fpkm\",\"display\":\"no scaling to FPKM\"},{\"value\":\"geometric\",\"display\":\"geometric\"},{\"value\":\"quartile\",\"display\":\"quartile\"}]}}],\"fixed_parameters\":[],\"behavior\":{\"kb_service_url\":\"\",\"kb_service_name\":\"KBaseRNASeq\",\"kb_service_version\":\"ee32dfed5c2ec485628ec0d854dd2bda0a268966\",\"kb_service_method\":\"CuffdiffCall\",\"kb_service_input_mapping\":[{\"narrative_system_variable\":\"workspace\",\"target_property\":\"ws_id\"},{\"input_parameter\":\"expressionset_id\",\"target_property\":\"expressionset_id\"},{\"input_parameter\":\"output_obj_name\",\"target_property\":\"output_obj_name\"},{\"input_parameter\":\"num-threads\",\"target_property\":\"num-threads\"},{\"input_parameter\":\"time-series\",\"target_property\":\"time-series\"},{\"input_parameter\":\"multi-read-correct\",\"target_property\":\"multi-read-correct\"},{\"input_parameter\":\"min-alignment-count\",\"target_property\":\"min-alignment-count\"},{\"input_parameter\":\"labels\",\"target_property\":\"labels\"},{\"input_parameter\":\"library-type\",\"target_property\":\"library-type\"},{\"input_parameter\":\"library-norm-method\",\"target_property\":\"library-norm-method\"}],\"kb_service_output_mapping\":[{\"narrative_system_variable\":\"workspace\",\"target_property\":\"workspace\"},{\"input_parameter\":\"output_obj_name\",\"target_property\":\"output\"},{\"service_method_output_path\":[\"0\"],\"target_property\":\"CuffdiffCall\"}]},\"job_id_output_field\":\"docker\"}', 'cellId' : 'kb-cell-11-18074458-a525-4f6e-abe7-833310fb5fe3'});</script>", "cell_type": "markdown", "metadata": {"kbstate": {"title": "Identify Differential Expression using Cuffdiff", "selected": false, "icon": "<img src=\"https://ci.kbase.us/services/narrative_method_store/img?method_id=KBaseRNASeq/identify_differential_expression_using_cuffdiff&amp;image_name=cuffdiff-yellow.png&amp;tag=dev\" style=\"max-width: 50px; max-height: 50px; cursor: default;\">"}, "kb-cell": {"widget_state": [{"state": {"runningState": {"outputState": false, "runState": "complete", "submittedText": "submitted on 11:41:03, 6/18/2016 by <a href=\"/#people/sunita\" target=\"_blank\">sunita</a>"}, "jobDetails": {"job_info": {"spec": {"parameterValues": ["Ptr_prolongdrought_test_AlignmentSet_ExpressionSet", "Ptr_cuffdiff_new", "2", "10", 0, 0, null, "fr-unstranded", "classic-fpkm"], "methodSpec": {"info": {"subtitle": "Identify significant changes in the gene and transcript expression level using Cuffdiff", "name": "Identify Differential Expression using Cuffdiff", "output_types": ["KBaseRNASeq.RNASeqDifferentialExpression"], "namespace": "KBaseRNASeq", "tooltip": "Identify significant changes in the gene and transcript expression level using Cuffdiff", "git_commit_hash": "ee32dfed5c2ec485628ec0d854dd2bda0a268966", "input_types": ["KBaseRNASeq.RNASeqExpressionSet"], "authors": [], "module_name": "KBaseRNASeq", "ver": "0.0.1", "id": "KBaseRNASeq/identify_differential_expression_using_cuffdiff", "categories": ["active", "expression"], "icon": {"url": "img?method_id=KBaseRNASeq/identify_differential_expression_using_cuffdiff&image_name=cuffdiff-yellow.png&tag=dev"}}, "parameters": [{"field_type": "text", "ui_name": "RNA-seq Expression Set", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "valid_ws_types": ["KBaseRNASeq.RNASeqExpressionSet"]}, "disabled": 0, "short_hint": "Select the RNA-seq expression set associated with assembled transcripts using Cufflinks.", "default_values": [""], "ui_class": "input", "optional": 0, "id": "expressionset_id", "advanced": 0}, {"field_type": "text", "ui_name": "Cuffdiff Output", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 1, "placeholder": "", "regex_constraint": [], "valid_ws_types": ["KBaseRNASeq.RNASeqDifferentialExpression"]}, "disabled": 0, "short_hint": "Provide the name of Cuffdiff output", "default_values": [""], "ui_class": "output", "optional": 0, "id": "output_obj_name", "advanced": 0}, {"field_type": "text", "ui_name": "Number of Threads", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "int"}, "disabled": 0, "short_hint": "Number of  computational threads to align reads. The default is 1.", "default_values": ["2"], "ui_class": "parameter", "optional": 1, "id": "num-threads", "advanced": 1}, {"field_type": "text", "ui_name": "Minimum Alignments", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "int"}, "disabled": 0, "short_hint": "The minimum number of fragment alignments in a locus needed for a significance test on changes in that locus observed between samples. The default is 10. ", "default_values": ["10"], "ui_class": "parameter", "optional": 1, "id": "min-alignment-count", "advanced": 1}, {"field_type": "checkbox", "ui_name": "Time Series", "allow_multiple": 0, "description": "", "optional": 1, "disabled": 0, "short_hint": "Analyze the provided samples as a time series, rather than testing for differences between all pairs of samples. ", "default_values": [""], "ui_class": "parameter", "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "id": "time-series", "advanced": 1}, {"field_type": "checkbox", "ui_name": "Multi Read Correct", "allow_multiple": 0, "description": "", "optional": 1, "disabled": 0, "short_hint": "Do an initial estimation procedure to more accurately weight reads mapping to multiple locations in the genome. ", "default_values": [""], "ui_class": "parameter", "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "id": "multi-read-correct", "advanced": 1}, {"field_type": "text", "ui_name": "Treatment Labels", "allow_multiple": 1, "description": "", "disabled": 0, "short_hint": "Specify a label for each sample that will be included in various Cuffdiff output files.", "default_values": [""], "ui_class": "parameter", "optional": 1, "id": "labels", "advanced": 1}, {"field_type": "dropdown", "ui_name": "Library Types", "allow_multiple": 0, "description": "", "dropdown_options": {"options": [{"display": "Standard Illumina", "value": "fr-unstranded"}, {"display": "Only sequenced for single end reads", "value": "fr-firststrand"}, {"display": "Directional Illumina", "value": "fr-secondstrand"}]}, "disabled": 0, "short_hint": "Select the direction of the reads with respect to the original mRNA when the library was prepared. The default is Standard Illumina.", "default_values": ["fr-unstranded"], "ui_class": "parameter", "optional": 1, "id": "library-type", "advanced": 1}, {"field_type": "dropdown", "ui_name": "Library Normalization Method", "allow_multiple": 0, "description": "", "dropdown_options": {"options": [{"display": "no scaling to FPKM", "value": "classic-fpkm"}, {"display": "geometric", "value": "geometric"}, {"display": "quartile", "value": "quartile"}]}, "disabled": 0, "short_hint": "Select how library sizes (sequencing depths) are normalized in Cufflinks and Cuffdiff. By default, no scaling is applied to FPKM.", "default_values": ["classic-fpkm"], "ui_class": "parameter", "optional": 1, "id": "library-norm-method", "advanced": 1}], "job_id_output_field": "docker", "fixed_parameters": [], "behavior": {"kb_service_method": "CuffdiffCall", "kb_service_version": "ee32dfed5c2ec485628ec0d854dd2bda0a268966", "kb_service_output_mapping": [{"target_property": "workspace", "narrative_system_variable": "workspace"}, {"target_property": "output", "input_parameter": "output_obj_name"}, {"target_property": "CuffdiffCall", "service_method_output_path": ["0"]}], "kb_service_url": "", "kb_service_name": "KBaseRNASeq", "kb_service_input_mapping": [{"target_property": "ws_id", "narrative_system_variable": "workspace"}, {"target_property": "expressionset_id", "input_parameter": "expressionset_id"}, {"target_property": "output_obj_name", "input_parameter": "output_obj_name"}, {"target_property": "num-threads", "input_parameter": "num-threads"}, {"target_property": "time-series", "input_parameter": "time-series"}, {"target_property": "multi-read-correct", "input_parameter": "multi-read-correct"}, {"target_property": "min-alignment-count", "input_parameter": "min-alignment-count"}, {"target_property": "labels", "input_parameter": "labels"}, {"target_property": "library-type", "input_parameter": "library-type"}, {"target_property": "library-norm-method", "input_parameter": "library-norm-method"}]}, "widgets": {"input": "null", "output": "kbaseRNASeqAnalysisNew"}}}}, "job_state": {"status": "completed", "target": "", "$elem": null, "timestamp": "2016-06-18T15:41:04.354Z", "source": "kb-cell-11-18074458-a525-4f6e-abe7-833310fb5fe3", "state": {"start_timestamp": 1466264464193, "is_deleted": 0, "job_id": "method:57656b8fe4b0f70431646a3f", "complete_time": "2016-06-18T16:25:24.842Z", "start_time": "2016-06-18T15:41:15.234Z", "widget_outputs": {"CuffdiffCall": {"output": "Ptr_cuffdiff_new", "workspace": "sunita:1466104446131"}, "workspace": "sunita:1466104446131", "output": "Ptr_cuffdiff_new"}, "step_job_ids": {"KBaseRNASeq/identify_differential_expression_using_cuffdiff": "57656b8fe4b0f70431646a3f"}, "step_stats": {"KBaseRNASeq/identify_differential_expression_using_cuffdiff": {"finish_time": 1466267124842, "creation_time": 1466264464190, "awe_job_id": "743a7886-03fc-4d50-86b4-759b88809d2f", "exec_start_time": 1466264475234}}, "step_outputs": {"KBaseRNASeq/identify_differential_expression_using_cuffdiff": "[{\"workspace\":\"sunita:1466104446131\",\"output\":\"Ptr_cuffdiff_new\"}]"}, "submit_time": "2016-06-18T15:41:04.190Z", "step_errors": {}, "job_state": "completed", "original_app": {"steps": [{"service": {"method_name": "CuffdiffCall", "service_name": "KBaseRNASeq", "service_url": "", "service_version": "ee32dfed5c2ec485628ec0d854dd2bda0a268966"}, "script": {"method_name": "", "has_files": 0, "service_name": ""}, "method_spec_id": "KBaseRNASeq/identify_differential_expression_using_cuffdiff", "input_values": [{"min-alignment-count": "10", "library-type": "fr-unstranded", "labels": null, "expressionset_id": "Ptr_prolongdrought_test_AlignmentSet_ExpressionSet", "library-norm-method": "classic-fpkm", "multi-read-correct": 0, "time-series": 0, "ws_id": "sunita:1466104446131", "output_obj_name": "Ptr_cuffdiff_new", "num-threads": "2"}], "step_id": "KBaseRNASeq/identify_differential_expression_using_cuffdiff", "type": "service", "is_long_running": 1}], "name": "App wrapper for method KBaseRNASeq/identify_differential_expression_using_cuffdiff"}}, "id": "method:57656b8fe4b0f70431646a3f"}, "job_id": "method:57656b8fe4b0f70431646a3f", "result": {"CuffdiffCall": {"output": "Ptr_cuffdiff_new", "workspace": "sunita:1466104446131"}, "workspace": "sunita:1466104446131", "output": "Ptr_cuffdiff_new"}}, "params": {"min-alignment-count": "10", "library-type": "fr-unstranded", "labels": null, "expressionset_id": "Ptr_prolongdrought_test_AlignmentSet_ExpressionSet", "library-norm-method": "classic-fpkm", "multi-read-correct": 0, "time-series": 0, "output_obj_name": "Ptr_cuffdiff_new", "num-threads": "2"}}, "time": 1466620258944}, {"state": {"runningState": {"outputState": false, "runState": "complete", "submittedText": "submitted on 11:41:03, 6/18/2016 by <a href=\"/#people/sunita\" target=\"_blank\">sunita</a>"}, "jobDetails": {"job_info": {"spec": {"parameterValues": ["Ptr_prolongdrought_test_AlignmentSet_ExpressionSet", "Ptr_cuffdiff_new", "2", "10", 0, 0, null, "fr-unstranded", "classic-fpkm"], "methodSpec": {"info": {"subtitle": "Identify significant changes in the gene and transcript expression level using Cuffdiff", "name": "Identify Differential Expression using Cuffdiff", "output_types": ["KBaseRNASeq.RNASeqDifferentialExpression"], "namespace": "KBaseRNASeq", "tooltip": "Identify significant changes in the gene and transcript expression level using Cuffdiff", "git_commit_hash": "ee32dfed5c2ec485628ec0d854dd2bda0a268966", "input_types": ["KBaseRNASeq.RNASeqExpressionSet"], "authors": [], "module_name": "KBaseRNASeq", "ver": "0.0.1", "id": "KBaseRNASeq/identify_differential_expression_using_cuffdiff", "categories": ["active", "expression"], "icon": {"url": "img?method_id=KBaseRNASeq/identify_differential_expression_using_cuffdiff&image_name=cuffdiff-yellow.png&tag=dev"}}, "parameters": [{"field_type": "text", "ui_name": "RNA-seq Expression Set", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "valid_ws_types": ["KBaseRNASeq.RNASeqExpressionSet"]}, "disabled": 0, "short_hint": "Select the RNA-seq expression set associated with assembled transcripts using Cufflinks.", "default_values": [""], "ui_class": "input", "optional": 0, "id": "expressionset_id", "advanced": 0}, {"field_type": "text", "ui_name": "Cuffdiff Output", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 1, "placeholder": "", "regex_constraint": [], "valid_ws_types": ["KBaseRNASeq.RNASeqDifferentialExpression"]}, "disabled": 0, "short_hint": "Provide the name of Cuffdiff output", "default_values": [""], "ui_class": "output", "optional": 0, "id": "output_obj_name", "advanced": 0}, {"field_type": "text", "ui_name": "Number of Threads", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "int"}, "disabled": 0, "short_hint": "Number of  computational threads to align reads. The default is 1.", "default_values": ["2"], "ui_class": "parameter", "optional": 1, "id": "num-threads", "advanced": 1}, {"field_type": "text", "ui_name": "Minimum Alignments", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "int"}, "disabled": 0, "short_hint": "The minimum number of fragment alignments in a locus needed for a significance test on changes in that locus observed between samples. The default is 10. ", "default_values": ["10"], "ui_class": "parameter", "optional": 1, "id": "min-alignment-count", "advanced": 1}, {"field_type": "checkbox", "ui_name": "Time Series", "allow_multiple": 0, "description": "", "optional": 1, "disabled": 0, "short_hint": "Analyze the provided samples as a time series, rather than testing for differences between all pairs of samples. ", "default_values": [""], "ui_class": "parameter", "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "id": "time-series", "advanced": 1}, {"field_type": "checkbox", "ui_name": "Multi Read Correct", "allow_multiple": 0, "description": "", "optional": 1, "disabled": 0, "short_hint": "Do an initial estimation procedure to more accurately weight reads mapping to multiple locations in the genome. ", "default_values": [""], "ui_class": "parameter", "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "id": "multi-read-correct", "advanced": 1}, {"field_type": "text", "ui_name": "Treatment Labels", "allow_multiple": 1, "description": "", "disabled": 0, "short_hint": "Specify a label for each sample that will be included in various Cuffdiff output files.", "default_values": [""], "ui_class": "parameter", "optional": 1, "id": "labels", "advanced": 1}, {"field_type": "dropdown", "ui_name": "Library Types", "allow_multiple": 0, "description": "", "dropdown_options": {"options": [{"display": "Standard Illumina", "value": "fr-unstranded"}, {"display": "Only sequenced for single end reads", "value": "fr-firststrand"}, {"display": "Directional Illumina", "value": "fr-secondstrand"}]}, "disabled": 0, "short_hint": "Select the direction of the reads with respect to the original mRNA when the library was prepared. The default is Standard Illumina.", "default_values": ["fr-unstranded"], "ui_class": "parameter", "optional": 1, "id": "library-type", "advanced": 1}, {"field_type": "dropdown", "ui_name": "Library Normalization Method", "allow_multiple": 0, "description": "", "dropdown_options": {"options": [{"display": "no scaling to FPKM", "value": "classic-fpkm"}, {"display": "geometric", "value": "geometric"}, {"display": "quartile", "value": "quartile"}]}, "disabled": 0, "short_hint": "Select how library sizes (sequencing depths) are normalized in Cufflinks and Cuffdiff. By default, no scaling is applied to FPKM.", "default_values": ["classic-fpkm"], "ui_class": "parameter", "optional": 1, "id": "library-norm-method", "advanced": 1}], "job_id_output_field": "docker", "fixed_parameters": [], "behavior": {"kb_service_method": "CuffdiffCall", "kb_service_version": "ee32dfed5c2ec485628ec0d854dd2bda0a268966", "kb_service_output_mapping": [{"target_property": "workspace", "narrative_system_variable": "workspace"}, {"target_property": "output", "input_parameter": "output_obj_name"}, {"target_property": "CuffdiffCall", "service_method_output_path": ["0"]}], "kb_service_url": "", "kb_service_name": "KBaseRNASeq", "kb_service_input_mapping": [{"target_property": "ws_id", "narrative_system_variable": "workspace"}, {"target_property": "expressionset_id", "input_parameter": "expressionset_id"}, {"target_property": "output_obj_name", "input_parameter": "output_obj_name"}, {"target_property": "num-threads", "input_parameter": "num-threads"}, {"target_property": "time-series", "input_parameter": "time-series"}, {"target_property": "multi-read-correct", "input_parameter": "multi-read-correct"}, {"target_property": "min-alignment-count", "input_parameter": "min-alignment-count"}, {"target_property": "labels", "input_parameter": "labels"}, {"target_property": "library-type", "input_parameter": "library-type"}, {"target_property": "library-norm-method", "input_parameter": "library-norm-method"}]}, "widgets": {"input": "null", "output": "kbaseRNASeqAnalysisNew"}}}}, "job_state": {"status": "completed", "target": "", "$elem": null, "timestamp": "2016-06-18T15:41:04.354Z", "source": "kb-cell-11-18074458-a525-4f6e-abe7-833310fb5fe3", "state": {"start_timestamp": 1466264464193, "is_deleted": 0, "job_id": "method:57656b8fe4b0f70431646a3f", "complete_time": "2016-06-18T16:25:24.842Z", "start_time": "2016-06-18T15:41:15.234Z", "widget_outputs": {"CuffdiffCall": {"output": "Ptr_cuffdiff_new", "workspace": "sunita:1466104446131"}, "workspace": "sunita:1466104446131", "output": "Ptr_cuffdiff_new"}, "step_job_ids": {"KBaseRNASeq/identify_differential_expression_using_cuffdiff": "57656b8fe4b0f70431646a3f"}, "step_stats": {"KBaseRNASeq/identify_differential_expression_using_cuffdiff": {"finish_time": 1466267124842, "creation_time": 1466264464190, "awe_job_id": "743a7886-03fc-4d50-86b4-759b88809d2f", "exec_start_time": 1466264475234}}, "step_outputs": {"KBaseRNASeq/identify_differential_expression_using_cuffdiff": "[{\"workspace\":\"sunita:1466104446131\",\"output\":\"Ptr_cuffdiff_new\"}]"}, "submit_time": "2016-06-18T15:41:04.190Z", "step_errors": {}, "job_state": "completed", "original_app": {"steps": [{"service": {"method_name": "CuffdiffCall", "service_name": "KBaseRNASeq", "service_url": "", "service_version": "ee32dfed5c2ec485628ec0d854dd2bda0a268966"}, "script": {"method_name": "", "has_files": 0, "service_name": ""}, "method_spec_id": "KBaseRNASeq/identify_differential_expression_using_cuffdiff", "input_values": [{"min-alignment-count": "10", "library-type": "fr-unstranded", "labels": null, "expressionset_id": "Ptr_prolongdrought_test_AlignmentSet_ExpressionSet", "library-norm-method": "classic-fpkm", "multi-read-correct": 0, "time-series": 0, "ws_id": "sunita:1466104446131", "output_obj_name": "Ptr_cuffdiff_new", "num-threads": "2"}], "step_id": "KBaseRNASeq/identify_differential_expression_using_cuffdiff", "type": "service", "is_long_running": 1}], "name": "App wrapper for method KBaseRNASeq/identify_differential_expression_using_cuffdiff"}}, "id": "method:57656b8fe4b0f70431646a3f"}, "job_id": "method:57656b8fe4b0f70431646a3f", "result": {"CuffdiffCall": {"output": "Ptr_cuffdiff_new", "workspace": "sunita:1466104446131"}, "workspace": "sunita:1466104446131", "output": "Ptr_cuffdiff_new"}}, "params": {"min-alignment-count": "10", "library-type": "fr-unstranded", "labels": null, "expressionset_id": "Ptr_prolongdrought_test_AlignmentSet_ExpressionSet", "library-norm-method": "classic-fpkm", "multi-read-correct": 0, "time-series": 0, "output_obj_name": "Ptr_cuffdiff_new", "num-threads": "2"}}, "time": 1466612167990}], "widget": "null", "type": "function_input", "method": {"info": {"subtitle": "Identify significant changes in the gene and transcript expression level using Cuffdiff\n", "name": "Identify Differential Expression using Cuffdiff", "output_types": ["KBaseRNASeq.RNASeqDifferentialExpression"], "namespace": "KBaseRNASeq", "tooltip": "Identify significant changes in the gene and transcript expression level using Cuffdiff\n", "git_commit_hash": "ee32dfed5c2ec485628ec0d854dd2bda0a268966", "input_types": ["KBaseRNASeq.RNASeqExpressionSet"], "authors": [], "module_name": "KBaseRNASeq", "ver": "0.0.1", "id": "KBaseRNASeq/identify_differential_expression_using_cuffdiff", "categories": ["active", "expression"], "icon": {"url": "img?method_id=KBaseRNASeq/identify_differential_expression_using_cuffdiff&image_name=cuffdiff-yellow.png&tag=dev"}}, "parameters": [{"field_type": "text", "ui_name": "RNA-seq Expression Set\n", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "valid_ws_types": ["KBaseRNASeq.RNASeqExpressionSet"]}, "disabled": 0, "short_hint": "Select the RNA-seq expression set associated with assembled transcripts using Cufflinks.\n", "default_values": [""], "ui_class": "input", "optional": 0, "id": "expressionset_id", "advanced": 0}, {"field_type": "text", "ui_name": "Cuffdiff Output\n", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 1, "placeholder": "", "regex_constraint": [], "valid_ws_types": ["KBaseRNASeq.RNASeqDifferentialExpression"]}, "disabled": 0, "short_hint": "Provide the name of Cuffdiff output\n", "default_values": [""], "ui_class": "output", "optional": 0, "id": "output_obj_name", "advanced": 0}, {"field_type": "text", "ui_name": "Number of Threads\n", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "int"}, "disabled": 0, "short_hint": "Number of  computational threads to align reads. The default is 1.\n", "default_values": ["2"], "ui_class": "parameter", "optional": 1, "id": "num-threads", "advanced": 1}, {"field_type": "text", "ui_name": "Minimum Alignments\n", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "int"}, "disabled": 0, "short_hint": "The minimum number of fragment alignments in a locus needed for a significance test on changes in that locus observed between samples. The default is 10. \n", "default_values": ["10"], "ui_class": "parameter", "optional": 1, "id": "min-alignment-count", "advanced": 1}, {"field_type": "checkbox", "ui_name": "Time Series\n", "allow_multiple": 0, "description": "", "optional": 1, "disabled": 0, "short_hint": "Analyze the provided samples as a time series, rather than testing for differences between all pairs of samples. \n", "default_values": [""], "ui_class": "parameter", "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "id": "time-series", "advanced": 1}, {"field_type": "checkbox", "ui_name": "Multi Read Correct\n", "allow_multiple": 0, "description": "", "optional": 1, "disabled": 0, "short_hint": "Do an initial estimation procedure to more accurately weight reads mapping to multiple locations in the genome. \n", "default_values": [""], "ui_class": "parameter", "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "id": "multi-read-correct", "advanced": 1}, {"field_type": "text", "ui_name": "Treatment Labels\n", "allow_multiple": 1, "description": "", "disabled": 0, "short_hint": "Specify a label for each sample that will be included in various Cuffdiff output files.\n", "default_values": [""], "ui_class": "parameter", "optional": 1, "id": "labels", "advanced": 1}, {"field_type": "dropdown", "ui_name": "Library Types\n", "allow_multiple": 0, "description": "", "dropdown_options": {"options": [{"display": "Standard Illumina", "value": "fr-unstranded"}, {"display": "Only sequenced for single end reads", "value": "fr-firststrand"}, {"display": "Directional Illumina", "value": "fr-secondstrand"}]}, "disabled": 0, "short_hint": "Select the direction of the reads with respect to the original mRNA when the library was prepared. The default is Standard Illumina.\n", "default_values": ["fr-unstranded"], "ui_class": "parameter", "optional": 1, "id": "library-type", "advanced": 1}, {"field_type": "dropdown", "ui_name": "Library Normalization Method\n", "allow_multiple": 0, "description": "", "dropdown_options": {"options": [{"display": "no scaling to FPKM", "value": "classic-fpkm"}, {"display": "geometric", "value": "geometric"}, {"display": "quartile", "value": "quartile"}]}, "disabled": 0, "short_hint": "Select how library sizes (sequencing depths) are normalized in Cufflinks and Cuffdiff. By default, no scaling is applied to FPKM.\n", "default_values": ["classic-fpkm"], "ui_class": "parameter", "optional": 1, "id": "library-norm-method", "advanced": 1}], "job_id_output_field": "docker", "fixed_parameters": [], "behavior": {"kb_service_method": "CuffdiffCall", "kb_service_version": "ee32dfed5c2ec485628ec0d854dd2bda0a268966", "kb_service_output_mapping": [{"target_property": "workspace", "narrative_system_variable": "workspace"}, {"target_property": "output", "input_parameter": "output_obj_name"}, {"target_property": "CuffdiffCall", "service_method_output_path": ["0"]}], "kb_service_url": "", "kb_service_name": "KBaseRNASeq", "kb_service_input_mapping": [{"target_property": "ws_id", "narrative_system_variable": "workspace"}, {"target_property": "expressionset_id", "input_parameter": "expressionset_id"}, {"target_property": "output_obj_name", "input_parameter": "output_obj_name"}, {"target_property": "num-threads", "input_parameter": "num-threads"}, {"target_property": "time-series", "input_parameter": "time-series"}, {"target_property": "multi-read-correct", "input_parameter": "multi-read-correct"}, {"target_property": "min-alignment-count", "input_parameter": "min-alignment-count"}, {"target_property": "labels", "input_parameter": "labels"}, {"target_property": "library-type", "input_parameter": "library-type"}, {"target_property": "library-norm-method", "input_parameter": "library-norm-method"}]}, "widgets": {"input": "null", "output": "kbaseRNASeqAnalysisNew"}}}}}, {"source": "<div id=\"kb-cell-out-6e4cd8ff-000e-4dbb-86c2-e78eca7e7b0e\"></div>\n<script>$(\"#kb-cell-out-6e4cd8ff-000e-4dbb-86c2-e78eca7e7b0e\").kbaseNarrativeOutputCell({\"data\":{\"nearCellIdx\":20,\"widget\":\"kbaseNarrativeDataCell\",\"info\":{\"id\":29,\"name\":\"Ptr_cuffdiff_new\",\"type\":\"KBaseRNASeq.RNASeqDifferentialExpression-3.0\",\"save_date\":\"2016-06-20T14:55:44+0000\",\"version\":1,\"saved_by\":\"sunita\",\"ws_id\":8136,\"ws_name\":\"sunita:1466434543657\",\"chsum\":\"37d54d1d742f2e9accdfebb4de167118\",\"size\":416,\"meta\":{}}}, \"type\":\"viewer\", \"widget\":\"kbaseNarrativeDataCell\", \"cellId\":\"kb-cell-out-6e4cd8ff-000e-4dbb-86c2-e78eca7e7b0e\", \"title\":\"Data Viewer\", \"time\":1466442756977});</script>", "cell_type": "markdown", "metadata": {"kbstate": {"title": "Ptr_cuffdiff_new", "selected": false, "icon": "<i class=\"fa fa-2x fa-table data-viewer-icon\"></i>"}, "kb-cell": {"widget": "kbaseNarrativeDataCell", "type": "function_output", "widget_state": [{"state": null, "time": 1466620258944}, {"state": null, "time": 1466612167990}]}}}, {"source": "<p id=Step6></p>\n### Step 6. View CummeRbund Plots\n\nThis method generates a number of plots for exploring, analyzing, and visualizing high-throughput RNA-seq data processed by Cuffdiff. These plots include, for example,  squared coefficient of variation (SCV) plots, a density plot of genes, box plots, pairwise scatter plots, volcano matrix plots, PCA plots, and multi-dimensional scaling plots. ", "cell_type": "markdown", "metadata": {"kbstate": {"title": "", "selected": false, "icon": ""}}}, {"source": "<div id='kb-cell-10-2ee767f3-5fab-43a8-968d-5ea2a482254a'></div>\n<script>$('#kb-cell-10-2ee767f3-5fab-43a8-968d-5ea2a482254a').kbaseNarrativeMethodCell({'method' : '{\"info\":{\"id\":\"kb_cummerbund/generate_cummerbund_plots\",\"module_name\":\"kb_cummerbund\",\"git_commit_hash\":\"1b93d82ceb5b9c40218f49aeaaa3f8511ad45cac\",\"name\":\"View CummeRbund Plots\",\"ver\":\"0.0.4\",\"subtitle\":\"Explore a variety of plots to visualize and easily navigate through data produced from RNA-Seq differential expression analysis in Cuffdiff.\\n\",\"tooltip\":\"Explore a variety of plots to visualize and easily navigate through data produced from RNA-Seq differential expression analysis in Cuffdiff.\\n\",\"icon\":{\"url\":\"img?method_id=kb_cummerbund/generate_cummerbund_plots&image_name=cummerbund-yellow.png&tag=dev\"},\"categories\":[\"active\",\"expression\"],\"authors\":[],\"input_types\":[\"KBaseRNASeq.RNASeqDifferentialExpression\"],\"output_types\":[],\"namespace\":\"kb_cummerbund\"},\"replacement_text\":\"Create Cummerbund plots\",\"widgets\":{\"input\":\"null\",\"output\":\"kbaseCummerbundPlot\"},\"parameters\":[{\"id\":\"ws_cuffdiff_id\",\"ui_name\":\"Cuffdiff Output\\n\",\"short_hint\":\"Differentially expressed data from Cuffdiff\\n\",\"description\":\"\",\"field_type\":\"text\",\"allow_multiple\":0,\"optional\":0,\"advanced\":0,\"disabled\":0,\"ui_class\":\"input\",\"default_values\":[\"\"],\"text_options\":{\"valid_ws_types\":[\"KBaseRNASeq.RNASeqDifferentialExpression\"],\"is_output_name\":0,\"placeholder\":\"\",\"regex_constraint\":[]}},{\"id\":\"ws_cummerbund_output\",\"ui_name\":\"CummeRbund Plots \\n\",\"short_hint\":\"Name of the CummeRbund Output\\n\",\"description\":\"\",\"field_type\":\"text\",\"allow_multiple\":0,\"optional\":0,\"advanced\":0,\"disabled\":0,\"ui_class\":\"parameter\",\"default_values\":[\"\"]}],\"fixed_parameters\":[],\"behavior\":{\"kb_service_url\":\"\",\"kb_service_name\":\"kb_cummerbund\",\"kb_service_version\":\"1b93d82ceb5b9c40218f49aeaaa3f8511ad45cac\",\"kb_service_method\":\"generate_cummerbund_plots\",\"kb_service_input_mapping\":[{\"narrative_system_variable\":\"workspace\",\"target_property\":\"workspace_name\"},{\"input_parameter\":\"ws_cuffdiff_id\",\"target_property\":\"ws_cuffdiff_id\"},{\"input_parameter\":\"ws_cummerbund_output\",\"target_property\":\"ws_cummerbund_output\"}],\"kb_service_output_mapping\":[{\"service_method_output_path\":[\"0\"],\"target_property\":\"generate_cummerbund_plots\"}]},\"job_id_output_field\":\"docker\"}', 'cellId' : 'kb-cell-10-2ee767f3-5fab-43a8-968d-5ea2a482254a'});</script>", "cell_type": "markdown", "metadata": {"kbstate": {"toggleState": "open", "title": "View CummeRbund Plots", "selected": true, "icon": "<img src=\"https://ci.kbase.us/services/narrative_method_store/img?method_id=kb_cummerbund/generate_cummerbund_plots&amp;image_name=cummerbund-yellow.png&amp;tag=dev\" style=\"max-width: 50px; max-height: 50px; cursor: default;\">"}, "kb-cell": {"widget_state": [{"state": {"runningState": {"outputState": false, "runState": "complete", "submittedText": "submitted on 09:45:20, 6/20/2016 by <a href=\"/#people/sunita\" target=\"_blank\">sunita</a>"}, "jobDetails": {"job_info": {"spec": {"parameterValues": ["Ptr_cuffdiff_new", "Ptr_plots"], "methodSpec": {"info": {"subtitle": "Explore a variety of plots to visualize and easily navigate through data produced from RNA-Seq differential expression analysis in Cuffdiff.", "name": "View CummeRbund Plots", "output_types": [], "namespace": "kb_cummerbund", "tooltip": "Explore a variety of plots to visualize and easily navigate through data produced from RNA-Seq differential expression analysis in Cuffdiff.", "git_commit_hash": "1b93d82ceb5b9c40218f49aeaaa3f8511ad45cac", "input_types": ["KBaseRNASeq.RNASeqDifferentialExpression"], "authors": [], "module_name": "kb_cummerbund", "ver": "0.0.4", "id": "kb_cummerbund/generate_cummerbund_plots", "categories": ["active", "expression"], "icon": {"url": "img?method_id=kb_cummerbund/generate_cummerbund_plots&image_name=cummerbund-yellow.png&tag=dev"}}, "parameters": [{"field_type": "text", "ui_name": "Cuffdiff Output", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "valid_ws_types": ["KBaseRNASeq.RNASeqDifferentialExpression"]}, "disabled": 0, "short_hint": "Differentially expressed data from Cuffdiff", "default_values": [""], "ui_class": "input", "optional": 0, "id": "ws_cuffdiff_id", "advanced": 0}, {"field_type": "text", "ui_name": "CummeRbund Plots ", "allow_multiple": 0, "description": "", "disabled": 0, "short_hint": "Name of the CummeRbund Output", "default_values": [""], "ui_class": "parameter", "optional": 0, "id": "ws_cummerbund_output", "advanced": 0}], "job_id_output_field": "docker", "fixed_parameters": [], "replacement_text": "Create Cummerbund plots", "behavior": {"kb_service_method": "generate_cummerbund_plots", "kb_service_version": "1b93d82ceb5b9c40218f49aeaaa3f8511ad45cac", "kb_service_output_mapping": [{"target_property": "generate_cummerbund_plots", "service_method_output_path": ["0"]}], "kb_service_url": "", "kb_service_name": "kb_cummerbund", "kb_service_input_mapping": [{"target_property": "workspace_name", "narrative_system_variable": "workspace"}, {"target_property": "ws_cuffdiff_id", "input_parameter": "ws_cuffdiff_id"}, {"target_property": "ws_cummerbund_output", "input_parameter": "ws_cummerbund_output"}]}, "widgets": {"input": "null", "output": "kbaseCummerbundPlot"}}}}, "job_state": {"status": "completed", "target": "", "$elem": "null", "timestamp": "2016-06-20T13:45:21.656Z", "source": "kb-cell-10-2ee767f3-5fab-43a8-968d-5ea2a482254a", "state": {"start_timestamp": 1466430321539, "is_deleted": 0, "job_id": "method:5767f370e4b08b89984c30f8", "complete_time": "2016-06-20T13:55:15.451Z", "start_time": "2016-06-20T13:45:32.390Z", "widget_outputs": {"generate_cummerbund_plots": "Ptr_plots"}, "step_job_ids": {"kb_cummerbund/generate_cummerbund_plots": "5767f370e4b08b89984c30f8"}, "step_stats": {"kb_cummerbund/generate_cummerbund_plots": {"finish_time": 1466430915451, "creation_time": 1466430321536, "awe_job_id": "1c03ad5d-4392-4e5c-9110-e607392dcf2f", "exec_start_time": 1466430332390}}, "step_outputs": {"kb_cummerbund/generate_cummerbund_plots": "[\"Ptr_plots\"]"}, "submit_time": "2016-06-20T13:45:21.536Z", "step_errors": {}, "job_state": "completed", "original_app": {"steps": [{"service": {"method_name": "generate_cummerbund_plots", "service_name": "kb_cummerbund", "service_url": "", "service_version": "1b93d82ceb5b9c40218f49aeaaa3f8511ad45cac"}, "script": {"method_name": "", "has_files": 0, "service_name": ""}, "method_spec_id": "kb_cummerbund/generate_cummerbund_plots", "input_values": [{"workspace_name": "sunita:1466104446131", "ws_cummerbund_output": "Ptr_plots", "ws_cuffdiff_id": "Ptr_cuffdiff_new"}], "step_id": "kb_cummerbund/generate_cummerbund_plots", "type": "service", "is_long_running": 1}], "name": "App wrapper for method kb_cummerbund/generate_cummerbund_plots"}}, "id": "method:5767f370e4b08b89984c30f8"}, "job_id": "method:5767f370e4b08b89984c30f8", "result": {"generate_cummerbund_plots": "Ptr_plots"}}, "params": {"ws_cummerbund_output": "Ptr_plots", "ws_cuffdiff_id": "Ptr_cuffdiff_new"}}, "time": 1466620258944}, {"state": {"runningState": {"outputState": false, "runState": "complete", "submittedText": "submitted on 09:45:20, 6/20/2016 by <a href=\"/#people/sunita\" target=\"_blank\">sunita</a>"}, "jobDetails": {"job_info": {"spec": {"parameterValues": ["Ptr_cuffdiff_new", "Ptr_plots"], "methodSpec": {"info": {"subtitle": "Explore a variety of plots to visualize and easily navigate through data produced from RNA-Seq differential expression analysis in Cuffdiff.", "name": "View CummeRbund Plots", "output_types": [], "namespace": "kb_cummerbund", "tooltip": "Explore a variety of plots to visualize and easily navigate through data produced from RNA-Seq differential expression analysis in Cuffdiff.", "git_commit_hash": "1b93d82ceb5b9c40218f49aeaaa3f8511ad45cac", "input_types": ["KBaseRNASeq.RNASeqDifferentialExpression"], "authors": [], "module_name": "kb_cummerbund", "ver": "0.0.4", "id": "kb_cummerbund/generate_cummerbund_plots", "categories": ["active", "expression"], "icon": {"url": "img?method_id=kb_cummerbund/generate_cummerbund_plots&image_name=cummerbund-yellow.png&tag=dev"}}, "parameters": [{"field_type": "text", "ui_name": "Cuffdiff Output", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "valid_ws_types": ["KBaseRNASeq.RNASeqDifferentialExpression"]}, "disabled": 0, "short_hint": "Differentially expressed data from Cuffdiff", "default_values": [""], "ui_class": "input", "optional": 0, "id": "ws_cuffdiff_id", "advanced": 0}, {"field_type": "text", "ui_name": "CummeRbund Plots ", "allow_multiple": 0, "description": "", "disabled": 0, "short_hint": "Name of the CummeRbund Output", "default_values": [""], "ui_class": "parameter", "optional": 0, "id": "ws_cummerbund_output", "advanced": 0}], "job_id_output_field": "docker", "fixed_parameters": [], "replacement_text": "Create Cummerbund plots", "behavior": {"kb_service_method": "generate_cummerbund_plots", "kb_service_version": "1b93d82ceb5b9c40218f49aeaaa3f8511ad45cac", "kb_service_output_mapping": [{"target_property": "generate_cummerbund_plots", "service_method_output_path": ["0"]}], "kb_service_url": "", "kb_service_name": "kb_cummerbund", "kb_service_input_mapping": [{"target_property": "workspace_name", "narrative_system_variable": "workspace"}, {"target_property": "ws_cuffdiff_id", "input_parameter": "ws_cuffdiff_id"}, {"target_property": "ws_cummerbund_output", "input_parameter": "ws_cummerbund_output"}]}, "widgets": {"input": "null", "output": "kbaseCummerbundPlot"}}}}, "job_state": {"status": "completed", "target": "", "$elem": "null", "timestamp": "2016-06-20T13:45:21.656Z", "source": "kb-cell-10-2ee767f3-5fab-43a8-968d-5ea2a482254a", "state": {"start_timestamp": 1466430321539, "is_deleted": 0, "job_id": "method:5767f370e4b08b89984c30f8", "complete_time": "2016-06-20T13:55:15.451Z", "start_time": "2016-06-20T13:45:32.390Z", "widget_outputs": {"generate_cummerbund_plots": "Ptr_plots"}, "step_job_ids": {"kb_cummerbund/generate_cummerbund_plots": "5767f370e4b08b89984c30f8"}, "step_stats": {"kb_cummerbund/generate_cummerbund_plots": {"finish_time": 1466430915451, "creation_time": 1466430321536, "awe_job_id": "1c03ad5d-4392-4e5c-9110-e607392dcf2f", "exec_start_time": 1466430332390}}, "step_outputs": {"kb_cummerbund/generate_cummerbund_plots": "[\"Ptr_plots\"]"}, "submit_time": "2016-06-20T13:45:21.536Z", "step_errors": {}, "job_state": "completed", "original_app": {"steps": [{"service": {"method_name": "generate_cummerbund_plots", "service_name": "kb_cummerbund", "service_url": "", "service_version": "1b93d82ceb5b9c40218f49aeaaa3f8511ad45cac"}, "script": {"method_name": "", "has_files": 0, "service_name": ""}, "method_spec_id": "kb_cummerbund/generate_cummerbund_plots", "input_values": [{"workspace_name": "sunita:1466104446131", "ws_cummerbund_output": "Ptr_plots", "ws_cuffdiff_id": "Ptr_cuffdiff_new"}], "step_id": "kb_cummerbund/generate_cummerbund_plots", "type": "service", "is_long_running": 1}], "name": "App wrapper for method kb_cummerbund/generate_cummerbund_plots"}}, "id": "method:5767f370e4b08b89984c30f8"}, "job_id": "method:5767f370e4b08b89984c30f8", "result": {"generate_cummerbund_plots": "Ptr_plots"}}, "params": {"ws_cummerbund_output": "Ptr_plots", "ws_cuffdiff_id": "Ptr_cuffdiff_new"}}, "time": 1466612167990}], "widget": "null", "type": "function_input", "method": {"info": {"subtitle": "Explore a variety of plots to visualize and easily navigate through data produced from RNA-Seq differential expression analysis in Cuffdiff.\n", "name": "View CummeRbund Plots", "output_types": [], "namespace": "kb_cummerbund", "tooltip": "Explore a variety of plots to visualize and easily navigate through data produced from RNA-Seq differential expression analysis in Cuffdiff.\n", "git_commit_hash": "1b93d82ceb5b9c40218f49aeaaa3f8511ad45cac", "input_types": ["KBaseRNASeq.RNASeqDifferentialExpression"], "authors": [], "module_name": "kb_cummerbund", "ver": "0.0.4", "id": "kb_cummerbund/generate_cummerbund_plots", "categories": ["active", "expression"], "icon": {"url": "img?method_id=kb_cummerbund/generate_cummerbund_plots&image_name=cummerbund-yellow.png&tag=dev"}}, "parameters": [{"field_type": "text", "ui_name": "Cuffdiff Output\n", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "valid_ws_types": ["KBaseRNASeq.RNASeqDifferentialExpression"]}, "disabled": 0, "short_hint": "Differentially expressed data from Cuffdiff\n", "default_values": [""], "ui_class": "input", "optional": 0, "id": "ws_cuffdiff_id", "advanced": 0}, {"field_type": "text", "ui_name": "CummeRbund Plots \n", "allow_multiple": 0, "description": "", "disabled": 0, "short_hint": "Name of the CummeRbund Output\n", "default_values": [""], "ui_class": "parameter", "optional": 0, "id": "ws_cummerbund_output", "advanced": 0}], "job_id_output_field": "docker", "fixed_parameters": [], "replacement_text": "Create Cummerbund plots", "behavior": {"kb_service_method": "generate_cummerbund_plots", "kb_service_version": "1b93d82ceb5b9c40218f49aeaaa3f8511ad45cac", "kb_service_output_mapping": [{"target_property": "generate_cummerbund_plots", "service_method_output_path": ["0"]}], "kb_service_url": "", "kb_service_name": "kb_cummerbund", "kb_service_input_mapping": [{"target_property": "workspace_name", "narrative_system_variable": "workspace"}, {"target_property": "ws_cuffdiff_id", "input_parameter": "ws_cuffdiff_id"}, {"target_property": "ws_cummerbund_output", "input_parameter": "ws_cummerbund_output"}]}, "widgets": {"input": "null", "output": "kbaseCummerbundPlot"}}}}}, {"source": "<div id=\"kb-cell-out-27f29c9e-3d7f-4451-ae56-64c2b8b92246\"></div>\n<script>$(\"#kb-cell-out-27f29c9e-3d7f-4451-ae56-64c2b8b92246\").kbaseNarrativeOutputCell({\"data\":{\"generate_cummerbund_plots\":\"Ptr_plots\"}, \"type\":\"method\", \"widget\":\"kbaseCummerbundPlot\", \"cellId\":\"kb-cell-out-27f29c9e-3d7f-4451-ae56-64c2b8b92246\", \"title\":\"View CummeRbund Plots\", \"time\":1466430922921});</script>", "cell_type": "markdown", "metadata": {"kbstate": {"title": "View CummeRbund Plots (method output)", "selected": false, "icon": "<i class=\"fa fa-2x fa-file-o method-output-icon\"></i>"}, "kb-cell": {"widget": "kbaseCummerbundPlot", "type": "function_output", "widget_state": [{"state": null, "time": 1466620258944}, {"state": null, "time": 1466612167990}]}}}, {"source": "<p id=Step7></p>\n### Step 7. Create Expression Matrix from Cuffdiff\n\nThis method creates an expression matrix based on the differentially expressed data obtained by the Cuffdiff method. The \"Replicates\" option allows you to get the expression matrix for all conditions and replicates. If this option is disabled, the method provides the expression values for each condition, averaged over replicates.", "cell_type": "markdown", "metadata": {"kbstate": {"title": "", "selected": false, "icon": ""}}}, {"source": "<div id='kb-cell-11-d7ad371e-46f5-478e-9632-0e94eda500f4'></div>\n<script>$('#kb-cell-11-d7ad371e-46f5-478e-9632-0e94eda500f4').kbaseNarrativeMethodCell({'method' : '{\"info\":{\"id\":\"kb_cummerbund/create_expression_matrix\",\"module_name\":\"kb_cummerbund\",\"git_commit_hash\":\"1b93d82ceb5b9c40218f49aeaaa3f8511ad45cac\",\"name\":\"Create Expression Matrix from Cuffdiff\",\"ver\":\"0.0.4\",\"subtitle\":\"Create the expression matrix for the differential expression data obtained from Cuffdiff step of the RNA-seq pipeline.\\n\",\"tooltip\":\"Create the expression matrix for the differential expression data obtained from Cuffdiff step of the RNA-seq pipeline.\\n\",\"icon\":{\"url\":\"img?method_id=kb_cummerbund/create_expression_matrix&image_name=cummerbund-yellow.png&tag=dev\"},\"categories\":[\"active\",\"expression\"],\"authors\":[],\"input_types\":[\"KBaseRNASeq.RNASeqDifferentialExpression\"],\"output_types\":[\"KBaseFeatureValues.ExpressionMatrix\"],\"namespace\":\"kb_cummerbund\"},\"widgets\":{\"input\":\"null\",\"output\":\"kbaseExpressionMatrix\"},\"parameters\":[{\"id\":\"ws_cuffdiff_id\",\"ui_name\":\"Cuffdiff Output\\n\",\"short_hint\":\"Differentially expressed data from Cuffdiff\\n\",\"description\":\"\",\"field_type\":\"text\",\"allow_multiple\":0,\"optional\":0,\"advanced\":0,\"disabled\":0,\"ui_class\":\"input\",\"default_values\":[\"\"],\"text_options\":{\"valid_ws_types\":[\"KBaseRNASeq.RNASeqDifferentialExpression\"],\"is_output_name\":0,\"placeholder\":\"\",\"regex_constraint\":[]}},{\"id\":\"include_replicates\",\"ui_name\":\"Replicates\\n\",\"short_hint\":\"Include replicates in the output expression matrix\\n\",\"description\":\"\",\"field_type\":\"checkbox\",\"allow_multiple\":0,\"optional\":0,\"advanced\":0,\"disabled\":0,\"ui_class\":\"parameter\",\"default_values\":[\"\"],\"checkbox_options\":{\"checked_value\":1,\"unchecked_value\":0}},{\"id\":\"ws_expression_matrix_id\",\"ui_name\":\"Expression Matrix\\n\",\"short_hint\":\"Provide name of the output expression matrix\\n\",\"description\":\"\",\"field_type\":\"text\",\"allow_multiple\":0,\"optional\":0,\"advanced\":0,\"disabled\":0,\"ui_class\":\"output\",\"default_values\":[\"\"],\"text_options\":{\"valid_ws_types\":[\"KBaseFeatureValues.ExpressionMatrix\"],\"is_output_name\":1,\"placeholder\":\"\",\"regex_constraint\":[]}}],\"fixed_parameters\":[],\"behavior\":{\"kb_service_url\":\"\",\"kb_service_name\":\"kb_cummerbund\",\"kb_service_version\":\"1b93d82ceb5b9c40218f49aeaaa3f8511ad45cac\",\"kb_service_method\":\"create_expression_matrix\",\"kb_service_input_mapping\":[{\"narrative_system_variable\":\"workspace\",\"target_property\":\"workspace_name\"},{\"input_parameter\":\"ws_cuffdiff_id\",\"target_property\":\"ws_cuffdiff_id\"},{\"input_parameter\":\"include_replicates\",\"target_property\":\"include_replicates\"},{\"input_parameter\":\"ws_expression_matrix_id\",\"target_property\":\"ws_expression_matrix_id\"}],\"kb_service_output_mapping\":[{\"input_parameter\":\"ws_expression_matrix_id\",\"target_property\":\"expressionMatrixID\"},{\"narrative_system_variable\":\"workspace\",\"target_property\":\"workspaceID\"},{\"service_method_output_path\":[\"0\"],\"target_property\":\"create_expression_matrix\"}]},\"job_id_output_field\":\"docker\"}', 'cellId' : 'kb-cell-11-d7ad371e-46f5-478e-9632-0e94eda500f4'});</script>", "cell_type": "markdown", "metadata": {"kbstate": {"title": "Create Expression Matrix from Cuffdiff", "selected": false, "icon": "<img src=\"https://ci.kbase.us/services/narrative_method_store/img?method_id=kb_cummerbund/create_expression_matrix&amp;image_name=cummerbund-yellow.png&amp;tag=dev\" style=\"max-width: 50px; max-height: 50px; cursor: default;\">"}, "kb-cell": {"widget_state": [{"state": {"runningState": {"outputState": false, "runState": "complete", "submittedText": "submitted on 11:26:16, 6/22/2016 by <a href=\"/#people/aparkin\" target=\"_blank\">aparkin</a>"}, "jobDetails": {"job_info": {"spec": {"parameterValues": ["Ptr_cuffdiff_new", 0, "Ptr_expmatrix"], "methodSpec": {"info": {"subtitle": "Create the expression matrix for the differential expression data obtained from Cuffdiff step of the RNA-seq pipeline.", "name": "Create Expression Matrix from Cuffdiff", "output_types": ["KBaseFeatureValues.ExpressionMatrix"], "namespace": "kb_cummerbund", "tooltip": "Create the expression matrix for the differential expression data obtained from Cuffdiff step of the RNA-seq pipeline.", "git_commit_hash": "1b93d82ceb5b9c40218f49aeaaa3f8511ad45cac", "input_types": ["KBaseRNASeq.RNASeqDifferentialExpression"], "authors": [], "module_name": "kb_cummerbund", "ver": "0.0.4", "id": "kb_cummerbund/create_expression_matrix", "categories": ["active", "expression"], "icon": {"url": "img?method_id=kb_cummerbund/create_expression_matrix&image_name=cummerbund-yellow.png&tag=dev"}}, "parameters": [{"field_type": "text", "ui_name": "Cuffdiff Output", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "valid_ws_types": ["KBaseRNASeq.RNASeqDifferentialExpression"]}, "disabled": 0, "short_hint": "Differentially expressed data from Cuffdiff", "default_values": [""], "ui_class": "input", "optional": 0, "id": "ws_cuffdiff_id", "advanced": 0}, {"field_type": "checkbox", "ui_name": "Replicates", "allow_multiple": 0, "description": "", "optional": 0, "disabled": 0, "short_hint": "Include replicates in the output expression matrix", "default_values": [""], "ui_class": "parameter", "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "id": "include_replicates", "advanced": 0}, {"field_type": "text", "ui_name": "Expression Matrix", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 1, "placeholder": "", "regex_constraint": [], "valid_ws_types": ["KBaseFeatureValues.ExpressionMatrix"]}, "disabled": 0, "short_hint": "Provide name of the output expression matrix", "default_values": [""], "ui_class": "output", "optional": 0, "id": "ws_expression_matrix_id", "advanced": 0}], "job_id_output_field": "docker", "fixed_parameters": [], "behavior": {"kb_service_method": "create_expression_matrix", "kb_service_version": "1b93d82ceb5b9c40218f49aeaaa3f8511ad45cac", "kb_service_output_mapping": [{"target_property": "expressionMatrixID", "input_parameter": "ws_expression_matrix_id"}, {"target_property": "workspaceID", "narrative_system_variable": "workspace"}, {"target_property": "create_expression_matrix", "service_method_output_path": ["0"]}], "kb_service_url": "", "kb_service_name": "kb_cummerbund", "kb_service_input_mapping": [{"target_property": "workspace_name", "narrative_system_variable": "workspace"}, {"target_property": "ws_cuffdiff_id", "input_parameter": "ws_cuffdiff_id"}, {"target_property": "include_replicates", "input_parameter": "include_replicates"}, {"target_property": "ws_expression_matrix_id", "input_parameter": "ws_expression_matrix_id"}]}, "widgets": {"input": "null", "output": "kbaseExpressionMatrix"}}}}, "job_state": {"status": "completed", "target": "", "$elem": "null", "timestamp": "2016-06-22T18:26:17.046Z", "source": "kb-cell-11-d7ad371e-46f5-478e-9632-0e94eda500f4", "state": {"start_timestamp": 1466619976236, "is_deleted": 0, "job_id": "method:576ad847e4b000fe6e787cd3", "complete_time": "2016-06-22T18:30:57.511Z", "start_time": "2016-06-22T18:26:20.359Z", "widget_outputs": {"workspaceID": "aparkin:1466611484825", "create_expression_matrix": "Ptr_expmatrix", "expressionMatrixID": "Ptr_expmatrix"}, "step_job_ids": {"kb_cummerbund/create_expression_matrix": "576ad847e4b000fe6e787cd3"}, "step_stats": {"kb_cummerbund/create_expression_matrix": {"finish_time": 1466620257511, "creation_time": 1466619976210, "awe_job_id": "366f7564-01df-40aa-9fd4-bf2e00a367fb", "exec_start_time": 1466619980359}}, "step_outputs": {"kb_cummerbund/create_expression_matrix": "[\"Ptr_expmatrix\"]"}, "submit_time": "2016-06-22T18:26:16.210Z", "step_errors": {}, "job_state": "completed", "original_app": {"steps": [{"service": {"method_name": "create_expression_matrix", "service_name": "kb_cummerbund", "service_url": "", "service_version": "1b93d82ceb5b9c40218f49aeaaa3f8511ad45cac"}, "script": {"method_name": "", "has_files": 0, "service_name": ""}, "method_spec_id": "kb_cummerbund/create_expression_matrix", "input_values": [{"ws_expression_matrix_id": "Ptr_expmatrix", "include_replicates": 0, "ws_cuffdiff_id": "Ptr_cuffdiff_new", "workspace_name": "aparkin:1466611484825"}], "step_id": "kb_cummerbund/create_expression_matrix", "type": "service", "is_long_running": 1}], "name": "App wrapper for method kb_cummerbund/create_expression_matrix"}}, "id": "method:576ad847e4b000fe6e787cd3"}, "job_id": "method:576ad847e4b000fe6e787cd3", "result": {"workspaceID": "aparkin:1466611484825", "create_expression_matrix": "Ptr_expmatrix", "expressionMatrixID": "Ptr_expmatrix"}}, "params": {"ws_expression_matrix_id": "Ptr_expmatrix", "include_replicates": 0, "ws_cuffdiff_id": "Ptr_cuffdiff_new"}}, "time": 1466620258944}, {"state": {"runningState": {"outputState": true, "runState": "submitted", "submittedText": "submitted on 11:26:16, 6/22/2016 by <a href=\"/#people/aparkin\" target=\"_blank\">aparkin</a>"}, "jobDetails": null, "params": {"ws_expression_matrix_id": "Ptr_expmatrix", "include_replicates": 0, "ws_cuffdiff_id": "Ptr_cuffdiff_new"}}, "time": 1466619976253}], "widget": "null", "type": "function_input", "method": {"info": {"subtitle": "Create the expression matrix for the differential expression data obtained from Cuffdiff step of the RNA-seq pipeline.\n", "name": "Create Expression Matrix from Cuffdiff", "output_types": ["KBaseFeatureValues.ExpressionMatrix"], "namespace": "kb_cummerbund", "tooltip": "Create the expression matrix for the differential expression data obtained from Cuffdiff step of the RNA-seq pipeline.\n", "git_commit_hash": "1b93d82ceb5b9c40218f49aeaaa3f8511ad45cac", "input_types": ["KBaseRNASeq.RNASeqDifferentialExpression"], "authors": [], "module_name": "kb_cummerbund", "ver": "0.0.4", "id": "kb_cummerbund/create_expression_matrix", "categories": ["active", "expression"], "icon": {"url": "img?method_id=kb_cummerbund/create_expression_matrix&image_name=cummerbund-yellow.png&tag=dev"}}, "parameters": [{"field_type": "text", "ui_name": "Cuffdiff Output\n", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "valid_ws_types": ["KBaseRNASeq.RNASeqDifferentialExpression"]}, "disabled": 0, "short_hint": "Differentially expressed data from Cuffdiff\n", "default_values": [""], "ui_class": "input", "optional": 0, "id": "ws_cuffdiff_id", "advanced": 0}, {"field_type": "checkbox", "ui_name": "Replicates\n", "allow_multiple": 0, "description": "", "optional": 0, "disabled": 0, "short_hint": "Include replicates in the output expression matrix\n", "default_values": [""], "ui_class": "parameter", "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "id": "include_replicates", "advanced": 0}, {"field_type": "text", "ui_name": "Expression Matrix\n", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 1, "placeholder": "", "regex_constraint": [], "valid_ws_types": ["KBaseFeatureValues.ExpressionMatrix"]}, "disabled": 0, "short_hint": "Provide name of the output expression matrix\n", "default_values": [""], "ui_class": "output", "optional": 0, "id": "ws_expression_matrix_id", "advanced": 0}], "job_id_output_field": "docker", "fixed_parameters": [], "behavior": {"kb_service_method": "create_expression_matrix", "kb_service_version": "1b93d82ceb5b9c40218f49aeaaa3f8511ad45cac", "kb_service_output_mapping": [{"target_property": "expressionMatrixID", "input_parameter": "ws_expression_matrix_id"}, {"target_property": "workspaceID", "narrative_system_variable": "workspace"}, {"target_property": "create_expression_matrix", "service_method_output_path": ["0"]}], "kb_service_url": "", "kb_service_name": "kb_cummerbund", "kb_service_input_mapping": [{"target_property": "workspace_name", "narrative_system_variable": "workspace"}, {"target_property": "ws_cuffdiff_id", "input_parameter": "ws_cuffdiff_id"}, {"target_property": "include_replicates", "input_parameter": "include_replicates"}, {"target_property": "ws_expression_matrix_id", "input_parameter": "ws_expression_matrix_id"}]}, "widgets": {"input": "null", "output": "kbaseExpressionMatrix"}}}}}, {"source": "<div id=\"kb-cell-out-572b8615-81ad-4b27-8c5b-7deafee30621\"></div>\n<script>$(\"#kb-cell-out-572b8615-81ad-4b27-8c5b-7deafee30621\").kbaseNarrativeOutputCell({\"data\":{\"create_expression_matrix\":\"Ptr_expmatrix\",\"workspaceID\":\"aparkin:1466611484825\",\"expressionMatrixID\":\"Ptr_expmatrix\"}, \"type\":\"method\", \"widget\":\"kbaseExpressionMatrix\", \"cellId\":\"kb-cell-out-572b8615-81ad-4b27-8c5b-7deafee30621\", \"title\":\"Create Expression Matrix from Cuffdiff\", \"time\":1466620258916});</script>", "cell_type": "markdown", "metadata": {"kbstate": {"title": "Create Expression Matrix from Cuffdiff (method output)", "icon": "<i class=\"fa fa-2x fa-file-o method-output-icon\"></i>"}, "kb-cell": {"widget": "kbaseExpressionMatrix", "type": "function_output", "widget_state": [{"state": null, "time": 1466620258944}]}}}, {"source": "<div id=\"kb-cell-out-75681bd4-4948-491a-9b6b-c9e9821d42aa\"></div>\n<script>$(\"#kb-cell-out-75681bd4-4948-491a-9b6b-c9e9821d42aa\").kbaseNarrativeOutputCell({\"data\":{\"create_expression_matrix\":\"Ptr_expmatrix\",\"workspaceID\":\"sunita:1466104446131\",\"expressionMatrixID\":\"Ptr_expmatrix\"}, \"type\":\"method\", \"widget\":\"kbaseExpressionMatrix\", \"cellId\":\"kb-cell-out-75681bd4-4948-491a-9b6b-c9e9821d42aa\", \"title\":\"Create Expression Matrix from Cuffdiff\", \"time\":1466430991441});</script>", "cell_type": "markdown", "metadata": {"kbstate": {"title": "Create Expression Matrix from Cuffdiff (method output)", "selected": true, "icon": "<i class=\"fa fa-2x fa-file-o method-output-icon\"></i>"}, "kb-cell": {"widget": "kbaseExpressionMatrix", "type": "function_output", "widget_state": [{"state": null, "time": 1466620258944}, {"state": null, "time": 1466612167991}]}}}], "metadata": {"kernelspec": {"display_name": "Python 2", "name": "python2", "language": "python"}, "language_info": {"mimetype": "text/x-python", "nbconvert_exporter": "python", "name": "python", "file_extension": ".py", "version": "2.7.6", "pygments_lexer": "ipython2", "codemirror_mode": {"version": 2, "name": "ipython"}}, "description": "", "format": "ipynb", "creator": "sunita", "data_dependencies": [], "ws_name": "aparkin:1466611484825", "type": "KBaseNarrative.Narrative", "job_ids": {"job_usage": {"queue_time": 12211, "run_time": 679021}, "apps": [], "methods": [{"status": "suspend", "target": "", "$elem": "null", "timestamp": "2016-06-22T16:12:29.026Z", "source": "kb-cell-23-b9b45d81-3ecf-4ca8-9bdf-62a0eba25f2f", "state": {"start_timestamp": 1466611948223, "is_deleted": 0, "job_id": "method:576ab8ece4b000fe6e787ca7", "complete_time": "2016-06-22T16:14:17.320Z", "step_job_ids": {"KBaseRNASeq/build_bowtie2_index": "576ab8ece4b000fe6e787ca7"}, "job_state": "suspend", "running_step_id": "KBaseRNASeq/build_bowtie2_index", "step_stats": {"KBaseRNASeq/build_bowtie2_index": {"finish_time": 1466612057320, "creation_time": 1466611948220, "awe_job_id": "7722874d-8fba-4329-b7cb-05dc93c7e695", "exec_start_time": 1466611951421}}, "step_outputs": {}, "submit_time": "2016-06-22T16:12:28.220Z", "step_errors": {"KBaseRNASeq/build_bowtie2_index": "Fatal error: java.lang.IllegalStateException: Output file is not found, exit code is 123\n\tat us.kbase.narrativejobservice.sdkjobs.DockerRunner.run(DockerRunner.java:159)\n\tat us.kbase.narrativejobservice.sdkjobs.SDKLocalMethodRunner.main(SDKLocalMethodRunner.java:309)\n\nConsole output/error logs:\nRunning on ci49 (10.58.1.149), in /mnt/awe-nfs/ci49/awe/ci-assembly/work/77/22/87/7722874d-8fba-4329-b7cb-05dc93c7e695_0_0\nClient group: ci-assembly\nImage name received from catalog: dockerhub-ci.kbase.us/kbase:kbasernaseq.d076c01c6d6ca2084b67023790846e2dbff17cfd\nJob runner recieved callback URL: http://172.17.42.1:54255\n/kb/module/scripts\n2016-06-22 16:14:11,822 - KBaseRNASeqImpl.py - 151 - INFO - Logger was set\n2016-06-22 16:14:12,441 - KBaseRNASeqImpl.py - 270 - INFO - Generating FASTA from Genome Annotation\n2016-06-22 16:14:12,868 - script_util.py - 47 - INFO - Generating FASTA file from Assembly for Ptricocarpa_ensembl\n2016-06-22 16:14:16,742 - KBaseRNASeqImpl.py - 281 - ERROR - Traceback (most recent call last):\n  File \"/kb/module/lib/biokbase/RNASeq/KBaseRNASeqImpl.py\", line 274, in BuildBowtie2Index\n    output_file = script_util.generate_fasta(self.__LOGGER,self.__SERVICES,user_token,genome_id,bowtie_dir,params['reference'])\n  File \"/kb/module/lib/biokbase/RNASeq/script_util.py\", line 54, in generate_fasta\n    raise Exception(\"Unable to Create FASTA file from Genome Annotation : {0}\".format(obj_name))\nException: Unable to Create FASTA file from Genome Annotation : Ptricocarpa_ensembl\nTraceback (most recent call last):\n  File \"/kb/module/lib/biokbase/RNASeq/KBaseRNASeqImpl.py\", line 274, in BuildBowtie2Index\n    output_file = script_util.generate_fasta(self.__LOGGER,self.__SERVICES,user_token,genome_id,bowtie_dir,params['reference'])\n  File \"/kb/module/lib/biokbase/RNASeq/script_util.py\", line 54, in generate_fasta\n    raise Exception(\"Unable to Create FASTA file from Genome Annotation : {0}\".format(obj_name))\nException: Unable to Create FASTA file from Genome Annotation : Ptricocarpa_ensembl\nTraceback (most recent call last):\n  File \"/kb/module/lib/biokbase/RNASeq/KBaseRNASeq.py\", line 619, in <module>\n    sys.exit(process_async_cli(sys.argv[1], sys.argv[2], token))\n  File \"/kb/module/lib/biokbase/RNASeq/KBaseRNASeq.py\", line 584, in process_async_cli\n    resp = application.rpc_service.call_py(ctx, req)\n  File \"/kb/module/lib/biokbase/RNASeq/KBaseRNASeq.py\", line 137, in call_py\n    respond = self._handle_request(ctx, request)\n  File \"/kb/module/lib/biokbase/RNASeq/KBaseRNASeq.py\", line 175, in _handle_request\n    result = self._call_method(ctx, request)\n  File \"/kb/module/lib/biokbase/RNASeq/KBaseRNASeq.py\", line 93, in _call_method\n    result = method(ctx, *params)\n  File \"/kb/module/lib/biokbase/RNASeq/KBaseRNASeqImpl.py\", line 347, in BuildBowtie2Index\n    raise KBaseRNASeqException(\"Build Bowtie2Index failed: {0}\".format(\"\".join(traceback.format_exc())))\nbiokbase.RNASeq.KBaseRNASeqImpl.KBaseRNASeqException: 'Build Bowtie2Index failed: Traceback (most recent call last):\\n  File \"/kb/module/lib/biokbase/RNASeq/KBaseRNASeqImpl.py\", line 282, in BuildBowtie2Index\\n    raise ValueError(\\'Unable to get FASTA for object {}\\'.format(\"\".join(traceback.format_exc())))\\nValueError: Unable to get FASTA for object Traceback (most recent call last):\\n  File \"/kb/module/lib/biokbase/RNASeq/KBaseRNASeqImpl.py\", line 274, in BuildBowtie2Index\\n    output_file = script_util.generate_fasta(self.__LOGGER,self.__SERVICES,user_token,genome_id,bowtie_dir,params[\\'reference\\'])\\n  File \"/kb/module/lib/biokbase/RNASeq/script_util.py\", line 54, in generate_fasta\\n    raise Exception(\"Unable to Create FASTA file from Genome Annotation : {0}\".format(obj_name))\\nException: Unable to Create FASTA file from Genome Annotation : Ptricocarpa_ensembl\\n\\n'\nFatal error: java.lang.IllegalStateException: Output file is not found, exit code is 123\n\tat us.kbase.narrativejobservice.sdkjobs.DockerRunner.run(DockerRunner.java:159)\n\tat us.kbase.narrativejobservice.sdkjobs.SDKLocalMethodRunner.main(SDKLocalMethodRunner.java:309)\n\n"}, "start_time": "2016-06-22T16:12:31.421Z", "original_app": {"steps": [{"service": {"method_name": "BuildBowtie2Index", "service_name": "KBaseRNASeq", "service_url": "", "service_version": "d076c01c6d6ca2084b67023790846e2dbff17cfd"}, "script": {"method_name": "", "has_files": 0, "service_name": ""}, "method_spec_id": "KBaseRNASeq/build_bowtie2_index", "input_values": [{"output_obj_name": "Ptr_bowtie2_indexed2", "ws_id": "aparkin:1466611484825", "reference": "Ptricocarpa_ensembl"}], "step_id": "KBaseRNASeq/build_bowtie2_index", "type": "service", "is_long_running": 1}], "name": "App wrapper for method KBaseRNASeq/build_bowtie2_index"}}, "id": "method:576ab8ece4b000fe6e787ca7"}, {"status": "completed", "target": "", "$elem": "null", "timestamp": "2016-06-22T16:12:51.310Z", "source": "kb-cell-1-c3bce319-9fea-4af1-ad1b-4f91aff8f43a", "state": {"start_timestamp": 1466611970508, "is_deleted": 0, "job_id": "method:576ab902e4b000fe6e787ca8", "complete_time": "2016-06-22T16:16:05.295Z", "start_time": "2016-06-22T16:12:53.276Z", "widget_outputs": {"CreateRNASeqSampleSet": {"Library_type": "pairedEnd", "domain": "Eukaryotes", "sample_ids": ["Root_Control_set_2_Replicate_1", "Root_Control_set_2_Replicate_2", "Root_Control_set_2_Replicate_3", "Root_prolonged_drought_Replicate_1", "Root_prolonged_drought_Replicate_2", "Root_prolonged_drought_Replicate_3"], "source": "private", "publication_id": "unpublished", "platform": "illumina", "sampleset_id": "Ptr_prolongdrought_test", "num_samples": 6, "sampleset_desc": "Poplar with 6 samples ", "condition": ["control", "control", "control", "prolongDrought", "prolongDrought", "prolongDrought"]}, "workspace": "aparkin:1466611484825", "output": "Ptr_prolongdrought_test"}, "step_job_ids": {"KBaseRNASeq/describe_rnaseq_experiment": "576ab902e4b000fe6e787ca8"}, "step_stats": {"KBaseRNASeq/describe_rnaseq_experiment": {"finish_time": 1466612165295, "creation_time": 1466611970489, "awe_job_id": "f1ba49eb-2880-449f-ab7f-f399f5302e46", "exec_start_time": 1466611973276}}, "step_outputs": {"KBaseRNASeq/describe_rnaseq_experiment": "[{\"Library_type\":\"pairedEnd\",\"platform\":\"illumina\",\"publication_id\":\"unpublished\",\"source\":\"private\",\"condition\":[\"control\",\"control\",\"control\",\"prolongDrought\",\"prolongDrought\",\"prolongDrought\"],\"domain\":\"Eukaryotes\",\"sampleset_id\":\"Ptr_prolongdrought_test\",\"sample_ids\":[\"Root_Control_set_2_Replicate_1\",\"Root_Control_set_2_Replicate_2\",\"Root_Control_set_2_Replicate_3\",\"Root_prolonged_drought_Replicate_1\",\"Root_prolonged_drought_Replicate_2\",\"Root_prolonged_drought_Replicate_3\"],\"num_samples\":6,\"sampleset_desc\":\"Poplar with 6 samples \"}]"}, "submit_time": "2016-06-22T16:12:50.489Z", "step_errors": {}, "job_state": "completed", "original_app": {"steps": [{"service": {"method_name": "CreateRNASeqSampleSet", "service_name": "KBaseRNASeq", "service_url": "", "service_version": "9283ae31ace5a743963d0d0e007d812c7b72dfa1"}, "script": {"method_name": "", "has_files": 0, "service_name": ""}, "method_spec_id": "KBaseRNASeq/describe_rnaseq_experiment", "input_values": [{"Library_type": "pairedEnd", "domain": "Eukaryotes", "sample_ids": ["Root_Control_set_2_Replicate_1", "Root_Control_set_2_Replicate_2", "Root_Control_set_2_Replicate_3", "Root_prolonged_drought_Replicate_1", "Root_prolonged_drought_Replicate_2", "Root_prolonged_drought_Replicate_3"], "source": "private", "publication_id": "unpublished", "platform": "illumina", "sampleset_id": "Ptr_prolongdrought_test", "sampleset_desc": "Poplar with 6 samples ", "ws_id": "aparkin:1466611484825", "condition": ["control", "control", "control", "prolongDrought", "prolongDrought", "prolongDrought"]}], "step_id": "KBaseRNASeq/describe_rnaseq_experiment", "type": "service", "is_long_running": 1}], "name": "App wrapper for method KBaseRNASeq/describe_rnaseq_experiment"}}, "id": "method:576ab902e4b000fe6e787ca8"}, {"source": "kb-cell-3-e88c735c-0173-48df-8b5e-87640b702ea9", "id": "method:576ac323e4b000fe6e787cb0", "timestamp": "2016-06-22T16:56:04.116Z", "target": ""}, {"status": "completed", "target": "", "$elem": "null", "timestamp": "2016-06-22T18:26:17.046Z", "source": "kb-cell-11-d7ad371e-46f5-478e-9632-0e94eda500f4", "state": {"start_timestamp": 1466619976236, "is_deleted": 0, "job_id": "method:576ad847e4b000fe6e787cd3", "complete_time": "2016-06-22T18:30:57.511Z", "start_time": "2016-06-22T18:26:20.359Z", "widget_outputs": {"workspaceID": "aparkin:1466611484825", "create_expression_matrix": "Ptr_expmatrix", "expressionMatrixID": "Ptr_expmatrix"}, "step_job_ids": {"kb_cummerbund/create_expression_matrix": "576ad847e4b000fe6e787cd3"}, "step_stats": {"kb_cummerbund/create_expression_matrix": {"finish_time": 1466620257511, "creation_time": 1466619976210, "awe_job_id": "366f7564-01df-40aa-9fd4-bf2e00a367fb", "exec_start_time": 1466619980359}}, "step_outputs": {"kb_cummerbund/create_expression_matrix": "[\"Ptr_expmatrix\"]"}, "submit_time": "2016-06-22T18:26:16.210Z", "step_errors": {}, "job_state": "completed", "original_app": {"steps": [{"service": {"method_name": "create_expression_matrix", "service_name": "kb_cummerbund", "service_url": "", "service_version": "1b93d82ceb5b9c40218f49aeaaa3f8511ad45cac"}, "script": {"method_name": "", "has_files": 0, "service_name": ""}, "method_spec_id": "kb_cummerbund/create_expression_matrix", "input_values": [{"ws_expression_matrix_id": "Ptr_expmatrix", "include_replicates": 0, "ws_cuffdiff_id": "Ptr_cuffdiff_new", "workspace_name": "aparkin:1466611484825"}], "step_id": "kb_cummerbund/create_expression_matrix", "type": "service", "is_long_running": 1}], "name": "App wrapper for method kb_cummerbund/create_expression_matrix"}}, "id": "method:576ad847e4b000fe6e787cd3"}]}, "name": "Poplar Roots Transcriptome Analysis Under Drought Stress Demo - Copy"}}, "extracted_ids": {}}